{
  "name": "TokenDrop",
  "desc": "",
  "methods": [
    {
      "name": "createApplication",
      "args": [
        {
          "name": "nfdRegistryId",
          "type": "uint64"
        },
        {
          "name": "maintainerAddress",
          "type": "address"
        }
      ],
      "returns": {
        "type": "void"
      },
      "actions": {
        "create": [
          "NoOp"
        ],
        "call": []
      }
    },
    {
      "name": "updateApplication",
      "args": [],
      "returns": {
        "type": "void"
      },
      "actions": {
        "create": [],
        "call": [
          "UpdateApplication"
        ]
      }
    },
    {
      "name": "changeMaintainer",
      "desc": "Updates the maintainer address of the application.\n\n\nThis method allows the creator of the application to set a new maintainer address for receiving half the creation\nfees",
      "args": [
        {
          "name": "newMaintainer",
          "type": "address"
        }
      ],
      "returns": {
        "type": "void"
      },
      "actions": {
        "create": [],
        "call": [
          "NoOp"
        ]
      }
    },
    {
      "name": "changeFees",
      "desc": "Updates the creation fee amount required at drop creation (split between maintainer and fee sink)\nThis method can only be called by the creator of the application and the fee must be at least 2 ALGO\n1 ALGO to maintainer address, 1 to fee sink.\nThe per-claim fee has to be at least double the per-claim MBR.\nAt claim, 50% is sent to the maintainer address, the mbr is subtracted out, and remainder goes to fee sink",
      "args": [
        {
          "name": "creationFee",
          "type": "uint64"
        },
        {
          "name": "perClaimFee",
          "type": "uint64"
        }
      ],
      "returns": {
        "type": "void"
      },
      "actions": {
        "create": [],
        "call": [
          "NoOp"
        ]
      }
    },
    {
      "name": "optinAsset",
      "desc": "Opts in the application to an asset if not already opted in.\nVerifies the provided payment transaction for sufficient funding to cover\nthe minimum balance required for asset opt-in and relevant transaction fees (.102 algo)\nInitiates an asset transfer transaction to complete the opt-in process.",
      "args": [
        {
          "name": "mbrPayment",
          "type": "pay",
          "desc": "The payment transaction covering the minimum balance and fees."
        },
        {
          "name": "assetId",
          "type": "uint64",
          "desc": "The unique identifier of the asset to opt into."
        }
      ],
      "returns": {
        "type": "void"
      },
      "actions": {
        "create": [],
        "call": [
          "NoOp"
        ]
      }
    },
    {
      "name": "getDropCreateCost",
      "desc": "Calculates the fees required and MBR costs required for box storage for creating a drop with a specified maximum\nnumber of claimers.  This fee must be sent as a payment to the contract prior to the call to createDrop.\nThe actual fee (creationFeeAmount) is split between a maintainer account and the fee sink.  The fee is to help\nprevent 'spam' drops or drops created solely to block drops for specific assets.\n\n\n uint64 The total MBR required to cover the necessary up-front box storage costs.",
      "readonly": true,
      "args": [],
      "returns": {
        "type": "uint64"
      },
      "actions": {
        "create": [],
        "call": [
          "NoOp"
        ]
      }
    },
    {
      "name": "getPerClaimerMbrCost",
      "desc": "Returns the MBR box cost for a single claimer (claimable by anyone later)",
      "readonly": true,
      "args": [],
      "returns": {
        "type": "uint64"
      },
      "actions": {
        "create": [],
        "call": [
          "NoOp"
        ]
      }
    },
    {
      "name": "getPerClaimerFee",
      "desc": "Returns the per-claim fee paid (not reclaimable)",
      "readonly": true,
      "args": [],
      "returns": {
        "type": "uint64"
      },
      "actions": {
        "create": [],
        "call": [
          "NoOp"
        ]
      }
    },
    {
      "name": "getDropInfo",
      "desc": "Retrieves the TokenDropInfo struct for a specific (still active) token drop based on the provided token drop ID.",
      "readonly": true,
      "args": [
        {
          "name": "tokenDropId",
          "type": "uint64",
          "desc": "The unique identifier for the token drop.\n TokenDropInfo An object containing details about the specified token drop."
        }
      ],
      "returns": {
        "type": "(uint64,address,uint64,uint64,uint64,(uint64,uint64,uint64,uint8,address,uint64[4],uint64))",
        "struct": "TokenDropInfo"
      },
      "actions": {
        "create": [],
        "call": [
          "NoOp"
        ]
      }
    },
    {
      "name": "createDrop",
      "desc": "Creates a new token drop and registers it in the system.\n\n\nThis method validates and processes a token drop, ensuring all required conditions\nare met. It registers the token drop with an assigned unique DropId, updates the\nrelevant state variables, and ensures that the drop complies with gating rules\nand limits.",
      "args": [
        {
          "name": "feeAndMbrPayment",
          "type": "pay",
          "desc": "proceeding payment txn into contract account to cover extra mbr needed for box\nstorage as well as FUTURE box storage for all possible claims.  ie: 10K tokens, 1K each - 10 possible claims,\nso the cost per claim - the drop creator has to pay that upfront as well."
        },
        {
          "name": "assetTxn",
          "type": "axfer",
          "desc": "The asset transfer transaction that transfers tokens for this drop."
        },
        {
          "name": "tokenDropConfig",
          "type": "(uint64,uint64,uint64,uint8,address,uint64[4],uint64)",
          "desc": "The metadata related to the token drop, including drop creator, token details,\n                                       amount per claim, airdrop end time, and related gating info.\n uint64 Returns the token drop id assigned for this drop.",
          "struct": "TokenDropConfig"
        }
      ],
      "returns": {
        "type": "uint64"
      },
      "actions": {
        "create": [],
        "call": [
          "NoOp"
        ]
      }
    },
    {
      "name": "cancelDrop",
      "args": [
        {
          "name": "tokenDropId",
          "type": "uint64"
        }
      ],
      "returns": {
        "type": "void"
      },
      "actions": {
        "create": [],
        "call": [
          "NoOp"
        ]
      }
    },
    {
      "name": "claimDrop",
      "desc": "Processes a claim request for a specific token drop, ensuring compliance with all validation rules and conditions.",
      "args": [
        {
          "name": "feeAndMbrPayment",
          "type": "pay",
          "desc": "The payment transaction object provided by the claimant to cover necessary fees."
        },
        {
          "name": "tokenDropId",
          "type": "uint64",
          "desc": "The unique identifier of the token drop being claimed."
        },
        {
          "name": "valueToVerify",
          "type": "uint64",
          "desc": "An optional value used for claim gating verification."
        }
      ],
      "returns": {
        "type": "void"
      },
      "actions": {
        "create": [],
        "call": [
          "NoOp"
        ]
      }
    },
    {
      "name": "claimClaimerBoxCost",
      "args": [
        {
          "name": "tokenDropId",
          "type": "uint64"
        },
        {
          "name": "claimerAddress",
          "type": "address"
        },
        {
          "name": "receiver",
          "type": "address"
        }
      ],
      "returns": {
        "type": "void"
      },
      "actions": {
        "create": [],
        "call": [
          "NoOp"
        ]
      }
    },
    {
      "name": "cleanupDrop",
      "desc": "Cleans up an expired token drop by performing necessary actions such as refunding remaining tokens\nto the drop creator and removing the drop from the active drops.\nCalled if a new drop is created for the same asset id, and by anyone (presumably creator) if a drop is expired/empty.\nAlso called if the creator cancels the drop early.",
      "args": [
        {
          "name": "tokenDropId",
          "type": "uint64",
          "desc": "The identifier of the token drop to be cleaned up.\n void This method does not return a value."
        }
      ],
      "returns": {
        "type": "void"
      },
      "actions": {
        "create": [],
        "call": [
          "NoOp"
        ]
      }
    }
  ],
  "arcs": [
    4,
    56
  ],
  "structs": {
    "TokenDropInfo": [
      {
        "name": "DropId",
        "type": "uint64"
      },
      {
        "name": "DropCreator",
        "type": "address"
      },
      {
        "name": "AmountRemaining",
        "type": "uint64"
      },
      {
        "name": "MaxClaims",
        "type": "uint64"
      },
      {
        "name": "NumClaims",
        "type": "uint64"
      },
      {
        "name": "Config",
        "type": [
          {
            "name": "Token",
            "type": "uint64"
          },
          {
            "name": "AmountPerClaim",
            "type": "uint64"
          },
          {
            "name": "AirdropEndTime",
            "type": "uint64"
          },
          {
            "name": "entryGatingType",
            "type": "uint8"
          },
          {
            "name": "entryGatingAddress",
            "type": "address"
          },
          {
            "name": "entryGatingAssets",
            "type": "uint64[4]"
          },
          {
            "name": "gatingAssetMinBalance",
            "type": "uint64"
          }
        ]
      }
    ],
    "ClaimedInfo": [
      {
        "name": "TxnId",
        "type": "byte[32]"
      }
    ],
    "AddressClaimKey": [
      {
        "name": "TokenDropId",
        "type": "uint64"
      },
      {
        "name": "Address",
        "type": "address"
      }
    ],
    "TokenDropConfig": [
      {
        "name": "Token",
        "type": "uint64"
      },
      {
        "name": "AmountPerClaim",
        "type": "uint64"
      },
      {
        "name": "AirdropEndTime",
        "type": "uint64"
      },
      {
        "name": "entryGatingType",
        "type": "uint8"
      },
      {
        "name": "entryGatingAddress",
        "type": "address"
      },
      {
        "name": "entryGatingAssets",
        "type": "uint64[4]"
      },
      {
        "name": "gatingAssetMinBalance",
        "type": "uint64"
      }
    ]
  },
  "state": {
    "schema": {
      "global": {
        "bytes": 5,
        "ints": 5
      },
      "local": {
        "bytes": 0,
        "ints": 0
      }
    },
    "keys": {
      "global": {
        "nfdRegistryAppId": {
          "key": "bmZkUmVnaXN0cnlJZA==",
          "keyType": "AVMBytes",
          "valueType": "uint64"
        },
        "maintainerAddress": {
          "key": "bWFpbnRhaW5lckFkZHJlc3M=",
          "keyType": "AVMBytes",
          "valueType": "address"
        },
        "creationFeeAmount": {
          "key": "Y3JlYXRpb25GZWVBbW91bnQ=",
          "keyType": "AVMBytes",
          "valueType": "uint64"
        },
        "perClaimFeeAmount": {
          "key": "cGVyQ2xhaW1GZWVBbW91bnQ=",
          "keyType": "AVMBytes",
          "valueType": "uint64"
        },
        "totalClaims": {
          "key": "dG90YWxDbGFpbXM=",
          "keyType": "AVMBytes",
          "valueType": "uint64"
        },
        "lastDropId": {
          "key": "bGFzdERyb3BJZA==",
          "keyType": "AVMBytes",
          "valueType": "uint64"
        }
      },
      "local": {},
      "box": {}
    },
    "maps": {
      "global": {
        "placeholder": {
          "keyType": "AVMBytes",
          "valueType": "AVMBytes",
          "prefix": "bmV2ZXJ1c2Vk"
        }
      },
      "local": {},
      "box": {
        "allDrops": {
          "keyType": "uint64",
          "valueType": "TokenDropInfo",
          "prefix": "ZA=="
        },
        "dropForToken": {
          "keyType": "uint64",
          "valueType": "uint64",
          "prefix": "dG9r"
        },
        "claimedMap": {
          "keyType": "AddressClaimKey",
          "valueType": "ClaimedInfo",
          "prefix": "Yw=="
        }
      }
    }
  },
  "bareActions": {
    "create": [],
    "call": []
  },
  "sourceInfo": {
    "approval": {
      "sourceInfo": [
        {
          "teal": 1,
          "source": "contracts/TokenDrop.algo.ts:32",
          "pc": [
            0
          ]
        },
        {
          "teal": 2,
          "source": "contracts/TokenDrop.algo.ts:32",
          "pc": [
            1,
            2,
            3,
            4,
            5,
            6,
            7,
            8,
            9,
            10,
            11,
            12,
            13,
            14,
            15
          ]
        },
        {
          "teal": 3,
          "source": "contracts/TokenDrop.algo.ts:32",
          "pc": [
            16,
            17,
            18,
            19,
            20,
            21,
            22,
            23,
            24,
            25,
            26,
            27,
            28,
            29,
            30,
            31,
            32,
            33,
            34,
            35,
            36,
            37,
            38,
            39,
            40,
            41,
            42,
            43,
            44,
            45,
            46,
            47,
            48,
            49,
            50,
            51,
            52,
            53,
            54,
            55,
            56,
            57,
            58,
            59,
            60,
            61,
            62,
            63,
            64,
            65,
            66,
            67,
            68,
            69,
            70,
            71,
            72,
            73,
            74,
            75,
            76,
            77,
            78,
            79,
            80,
            81,
            82,
            83,
            84,
            85,
            86,
            87,
            88,
            89,
            90,
            91,
            92,
            93,
            94,
            95,
            96,
            97,
            98,
            99,
            100,
            101,
            102,
            103,
            104,
            105,
            106,
            107,
            108,
            109,
            110,
            111,
            112,
            113,
            114,
            115,
            116,
            117,
            118,
            119,
            120,
            121,
            122,
            123,
            124,
            125,
            126,
            127,
            128,
            129,
            130,
            131,
            132,
            133,
            134,
            135,
            136,
            137,
            138,
            139,
            140,
            141,
            142,
            143,
            144,
            145,
            146,
            147,
            148,
            149,
            150,
            151
          ]
        },
        {
          "teal": 15,
          "source": "contracts/TokenDrop.algo.ts:32",
          "pc": [
            152,
            153
          ]
        },
        {
          "teal": 16,
          "source": "contracts/TokenDrop.algo.ts:32",
          "pc": [
            154
          ]
        },
        {
          "teal": 17,
          "source": "contracts/TokenDrop.algo.ts:32",
          "pc": [
            155,
            156
          ]
        },
        {
          "teal": 18,
          "source": "contracts/TokenDrop.algo.ts:32",
          "pc": [
            157
          ]
        },
        {
          "teal": 19,
          "source": "contracts/TokenDrop.algo.ts:32",
          "pc": [
            158,
            159
          ]
        },
        {
          "teal": 20,
          "source": "contracts/TokenDrop.algo.ts:32",
          "pc": [
            160
          ]
        },
        {
          "teal": 21,
          "source": "contracts/TokenDrop.algo.ts:32",
          "pc": [
            161,
            162,
            163,
            164,
            165,
            166,
            167,
            168,
            169,
            170,
            171,
            172,
            173,
            174,
            175,
            176,
            177,
            178,
            179,
            180,
            181,
            182,
            183,
            184,
            185,
            186
          ]
        },
        {
          "teal": 25,
          "source": "contracts/TokenDrop.algo.ts:32",
          "errorMessage": "The requested action is not implemented in this contract. Are you using the correct OnComplete? Did you set your app ID?",
          "pc": [
            187
          ]
        },
        {
          "teal": 30,
          "source": "contracts/TokenDrop.algo.ts:87",
          "pc": [
            188,
            189,
            190
          ]
        },
        {
          "teal": 31,
          "source": "contracts/TokenDrop.algo.ts:87",
          "pc": [
            191
          ]
        },
        {
          "teal": 32,
          "source": "contracts/TokenDrop.algo.ts:87",
          "pc": [
            192
          ]
        },
        {
          "teal": 33,
          "source": "contracts/TokenDrop.algo.ts:87",
          "pc": [
            193
          ]
        },
        {
          "teal": 34,
          "source": "contracts/TokenDrop.algo.ts:87",
          "pc": [
            194
          ]
        },
        {
          "teal": 37,
          "source": "contracts/TokenDrop.algo.ts:87",
          "errorMessage": "argument 0 (maintainerAddress) for createApplication must be a address",
          "pc": [
            195
          ]
        },
        {
          "teal": 40,
          "source": "contracts/TokenDrop.algo.ts:87",
          "pc": [
            196,
            197,
            198
          ]
        },
        {
          "teal": 41,
          "source": "contracts/TokenDrop.algo.ts:87",
          "pc": [
            199
          ]
        },
        {
          "teal": 44,
          "source": "contracts/TokenDrop.algo.ts:87",
          "pc": [
            200,
            201,
            202
          ]
        },
        {
          "teal": 45,
          "source": "contracts/TokenDrop.algo.ts:87",
          "pc": [
            203
          ]
        },
        {
          "teal": 46,
          "source": "contracts/TokenDrop.algo.ts:87",
          "pc": [
            204
          ]
        },
        {
          "teal": 50,
          "source": "contracts/TokenDrop.algo.ts:87",
          "pc": [
            205,
            206,
            207
          ]
        },
        {
          "teal": 54,
          "source": "contracts/TokenDrop.algo.ts:88",
          "pc": [
            208,
            209
          ]
        },
        {
          "teal": 55,
          "source": "contracts/TokenDrop.algo.ts:88",
          "pc": [
            210,
            211
          ]
        },
        {
          "teal": 56,
          "source": "contracts/TokenDrop.algo.ts:88",
          "pc": [
            212
          ]
        },
        {
          "teal": 60,
          "source": "contracts/TokenDrop.algo.ts:89",
          "pc": [
            213,
            214
          ]
        },
        {
          "teal": 61,
          "source": "contracts/TokenDrop.algo.ts:89",
          "pc": [
            215,
            216
          ]
        },
        {
          "teal": 62,
          "source": "contracts/TokenDrop.algo.ts:89",
          "pc": [
            217
          ]
        },
        {
          "teal": 66,
          "source": "contracts/TokenDrop.algo.ts:90",
          "pc": [
            218,
            219
          ]
        },
        {
          "teal": 67,
          "source": "contracts/TokenDrop.algo.ts:90",
          "pc": [
            220
          ]
        },
        {
          "teal": 68,
          "source": "contracts/TokenDrop.algo.ts:90",
          "pc": [
            221
          ]
        },
        {
          "teal": 72,
          "source": "contracts/TokenDrop.algo.ts:91",
          "pc": [
            222,
            223
          ]
        },
        {
          "teal": 73,
          "source": "contracts/TokenDrop.algo.ts:91",
          "pc": [
            224
          ]
        },
        {
          "teal": 74,
          "source": "contracts/TokenDrop.algo.ts:91",
          "pc": [
            225
          ]
        },
        {
          "teal": 78,
          "source": "contracts/TokenDrop.algo.ts:92",
          "pc": [
            226
          ]
        },
        {
          "teal": 79,
          "source": "contracts/TokenDrop.algo.ts:92",
          "pc": [
            227,
            228,
            229,
            230,
            231
          ]
        },
        {
          "teal": 80,
          "source": "contracts/TokenDrop.algo.ts:92",
          "pc": [
            232
          ]
        },
        {
          "teal": 84,
          "source": "contracts/TokenDrop.algo.ts:93",
          "pc": [
            233,
            234
          ]
        },
        {
          "teal": 85,
          "source": "contracts/TokenDrop.algo.ts:93",
          "pc": [
            235,
            236,
            237,
            238
          ]
        },
        {
          "teal": 86,
          "source": "contracts/TokenDrop.algo.ts:93",
          "pc": [
            239
          ]
        },
        {
          "teal": 87,
          "source": "contracts/TokenDrop.algo.ts:87",
          "pc": [
            240
          ]
        },
        {
          "teal": 92,
          "source": "contracts/TokenDrop.algo.ts:97",
          "pc": [
            241,
            242,
            243
          ]
        },
        {
          "teal": 93,
          "source": "contracts/TokenDrop.algo.ts:97",
          "pc": [
            244
          ]
        },
        {
          "teal": 94,
          "source": "contracts/TokenDrop.algo.ts:97",
          "pc": [
            245
          ]
        },
        {
          "teal": 98,
          "source": "contracts/TokenDrop.algo.ts:97",
          "pc": [
            246,
            247,
            248
          ]
        },
        {
          "teal": 102,
          "source": "contracts/TokenDrop.algo.ts:98",
          "pc": [
            249,
            250
          ]
        },
        {
          "teal": 103,
          "source": "contracts/TokenDrop.algo.ts:98",
          "pc": [
            251,
            252,
            253
          ]
        },
        {
          "teal": 104,
          "source": "contracts/TokenDrop.algo.ts:98",
          "pc": [
            254,
            255
          ]
        },
        {
          "teal": 105,
          "source": "contracts/TokenDrop.algo.ts:98",
          "pc": [
            256
          ]
        },
        {
          "teal": 106,
          "source": "contracts/TokenDrop.algo.ts:98",
          "pc": [
            257
          ]
        },
        {
          "teal": 109,
          "source": "contracts/TokenDrop.algo.ts:98",
          "errorMessage": "Only the creator can update the application",
          "pc": [
            258
          ]
        },
        {
          "teal": 110,
          "source": "contracts/TokenDrop.algo.ts:97",
          "pc": [
            259
          ]
        },
        {
          "teal": 115,
          "source": "contracts/TokenDrop.algo.ts:107",
          "pc": [
            260,
            261,
            262
          ]
        },
        {
          "teal": 116,
          "source": "contracts/TokenDrop.algo.ts:107",
          "pc": [
            263
          ]
        },
        {
          "teal": 117,
          "source": "contracts/TokenDrop.algo.ts:107",
          "pc": [
            264
          ]
        },
        {
          "teal": 118,
          "source": "contracts/TokenDrop.algo.ts:107",
          "pc": [
            265
          ]
        },
        {
          "teal": 119,
          "source": "contracts/TokenDrop.algo.ts:107",
          "pc": [
            266
          ]
        },
        {
          "teal": 122,
          "source": "contracts/TokenDrop.algo.ts:107",
          "errorMessage": "argument 0 (newMaintainer) for changeMaintainer must be a address",
          "pc": [
            267
          ]
        },
        {
          "teal": 125,
          "source": "contracts/TokenDrop.algo.ts:107",
          "pc": [
            268,
            269,
            270
          ]
        },
        {
          "teal": 126,
          "source": "contracts/TokenDrop.algo.ts:107",
          "pc": [
            271
          ]
        },
        {
          "teal": 127,
          "source": "contracts/TokenDrop.algo.ts:107",
          "pc": [
            272
          ]
        },
        {
          "teal": 136,
          "source": "contracts/TokenDrop.algo.ts:107",
          "pc": [
            273,
            274,
            275
          ]
        },
        {
          "teal": 140,
          "source": "contracts/TokenDrop.algo.ts:108",
          "pc": [
            276,
            277
          ]
        },
        {
          "teal": 141,
          "source": "contracts/TokenDrop.algo.ts:108",
          "pc": [
            278,
            279,
            280
          ]
        },
        {
          "teal": 142,
          "source": "contracts/TokenDrop.algo.ts:108",
          "pc": [
            281,
            282
          ]
        },
        {
          "teal": 143,
          "source": "contracts/TokenDrop.algo.ts:108",
          "pc": [
            283
          ]
        },
        {
          "teal": 144,
          "source": "contracts/TokenDrop.algo.ts:108",
          "pc": [
            284
          ]
        },
        {
          "teal": 147,
          "source": "contracts/TokenDrop.algo.ts:108",
          "errorMessage": "Only the creator can call",
          "pc": [
            285
          ]
        },
        {
          "teal": 151,
          "source": "contracts/TokenDrop.algo.ts:109",
          "pc": [
            286,
            287
          ]
        },
        {
          "teal": 152,
          "source": "contracts/TokenDrop.algo.ts:109",
          "pc": [
            288,
            289
          ]
        },
        {
          "teal": 153,
          "source": "contracts/TokenDrop.algo.ts:109",
          "pc": [
            290
          ]
        },
        {
          "teal": 154,
          "source": "contracts/TokenDrop.algo.ts:107",
          "pc": [
            291
          ]
        },
        {
          "teal": 159,
          "source": "contracts/TokenDrop.algo.ts:119",
          "pc": [
            292,
            293,
            294
          ]
        },
        {
          "teal": 160,
          "source": "contracts/TokenDrop.algo.ts:119",
          "pc": [
            295
          ]
        },
        {
          "teal": 163,
          "source": "contracts/TokenDrop.algo.ts:119",
          "pc": [
            296,
            297,
            298
          ]
        },
        {
          "teal": 164,
          "source": "contracts/TokenDrop.algo.ts:119",
          "pc": [
            299
          ]
        },
        {
          "teal": 167,
          "source": "contracts/TokenDrop.algo.ts:119",
          "pc": [
            300,
            301,
            302
          ]
        },
        {
          "teal": 168,
          "source": "contracts/TokenDrop.algo.ts:119",
          "pc": [
            303
          ]
        },
        {
          "teal": 169,
          "source": "contracts/TokenDrop.algo.ts:119",
          "pc": [
            304
          ]
        },
        {
          "teal": 179,
          "source": "contracts/TokenDrop.algo.ts:119",
          "pc": [
            305,
            306,
            307
          ]
        },
        {
          "teal": 183,
          "source": "contracts/TokenDrop.algo.ts:120",
          "pc": [
            308,
            309
          ]
        },
        {
          "teal": 184,
          "source": "contracts/TokenDrop.algo.ts:120",
          "pc": [
            310,
            311,
            312
          ]
        },
        {
          "teal": 185,
          "source": "contracts/TokenDrop.algo.ts:120",
          "pc": [
            313,
            314
          ]
        },
        {
          "teal": 186,
          "source": "contracts/TokenDrop.algo.ts:120",
          "pc": [
            315
          ]
        },
        {
          "teal": 187,
          "source": "contracts/TokenDrop.algo.ts:120",
          "pc": [
            316
          ]
        },
        {
          "teal": 190,
          "source": "contracts/TokenDrop.algo.ts:120",
          "errorMessage": "Only the creator can call",
          "pc": [
            317
          ]
        },
        {
          "teal": 194,
          "source": "contracts/TokenDrop.algo.ts:121",
          "pc": [
            318,
            319
          ]
        },
        {
          "teal": 195,
          "source": "contracts/TokenDrop.algo.ts:121",
          "pc": [
            320,
            321,
            322,
            323
          ]
        },
        {
          "teal": 196,
          "source": "contracts/TokenDrop.algo.ts:121",
          "pc": [
            324
          ]
        },
        {
          "teal": 199,
          "source": "contracts/TokenDrop.algo.ts:121",
          "errorMessage": "fee must be at least 2 algo",
          "pc": [
            325
          ]
        },
        {
          "teal": 203,
          "source": "contracts/TokenDrop.algo.ts:122",
          "pc": [
            326,
            327
          ]
        },
        {
          "teal": 204,
          "source": "contracts/TokenDrop.algo.ts:122",
          "pc": [
            328,
            329
          ]
        },
        {
          "teal": 205,
          "source": "contracts/TokenDrop.algo.ts:122",
          "pc": [
            330
          ]
        },
        {
          "teal": 206,
          "source": "contracts/TokenDrop.algo.ts:122",
          "pc": [
            331
          ]
        },
        {
          "teal": 207,
          "source": "contracts/TokenDrop.algo.ts:122",
          "pc": [
            332
          ]
        },
        {
          "teal": 210,
          "source": "contracts/TokenDrop.algo.ts:122",
          "errorMessage": "fee must be even amount",
          "pc": [
            333
          ]
        },
        {
          "teal": 214,
          "source": "contracts/TokenDrop.algo.ts:123",
          "pc": [
            334,
            335
          ]
        },
        {
          "teal": 215,
          "source": "contracts/TokenDrop.algo.ts:123",
          "pc": [
            336,
            337,
            338
          ]
        },
        {
          "teal": 216,
          "source": "contracts/TokenDrop.algo.ts:123",
          "pc": [
            339,
            340
          ]
        },
        {
          "teal": 217,
          "source": "contracts/TokenDrop.algo.ts:123",
          "pc": [
            341
          ]
        },
        {
          "teal": 218,
          "source": "contracts/TokenDrop.algo.ts:123",
          "pc": [
            342
          ]
        },
        {
          "teal": 221,
          "source": "contracts/TokenDrop.algo.ts:123",
          "errorMessage": "per-claim fee must >= double mbr cost",
          "pc": [
            343
          ]
        },
        {
          "teal": 225,
          "source": "contracts/TokenDrop.algo.ts:124",
          "pc": [
            344
          ]
        },
        {
          "teal": 226,
          "source": "contracts/TokenDrop.algo.ts:124",
          "pc": [
            345,
            346
          ]
        },
        {
          "teal": 227,
          "source": "contracts/TokenDrop.algo.ts:124",
          "pc": [
            347
          ]
        },
        {
          "teal": 231,
          "source": "contracts/TokenDrop.algo.ts:125",
          "pc": [
            348,
            349
          ]
        },
        {
          "teal": 232,
          "source": "contracts/TokenDrop.algo.ts:125",
          "pc": [
            350,
            351
          ]
        },
        {
          "teal": 233,
          "source": "contracts/TokenDrop.algo.ts:125",
          "pc": [
            352
          ]
        },
        {
          "teal": 234,
          "source": "contracts/TokenDrop.algo.ts:119",
          "pc": [
            353
          ]
        },
        {
          "teal": 239,
          "source": "contracts/TokenDrop.algo.ts:137",
          "pc": [
            354,
            355,
            356
          ]
        },
        {
          "teal": 240,
          "source": "contracts/TokenDrop.algo.ts:137",
          "pc": [
            357
          ]
        },
        {
          "teal": 243,
          "source": "contracts/TokenDrop.algo.ts:137",
          "pc": [
            358,
            359
          ]
        },
        {
          "teal": 244,
          "source": "contracts/TokenDrop.algo.ts:137",
          "pc": [
            360
          ]
        },
        {
          "teal": 245,
          "source": "contracts/TokenDrop.algo.ts:137",
          "pc": [
            361
          ]
        },
        {
          "teal": 246,
          "source": "contracts/TokenDrop.algo.ts:137",
          "pc": [
            362
          ]
        },
        {
          "teal": 247,
          "source": "contracts/TokenDrop.algo.ts:137",
          "pc": [
            363,
            364
          ]
        },
        {
          "teal": 248,
          "source": "contracts/TokenDrop.algo.ts:137",
          "pc": [
            365
          ]
        },
        {
          "teal": 249,
          "source": "contracts/TokenDrop.algo.ts:137",
          "pc": [
            366
          ]
        },
        {
          "teal": 252,
          "source": "contracts/TokenDrop.algo.ts:137",
          "errorMessage": "argument 1 (mbrPayment) for optinAsset must be a pay transaction",
          "pc": [
            367
          ]
        },
        {
          "teal": 255,
          "source": "contracts/TokenDrop.algo.ts:137",
          "pc": [
            368,
            369,
            370
          ]
        },
        {
          "teal": 256,
          "source": "contracts/TokenDrop.algo.ts:137",
          "pc": [
            371
          ]
        },
        {
          "teal": 257,
          "source": "contracts/TokenDrop.algo.ts:137",
          "pc": [
            372
          ]
        },
        {
          "teal": 269,
          "source": "contracts/TokenDrop.algo.ts:137",
          "pc": [
            373,
            374,
            375
          ]
        },
        {
          "teal": 277,
          "source": "contracts/TokenDrop.algo.ts:138",
          "pc": [
            376,
            377
          ]
        },
        {
          "teal": 278,
          "source": "contracts/TokenDrop.algo.ts:139",
          "pc": [
            378,
            379
          ]
        },
        {
          "teal": 279,
          "source": "contracts/TokenDrop.algo.ts:139",
          "pc": [
            380,
            381
          ]
        },
        {
          "teal": 280,
          "source": "contracts/TokenDrop.algo.ts:139",
          "pc": [
            382
          ]
        },
        {
          "teal": 283,
          "source": "contracts/TokenDrop.algo.ts:139",
          "errorMessage": "transaction verification failed: {\"txn\":\"mbrPayment\",\"field\":\"receiver\",\"expected\":\"this.app.address\"}",
          "pc": [
            383
          ]
        },
        {
          "teal": 286,
          "source": "contracts/TokenDrop.algo.ts:138",
          "pc": [
            384,
            385
          ]
        },
        {
          "teal": 287,
          "source": "contracts/TokenDrop.algo.ts:140",
          "pc": [
            386,
            387
          ]
        },
        {
          "teal": 288,
          "source": "contracts/TokenDrop.algo.ts:140",
          "pc": [
            388,
            389
          ]
        },
        {
          "teal": 289,
          "source": "contracts/TokenDrop.algo.ts:140",
          "pc": [
            390
          ]
        },
        {
          "teal": 292,
          "source": "contracts/TokenDrop.algo.ts:140",
          "errorMessage": "transaction verification failed: {\"txn\":\"mbrPayment\",\"field\":\"amount\",\"expected\":\"globals.assetOptInMinBalance\"}",
          "pc": [
            391
          ]
        },
        {
          "teal": 297,
          "source": "contracts/TokenDrop.algo.ts:143",
          "pc": [
            392,
            393
          ]
        },
        {
          "teal": 298,
          "source": "contracts/TokenDrop.algo.ts:143",
          "pc": [
            394,
            395
          ]
        },
        {
          "teal": 299,
          "source": "contracts/TokenDrop.algo.ts:143",
          "pc": [
            396,
            397
          ]
        },
        {
          "teal": 300,
          "source": "contracts/TokenDrop.algo.ts:143",
          "pc": [
            398
          ]
        },
        {
          "teal": 301,
          "source": "contracts/TokenDrop.algo.ts:143",
          "pc": [
            399
          ]
        },
        {
          "teal": 302,
          "source": "contracts/TokenDrop.algo.ts:143",
          "pc": [
            400,
            401,
            402
          ]
        },
        {
          "teal": 311,
          "source": "contracts/TokenDrop.algo.ts:144",
          "pc": [
            403
          ]
        },
        {
          "teal": 312,
          "source": "contracts/TokenDrop.algo.ts:144",
          "pc": [
            404
          ]
        },
        {
          "teal": 313,
          "source": "contracts/TokenDrop.algo.ts:144",
          "pc": [
            405,
            406
          ]
        },
        {
          "teal": 317,
          "source": "contracts/TokenDrop.algo.ts:145",
          "pc": [
            407,
            408
          ]
        },
        {
          "teal": 318,
          "source": "contracts/TokenDrop.algo.ts:145",
          "pc": [
            409,
            410
          ]
        },
        {
          "teal": 322,
          "source": "contracts/TokenDrop.algo.ts:146",
          "pc": [
            411,
            412
          ]
        },
        {
          "teal": 323,
          "source": "contracts/TokenDrop.algo.ts:146",
          "pc": [
            413,
            414
          ]
        },
        {
          "teal": 327,
          "source": "contracts/TokenDrop.algo.ts:147",
          "pc": [
            415,
            416,
            417,
            418,
            419,
            420,
            421,
            422,
            423,
            424,
            425,
            426,
            427,
            428
          ]
        },
        {
          "teal": 328,
          "source": "contracts/TokenDrop.algo.ts:147",
          "pc": [
            429,
            430
          ]
        },
        {
          "teal": 331,
          "source": "contracts/TokenDrop.algo.ts:144",
          "pc": [
            431
          ]
        },
        {
          "teal": 332,
          "source": "contracts/TokenDrop.algo.ts:144",
          "pc": [
            432,
            433
          ]
        },
        {
          "teal": 335,
          "source": "contracts/TokenDrop.algo.ts:144",
          "pc": [
            434
          ]
        },
        {
          "teal": 339,
          "source": "contracts/TokenDrop.algo.ts:149",
          "pc": [
            435
          ]
        },
        {
          "teal": 348,
          "source": "contracts/TokenDrop.algo.ts:152",
          "pc": [
            436
          ]
        },
        {
          "teal": 349,
          "source": "contracts/TokenDrop.algo.ts:152",
          "pc": [
            437,
            438
          ]
        },
        {
          "teal": 350,
          "source": "contracts/TokenDrop.algo.ts:152",
          "pc": [
            439,
            440
          ]
        },
        {
          "teal": 354,
          "source": "contracts/TokenDrop.algo.ts:153",
          "pc": [
            441,
            442
          ]
        },
        {
          "teal": 355,
          "source": "contracts/TokenDrop.algo.ts:153",
          "pc": [
            443,
            444
          ]
        },
        {
          "teal": 359,
          "source": "contracts/TokenDrop.algo.ts:154",
          "pc": [
            445,
            446
          ]
        },
        {
          "teal": 360,
          "source": "contracts/TokenDrop.algo.ts:154",
          "pc": [
            447,
            448
          ]
        },
        {
          "teal": 364,
          "source": "contracts/TokenDrop.algo.ts:155",
          "pc": [
            449
          ]
        },
        {
          "teal": 365,
          "source": "contracts/TokenDrop.algo.ts:155",
          "pc": [
            450,
            451
          ]
        },
        {
          "teal": 368,
          "source": "contracts/TokenDrop.algo.ts:152",
          "pc": [
            452
          ]
        },
        {
          "teal": 369,
          "source": "contracts/TokenDrop.algo.ts:152",
          "pc": [
            453,
            454
          ]
        },
        {
          "teal": 372,
          "source": "contracts/TokenDrop.algo.ts:152",
          "pc": [
            455
          ]
        },
        {
          "teal": 373,
          "source": "contracts/TokenDrop.algo.ts:137",
          "pc": [
            456
          ]
        },
        {
          "teal": 378,
          "source": "contracts/TokenDrop.algo.ts:167",
          "pc": [
            457
          ]
        },
        {
          "teal": 381,
          "source": "contracts/TokenDrop.algo.ts:167",
          "pc": [
            458,
            459,
            460
          ]
        },
        {
          "teal": 382,
          "source": "contracts/TokenDrop.algo.ts:167",
          "pc": [
            461
          ]
        },
        {
          "teal": 383,
          "source": "contracts/TokenDrop.algo.ts:167",
          "pc": [
            462
          ]
        },
        {
          "teal": 384,
          "source": "contracts/TokenDrop.algo.ts:167",
          "pc": [
            463
          ]
        },
        {
          "teal": 385,
          "source": "contracts/TokenDrop.algo.ts:167",
          "pc": [
            464
          ]
        },
        {
          "teal": 386,
          "source": "contracts/TokenDrop.algo.ts:167",
          "pc": [
            465
          ]
        },
        {
          "teal": 397,
          "source": "contracts/TokenDrop.algo.ts:167",
          "pc": [
            466,
            467,
            468
          ]
        },
        {
          "teal": 400,
          "source": "contracts/TokenDrop.algo.ts:167",
          "pc": [
            469
          ]
        },
        {
          "teal": 404,
          "source": "contracts/TokenDrop.algo.ts:169",
          "pc": [
            470
          ]
        },
        {
          "teal": 405,
          "source": "contracts/TokenDrop.algo.ts:169",
          "pc": [
            471
          ]
        },
        {
          "teal": 406,
          "source": "contracts/TokenDrop.algo.ts:169",
          "pc": [
            472,
            473
          ]
        },
        {
          "teal": 410,
          "source": "contracts/TokenDrop.algo.ts:173",
          "pc": [
            474,
            475
          ]
        },
        {
          "teal": 411,
          "source": "contracts/TokenDrop.algo.ts:173",
          "pc": [
            476,
            477,
            478
          ]
        },
        {
          "teal": 412,
          "source": "contracts/TokenDrop.algo.ts:173",
          "pc": [
            479,
            480,
            481
          ]
        },
        {
          "teal": 413,
          "source": "contracts/TokenDrop.algo.ts:173",
          "pc": [
            482
          ]
        },
        {
          "teal": 414,
          "source": "contracts/TokenDrop.algo.ts:173",
          "pc": [
            483,
            484
          ]
        },
        {
          "teal": 418,
          "source": "contracts/TokenDrop.algo.ts:175",
          "pc": [
            485,
            486
          ]
        },
        {
          "teal": 419,
          "source": "contracts/TokenDrop.algo.ts:175",
          "pc": [
            487,
            488
          ]
        },
        {
          "teal": 420,
          "source": "contracts/TokenDrop.algo.ts:175",
          "pc": [
            489,
            490,
            491
          ]
        },
        {
          "teal": 421,
          "source": "contracts/TokenDrop.algo.ts:175",
          "pc": [
            492
          ]
        },
        {
          "teal": 422,
          "source": "contracts/TokenDrop.algo.ts:175",
          "pc": [
            493,
            494
          ]
        },
        {
          "teal": 426,
          "source": "contracts/TokenDrop.algo.ts:176",
          "pc": [
            495,
            496
          ]
        },
        {
          "teal": 429,
          "source": "contracts/TokenDrop.algo.ts:167",
          "pc": [
            497,
            498
          ]
        },
        {
          "teal": 430,
          "source": "contracts/TokenDrop.algo.ts:167",
          "pc": [
            499
          ]
        },
        {
          "teal": 435,
          "source": "contracts/TokenDrop.algo.ts:182",
          "pc": [
            500
          ]
        },
        {
          "teal": 438,
          "source": "contracts/TokenDrop.algo.ts:182",
          "pc": [
            501,
            502,
            503
          ]
        },
        {
          "teal": 439,
          "source": "contracts/TokenDrop.algo.ts:182",
          "pc": [
            504
          ]
        },
        {
          "teal": 440,
          "source": "contracts/TokenDrop.algo.ts:182",
          "pc": [
            505
          ]
        },
        {
          "teal": 441,
          "source": "contracts/TokenDrop.algo.ts:182",
          "pc": [
            506
          ]
        },
        {
          "teal": 442,
          "source": "contracts/TokenDrop.algo.ts:182",
          "pc": [
            507
          ]
        },
        {
          "teal": 443,
          "source": "contracts/TokenDrop.algo.ts:182",
          "pc": [
            508
          ]
        },
        {
          "teal": 449,
          "source": "contracts/TokenDrop.algo.ts:182",
          "pc": [
            509,
            510,
            511
          ]
        },
        {
          "teal": 453,
          "source": "contracts/TokenDrop.algo.ts:185",
          "pc": [
            512,
            513
          ]
        },
        {
          "teal": 454,
          "source": "contracts/TokenDrop.algo.ts:185",
          "pc": [
            514,
            515,
            516
          ]
        },
        {
          "teal": 455,
          "source": "contracts/TokenDrop.algo.ts:182",
          "pc": [
            517
          ]
        },
        {
          "teal": 460,
          "source": "contracts/TokenDrop.algo.ts:191",
          "pc": [
            518
          ]
        },
        {
          "teal": 463,
          "source": "contracts/TokenDrop.algo.ts:191",
          "pc": [
            519,
            520,
            521
          ]
        },
        {
          "teal": 464,
          "source": "contracts/TokenDrop.algo.ts:191",
          "pc": [
            522
          ]
        },
        {
          "teal": 465,
          "source": "contracts/TokenDrop.algo.ts:191",
          "pc": [
            523
          ]
        },
        {
          "teal": 466,
          "source": "contracts/TokenDrop.algo.ts:191",
          "pc": [
            524
          ]
        },
        {
          "teal": 467,
          "source": "contracts/TokenDrop.algo.ts:191",
          "pc": [
            525
          ]
        },
        {
          "teal": 468,
          "source": "contracts/TokenDrop.algo.ts:191",
          "pc": [
            526
          ]
        },
        {
          "teal": 474,
          "source": "contracts/TokenDrop.algo.ts:191",
          "pc": [
            527,
            528,
            529
          ]
        },
        {
          "teal": 478,
          "source": "contracts/TokenDrop.algo.ts:193",
          "pc": [
            530,
            531
          ]
        },
        {
          "teal": 479,
          "source": "contracts/TokenDrop.algo.ts:193",
          "pc": [
            532
          ]
        },
        {
          "teal": 480,
          "source": "contracts/TokenDrop.algo.ts:191",
          "pc": [
            533
          ]
        },
        {
          "teal": 485,
          "source": "contracts/TokenDrop.algo.ts:202",
          "pc": [
            534
          ]
        },
        {
          "teal": 488,
          "source": "contracts/TokenDrop.algo.ts:203",
          "pc": [
            535,
            536,
            537
          ]
        },
        {
          "teal": 489,
          "source": "contracts/TokenDrop.algo.ts:203",
          "pc": [
            538
          ]
        },
        {
          "teal": 492,
          "source": "contracts/TokenDrop.algo.ts:202",
          "pc": [
            539,
            540,
            541
          ]
        },
        {
          "teal": 493,
          "source": "contracts/TokenDrop.algo.ts:202",
          "pc": [
            542
          ]
        },
        {
          "teal": 494,
          "source": "contracts/TokenDrop.algo.ts:202",
          "pc": [
            543
          ]
        },
        {
          "teal": 495,
          "source": "contracts/TokenDrop.algo.ts:202",
          "pc": [
            544
          ]
        },
        {
          "teal": 496,
          "source": "contracts/TokenDrop.algo.ts:202",
          "pc": [
            545
          ]
        },
        {
          "teal": 505,
          "source": "contracts/TokenDrop.algo.ts:202",
          "pc": [
            546,
            547,
            548
          ]
        },
        {
          "teal": 509,
          "source": "contracts/TokenDrop.algo.ts:204",
          "pc": [
            549
          ]
        },
        {
          "teal": 510,
          "source": "contracts/TokenDrop.algo.ts:204",
          "pc": [
            550,
            551
          ]
        },
        {
          "teal": 511,
          "source": "contracts/TokenDrop.algo.ts:204",
          "pc": [
            552
          ]
        },
        {
          "teal": 512,
          "source": "contracts/TokenDrop.algo.ts:204",
          "pc": [
            553
          ]
        },
        {
          "teal": 513,
          "source": "contracts/TokenDrop.algo.ts:204",
          "pc": [
            554
          ]
        },
        {
          "teal": 516,
          "source": "contracts/TokenDrop.algo.ts:204",
          "errorMessage": "box value does not exist: this.allDrops(tokenDropId).value",
          "pc": [
            555
          ]
        },
        {
          "teal": 517,
          "source": "contracts/TokenDrop.algo.ts:202",
          "pc": [
            556
          ]
        },
        {
          "teal": 522,
          "source": "contracts/TokenDrop.algo.ts:223",
          "pc": [
            557
          ]
        },
        {
          "teal": 525,
          "source": "contracts/TokenDrop.algo.ts:223",
          "pc": [
            558,
            559,
            560
          ]
        },
        {
          "teal": 526,
          "source": "contracts/TokenDrop.algo.ts:223",
          "pc": [
            561
          ]
        },
        {
          "teal": 527,
          "source": "contracts/TokenDrop.algo.ts:223",
          "pc": [
            562
          ]
        },
        {
          "teal": 528,
          "source": "contracts/TokenDrop.algo.ts:223",
          "pc": [
            563,
            564
          ]
        },
        {
          "teal": 529,
          "source": "contracts/TokenDrop.algo.ts:223",
          "pc": [
            565
          ]
        },
        {
          "teal": 532,
          "source": "contracts/TokenDrop.algo.ts:223",
          "errorMessage": "argument 0 (tokenDropConfig) for createDrop must be a (uint64,uint64,uint64,uint8,address,uint64[4],uint64)",
          "pc": [
            566
          ]
        },
        {
          "teal": 535,
          "source": "contracts/TokenDrop.algo.ts:223",
          "pc": [
            567,
            568
          ]
        },
        {
          "teal": 536,
          "source": "contracts/TokenDrop.algo.ts:223",
          "pc": [
            569
          ]
        },
        {
          "teal": 537,
          "source": "contracts/TokenDrop.algo.ts:223",
          "pc": [
            570
          ]
        },
        {
          "teal": 538,
          "source": "contracts/TokenDrop.algo.ts:223",
          "pc": [
            571
          ]
        },
        {
          "teal": 539,
          "source": "contracts/TokenDrop.algo.ts:223",
          "pc": [
            572,
            573
          ]
        },
        {
          "teal": 540,
          "source": "contracts/TokenDrop.algo.ts:223",
          "pc": [
            574,
            575
          ]
        },
        {
          "teal": 541,
          "source": "contracts/TokenDrop.algo.ts:223",
          "pc": [
            576
          ]
        },
        {
          "teal": 544,
          "source": "contracts/TokenDrop.algo.ts:223",
          "errorMessage": "argument 1 (assetTxn) for createDrop must be a axfer transaction",
          "pc": [
            577
          ]
        },
        {
          "teal": 547,
          "source": "contracts/TokenDrop.algo.ts:223",
          "pc": [
            578,
            579
          ]
        },
        {
          "teal": 548,
          "source": "contracts/TokenDrop.algo.ts:223",
          "pc": [
            580,
            581
          ]
        },
        {
          "teal": 549,
          "source": "contracts/TokenDrop.algo.ts:223",
          "pc": [
            582
          ]
        },
        {
          "teal": 550,
          "source": "contracts/TokenDrop.algo.ts:223",
          "pc": [
            583
          ]
        },
        {
          "teal": 551,
          "source": "contracts/TokenDrop.algo.ts:223",
          "pc": [
            584,
            585
          ]
        },
        {
          "teal": 552,
          "source": "contracts/TokenDrop.algo.ts:223",
          "pc": [
            586
          ]
        },
        {
          "teal": 553,
          "source": "contracts/TokenDrop.algo.ts:223",
          "pc": [
            587
          ]
        },
        {
          "teal": 556,
          "source": "contracts/TokenDrop.algo.ts:223",
          "errorMessage": "argument 2 (feeAndMbrPayment) for createDrop must be a pay transaction",
          "pc": [
            588
          ]
        },
        {
          "teal": 559,
          "source": "contracts/TokenDrop.algo.ts:223",
          "pc": [
            589,
            590,
            591
          ]
        },
        {
          "teal": 560,
          "source": "contracts/TokenDrop.algo.ts:223",
          "pc": [
            592
          ]
        },
        {
          "teal": 561,
          "source": "contracts/TokenDrop.algo.ts:223",
          "pc": [
            593
          ]
        },
        {
          "teal": 562,
          "source": "contracts/TokenDrop.algo.ts:223",
          "pc": [
            594
          ]
        },
        {
          "teal": 563,
          "source": "contracts/TokenDrop.algo.ts:223",
          "pc": [
            595
          ]
        },
        {
          "teal": 564,
          "source": "contracts/TokenDrop.algo.ts:223",
          "pc": [
            596
          ]
        },
        {
          "teal": 583,
          "source": "contracts/TokenDrop.algo.ts:223",
          "pc": [
            597,
            598,
            599
          ]
        },
        {
          "teal": 586,
          "source": "contracts/TokenDrop.algo.ts:223",
          "pc": [
            600
          ]
        },
        {
          "teal": 587,
          "source": "contracts/TokenDrop.algo.ts:223",
          "pc": [
            601,
            602
          ]
        },
        {
          "teal": 592,
          "source": "contracts/TokenDrop.algo.ts:224",
          "pc": [
            603,
            604
          ]
        },
        {
          "teal": 593,
          "source": "contracts/TokenDrop.algo.ts:224",
          "pc": [
            605,
            606
          ]
        },
        {
          "teal": 594,
          "source": "contracts/TokenDrop.algo.ts:224",
          "pc": [
            607,
            608
          ]
        },
        {
          "teal": 595,
          "source": "contracts/TokenDrop.algo.ts:224",
          "pc": [
            609
          ]
        },
        {
          "teal": 598,
          "source": "contracts/TokenDrop.algo.ts:224",
          "errorMessage": "transaction verification failed: {\"txn\":\"assetTxn\",\"field\":\"assetReceiver\",\"expected\":\"this.app.address\"}",
          "pc": [
            610
          ]
        },
        {
          "teal": 602,
          "source": "contracts/TokenDrop.algo.ts:225",
          "pc": [
            611,
            612
          ]
        },
        {
          "teal": 603,
          "source": "contracts/TokenDrop.algo.ts:225",
          "pc": [
            613,
            614
          ]
        },
        {
          "teal": 604,
          "source": "contracts/TokenDrop.algo.ts:225",
          "pc": [
            615
          ]
        },
        {
          "teal": 605,
          "source": "contracts/TokenDrop.algo.ts:225",
          "pc": [
            616
          ]
        },
        {
          "teal": 608,
          "source": "contracts/TokenDrop.algo.ts:225",
          "errorMessage": "must have a positive amount",
          "pc": [
            617
          ]
        },
        {
          "teal": 612,
          "source": "contracts/TokenDrop.algo.ts:227",
          "pc": [
            618,
            619
          ]
        },
        {
          "teal": 613,
          "source": "contracts/TokenDrop.algo.ts:227",
          "pc": [
            620,
            621
          ]
        },
        {
          "teal": 614,
          "source": "contracts/TokenDrop.algo.ts:227",
          "pc": [
            622,
            623
          ]
        },
        {
          "teal": 615,
          "source": "contracts/TokenDrop.algo.ts:227",
          "pc": [
            624,
            625,
            626
          ]
        },
        {
          "teal": 616,
          "source": "contracts/TokenDrop.algo.ts:227",
          "pc": [
            627
          ]
        },
        {
          "teal": 617,
          "source": "contracts/TokenDrop.algo.ts:227",
          "pc": [
            628
          ]
        },
        {
          "teal": 620,
          "source": "contracts/TokenDrop.algo.ts:227",
          "errorMessage": "asset sent must be same as asset specified for drops",
          "pc": [
            629
          ]
        },
        {
          "teal": 624,
          "source": "contracts/TokenDrop.algo.ts:228",
          "pc": [
            630,
            631
          ]
        },
        {
          "teal": 625,
          "source": "contracts/TokenDrop.algo.ts:228",
          "pc": [
            632,
            633
          ]
        },
        {
          "teal": 626,
          "source": "contracts/TokenDrop.algo.ts:228",
          "pc": [
            634,
            635
          ]
        },
        {
          "teal": 627,
          "source": "contracts/TokenDrop.algo.ts:228",
          "pc": [
            636,
            637
          ]
        },
        {
          "teal": 628,
          "source": "contracts/TokenDrop.algo.ts:228",
          "pc": [
            638
          ]
        },
        {
          "teal": 629,
          "source": "contracts/TokenDrop.algo.ts:228",
          "pc": [
            639
          ]
        },
        {
          "teal": 632,
          "source": "contracts/TokenDrop.algo.ts:228",
          "errorMessage": "must opt-in contract first",
          "pc": [
            640
          ]
        },
        {
          "teal": 636,
          "source": "contracts/TokenDrop.algo.ts:230",
          "pc": [
            641,
            642
          ]
        },
        {
          "teal": 637,
          "source": "contracts/TokenDrop.algo.ts:230",
          "pc": [
            643,
            644,
            645
          ]
        },
        {
          "teal": 638,
          "source": "contracts/TokenDrop.algo.ts:230",
          "pc": [
            646
          ]
        },
        {
          "teal": 639,
          "source": "contracts/TokenDrop.algo.ts:230",
          "pc": [
            647,
            648
          ]
        },
        {
          "teal": 640,
          "source": "contracts/TokenDrop.algo.ts:230",
          "pc": [
            649,
            650
          ]
        },
        {
          "teal": 641,
          "source": "contracts/TokenDrop.algo.ts:230",
          "pc": [
            651
          ]
        },
        {
          "teal": 644,
          "source": "contracts/TokenDrop.algo.ts:230",
          "errorMessage": "token must match asset being transferred",
          "pc": [
            652
          ]
        },
        {
          "teal": 651,
          "source": "contracts/TokenDrop.algo.ts:232",
          "pc": [
            653,
            654
          ]
        },
        {
          "teal": 652,
          "source": "contracts/TokenDrop.algo.ts:232",
          "pc": [
            655,
            656,
            657
          ]
        },
        {
          "teal": 653,
          "source": "contracts/TokenDrop.algo.ts:232",
          "pc": [
            658
          ]
        },
        {
          "teal": 654,
          "source": "contracts/TokenDrop.algo.ts:232",
          "pc": [
            659,
            660
          ]
        },
        {
          "teal": 655,
          "source": "contracts/TokenDrop.algo.ts:232",
          "pc": [
            661,
            662
          ]
        },
        {
          "teal": 656,
          "source": "contracts/TokenDrop.algo.ts:232",
          "pc": [
            663
          ]
        },
        {
          "teal": 659,
          "source": "contracts/TokenDrop.algo.ts:231",
          "errorMessage": "amount per claim must be at least amount transferred",
          "pc": [
            664
          ]
        },
        {
          "teal": 666,
          "source": "contracts/TokenDrop.algo.ts:236",
          "pc": [
            665,
            666
          ]
        },
        {
          "teal": 667,
          "source": "contracts/TokenDrop.algo.ts:236",
          "pc": [
            667,
            668
          ]
        },
        {
          "teal": 668,
          "source": "contracts/TokenDrop.algo.ts:236",
          "pc": [
            669,
            670
          ]
        },
        {
          "teal": 669,
          "source": "contracts/TokenDrop.algo.ts:236",
          "pc": [
            671,
            672,
            673
          ]
        },
        {
          "teal": 670,
          "source": "contracts/TokenDrop.algo.ts:236",
          "pc": [
            674
          ]
        },
        {
          "teal": 671,
          "source": "contracts/TokenDrop.algo.ts:236",
          "pc": [
            675
          ]
        },
        {
          "teal": 672,
          "source": "contracts/TokenDrop.algo.ts:236",
          "pc": [
            676
          ]
        },
        {
          "teal": 673,
          "source": "contracts/TokenDrop.algo.ts:236",
          "pc": [
            677
          ]
        },
        {
          "teal": 676,
          "source": "contracts/TokenDrop.algo.ts:235",
          "errorMessage": "amount must be divisible by amount per claim",
          "pc": [
            678
          ]
        },
        {
          "teal": 683,
          "source": "contracts/TokenDrop.algo.ts:240",
          "pc": [
            679,
            680
          ]
        },
        {
          "teal": 684,
          "source": "contracts/TokenDrop.algo.ts:240",
          "pc": [
            681,
            682,
            683
          ]
        },
        {
          "teal": 685,
          "source": "contracts/TokenDrop.algo.ts:240",
          "pc": [
            684
          ]
        },
        {
          "teal": 686,
          "source": "contracts/TokenDrop.algo.ts:240",
          "pc": [
            685,
            686
          ]
        },
        {
          "teal": 687,
          "source": "contracts/TokenDrop.algo.ts:240",
          "pc": [
            687,
            688,
            689,
            690
          ]
        },
        {
          "teal": 688,
          "source": "contracts/TokenDrop.algo.ts:240",
          "pc": [
            691
          ]
        },
        {
          "teal": 689,
          "source": "contracts/TokenDrop.algo.ts:240",
          "pc": [
            692
          ]
        },
        {
          "teal": 692,
          "source": "contracts/TokenDrop.algo.ts:239",
          "errorMessage": "airdrop end time must be at least 1 day into the future",
          "pc": [
            693
          ]
        },
        {
          "teal": 699,
          "source": "contracts/TokenDrop.algo.ts:245",
          "pc": [
            694,
            695
          ]
        },
        {
          "teal": 700,
          "source": "contracts/TokenDrop.algo.ts:245",
          "pc": [
            696,
            697,
            698
          ]
        },
        {
          "teal": 701,
          "source": "contracts/TokenDrop.algo.ts:245",
          "pc": [
            699
          ]
        },
        {
          "teal": 702,
          "source": "contracts/TokenDrop.algo.ts:245",
          "pc": [
            700,
            701
          ]
        },
        {
          "teal": 703,
          "source": "contracts/TokenDrop.algo.ts:245",
          "pc": [
            702,
            703,
            704
          ]
        },
        {
          "teal": 704,
          "source": "contracts/TokenDrop.algo.ts:245",
          "pc": [
            705
          ]
        },
        {
          "teal": 705,
          "source": "contracts/TokenDrop.algo.ts:245",
          "pc": [
            706,
            707,
            708,
            709
          ]
        },
        {
          "teal": 706,
          "source": "contracts/TokenDrop.algo.ts:245",
          "pc": [
            710
          ]
        },
        {
          "teal": 707,
          "source": "contracts/TokenDrop.algo.ts:245",
          "pc": [
            711
          ]
        },
        {
          "teal": 710,
          "source": "contracts/TokenDrop.algo.ts:244",
          "errorMessage": "airdrop can't last more than 1 week",
          "pc": [
            712
          ]
        },
        {
          "teal": 715,
          "source": "contracts/TokenDrop.algo.ts:249",
          "pc": [
            713,
            714
          ]
        },
        {
          "teal": 716,
          "source": "contracts/TokenDrop.algo.ts:249",
          "pc": [
            715,
            716
          ]
        },
        {
          "teal": 717,
          "source": "contracts/TokenDrop.algo.ts:249",
          "pc": [
            717,
            718,
            719
          ]
        },
        {
          "teal": 718,
          "source": "contracts/TokenDrop.algo.ts:249",
          "pc": [
            720
          ]
        },
        {
          "teal": 719,
          "source": "contracts/TokenDrop.algo.ts:249",
          "pc": [
            721
          ]
        },
        {
          "teal": 720,
          "source": "contracts/TokenDrop.algo.ts:249",
          "pc": [
            722
          ]
        },
        {
          "teal": 721,
          "source": "contracts/TokenDrop.algo.ts:249",
          "pc": [
            723
          ]
        },
        {
          "teal": 722,
          "source": "contracts/TokenDrop.algo.ts:249",
          "pc": [
            724
          ]
        },
        {
          "teal": 723,
          "source": "contracts/TokenDrop.algo.ts:249",
          "pc": [
            725
          ]
        },
        {
          "teal": 724,
          "source": "contracts/TokenDrop.algo.ts:249",
          "pc": [
            726,
            727,
            728
          ]
        },
        {
          "teal": 729,
          "source": "contracts/TokenDrop.algo.ts:250",
          "pc": [
            729
          ]
        },
        {
          "teal": 730,
          "source": "contracts/TokenDrop.algo.ts:250",
          "pc": [
            730,
            731
          ]
        },
        {
          "teal": 731,
          "source": "contracts/TokenDrop.algo.ts:250",
          "pc": [
            732,
            733
          ]
        },
        {
          "teal": 732,
          "source": "contracts/TokenDrop.algo.ts:250",
          "pc": [
            734,
            735,
            736
          ]
        },
        {
          "teal": 733,
          "source": "contracts/TokenDrop.algo.ts:250",
          "pc": [
            737
          ]
        },
        {
          "teal": 734,
          "source": "contracts/TokenDrop.algo.ts:250",
          "pc": [
            738
          ]
        },
        {
          "teal": 735,
          "source": "contracts/TokenDrop.algo.ts:250",
          "pc": [
            739
          ]
        },
        {
          "teal": 736,
          "source": "contracts/TokenDrop.algo.ts:250",
          "pc": [
            740
          ]
        },
        {
          "teal": 739,
          "source": "contracts/TokenDrop.algo.ts:250",
          "errorMessage": "box value does not exist: this.dropForToken(tokenDropConfig.Token).value",
          "pc": [
            741
          ]
        },
        {
          "teal": 740,
          "source": "contracts/TokenDrop.algo.ts:250",
          "pc": [
            742
          ]
        },
        {
          "teal": 741,
          "source": "contracts/TokenDrop.algo.ts:250",
          "pc": [
            743
          ]
        },
        {
          "teal": 742,
          "source": "contracts/TokenDrop.algo.ts:250",
          "pc": [
            744
          ]
        },
        {
          "teal": 743,
          "source": "contracts/TokenDrop.algo.ts:250",
          "pc": [
            745,
            746
          ]
        },
        {
          "teal": 747,
          "source": "contracts/TokenDrop.algo.ts:250",
          "pc": [
            747,
            748
          ]
        },
        {
          "teal": 748,
          "source": "contracts/TokenDrop.algo.ts:250",
          "pc": [
            749
          ]
        },
        {
          "teal": 751,
          "source": "contracts/TokenDrop.algo.ts:250",
          "errorMessage": "box value does not exist: this.allDrops(this.dropForToken(tokenDropConfig.Token).value).value",
          "pc": [
            750
          ]
        },
        {
          "teal": 752,
          "source": "contracts/TokenDrop.algo.ts:251",
          "pc": [
            751,
            752,
            753
          ]
        },
        {
          "teal": 755,
          "source": "contracts/TokenDrop.algo.ts:251",
          "errorMessage": "existing drop must be expired or have no remaining tokens",
          "pc": [
            754
          ]
        },
        {
          "teal": 759,
          "source": "contracts/TokenDrop.algo.ts:253",
          "pc": [
            755,
            756
          ]
        },
        {
          "teal": 760,
          "source": "contracts/TokenDrop.algo.ts:253",
          "pc": [
            757,
            758
          ]
        },
        {
          "teal": 761,
          "source": "contracts/TokenDrop.algo.ts:253",
          "pc": [
            759,
            760,
            761
          ]
        },
        {
          "teal": 762,
          "source": "contracts/TokenDrop.algo.ts:253",
          "pc": [
            762
          ]
        },
        {
          "teal": 763,
          "source": "contracts/TokenDrop.algo.ts:253",
          "pc": [
            763
          ]
        },
        {
          "teal": 764,
          "source": "contracts/TokenDrop.algo.ts:253",
          "pc": [
            764
          ]
        },
        {
          "teal": 765,
          "source": "contracts/TokenDrop.algo.ts:253",
          "pc": [
            765
          ]
        },
        {
          "teal": 768,
          "source": "contracts/TokenDrop.algo.ts:253",
          "errorMessage": "box value does not exist: this.dropForToken(tokenDropConfig.Token).value",
          "pc": [
            766
          ]
        },
        {
          "teal": 769,
          "source": "contracts/TokenDrop.algo.ts:253",
          "pc": [
            767
          ]
        },
        {
          "teal": 770,
          "source": "contracts/TokenDrop.algo.ts:253",
          "pc": [
            768,
            769,
            770
          ]
        },
        {
          "teal": 775,
          "source": "contracts/TokenDrop.algo.ts:255",
          "pc": [
            771,
            772
          ]
        },
        {
          "teal": 776,
          "source": "contracts/TokenDrop.algo.ts:255",
          "pc": [
            773,
            774,
            775
          ]
        },
        {
          "teal": 780,
          "source": "contracts/TokenDrop.algo.ts:258",
          "pc": [
            776,
            777
          ]
        },
        {
          "teal": 781,
          "source": "contracts/TokenDrop.algo.ts:258",
          "pc": [
            778
          ]
        },
        {
          "teal": 782,
          "source": "contracts/TokenDrop.algo.ts:258",
          "pc": [
            779
          ]
        },
        {
          "teal": 783,
          "source": "contracts/TokenDrop.algo.ts:258",
          "pc": [
            780
          ]
        },
        {
          "teal": 784,
          "source": "contracts/TokenDrop.algo.ts:258",
          "pc": [
            781,
            782
          ]
        },
        {
          "teal": 785,
          "source": "contracts/TokenDrop.algo.ts:258",
          "pc": [
            783
          ]
        },
        {
          "teal": 786,
          "source": "contracts/TokenDrop.algo.ts:258",
          "pc": [
            784
          ]
        },
        {
          "teal": 790,
          "source": "contracts/TokenDrop.algo.ts:259",
          "pc": [
            785,
            786
          ]
        },
        {
          "teal": 791,
          "source": "contracts/TokenDrop.algo.ts:259",
          "pc": [
            787
          ]
        },
        {
          "teal": 792,
          "source": "contracts/TokenDrop.algo.ts:259",
          "pc": [
            788,
            789
          ]
        },
        {
          "teal": 803,
          "source": "contracts/TokenDrop.algo.ts:263",
          "pc": [
            790,
            791
          ]
        },
        {
          "teal": 804,
          "source": "contracts/TokenDrop.algo.ts:263",
          "pc": [
            792
          ]
        },
        {
          "teal": 805,
          "source": "contracts/TokenDrop.algo.ts:264",
          "pc": [
            793,
            794
          ]
        },
        {
          "teal": 806,
          "source": "contracts/TokenDrop.algo.ts:264",
          "pc": [
            795,
            796
          ]
        },
        {
          "teal": 807,
          "source": "contracts/TokenDrop.algo.ts:264",
          "pc": [
            797
          ]
        },
        {
          "teal": 808,
          "source": "contracts/TokenDrop.algo.ts:265",
          "pc": [
            798,
            799
          ]
        },
        {
          "teal": 809,
          "source": "contracts/TokenDrop.algo.ts:265",
          "pc": [
            800,
            801
          ]
        },
        {
          "teal": 810,
          "source": "contracts/TokenDrop.algo.ts:265",
          "pc": [
            802
          ]
        },
        {
          "teal": 811,
          "source": "contracts/TokenDrop.algo.ts:265",
          "pc": [
            803
          ]
        },
        {
          "teal": 812,
          "source": "contracts/TokenDrop.algo.ts:266",
          "pc": [
            804,
            805
          ]
        },
        {
          "teal": 813,
          "source": "contracts/TokenDrop.algo.ts:266",
          "pc": [
            806,
            807
          ]
        },
        {
          "teal": 814,
          "source": "contracts/TokenDrop.algo.ts:266",
          "pc": [
            808,
            809
          ]
        },
        {
          "teal": 815,
          "source": "contracts/TokenDrop.algo.ts:266",
          "pc": [
            810,
            811,
            812
          ]
        },
        {
          "teal": 816,
          "source": "contracts/TokenDrop.algo.ts:266",
          "pc": [
            813
          ]
        },
        {
          "teal": 817,
          "source": "contracts/TokenDrop.algo.ts:266",
          "pc": [
            814
          ]
        },
        {
          "teal": 818,
          "source": "contracts/TokenDrop.algo.ts:266",
          "pc": [
            815
          ]
        },
        {
          "teal": 819,
          "source": "contracts/TokenDrop.algo.ts:266",
          "pc": [
            816
          ]
        },
        {
          "teal": 820,
          "source": "contracts/TokenDrop.algo.ts:267",
          "pc": [
            817,
            818,
            819,
            820,
            821,
            822,
            823,
            824,
            825,
            826
          ]
        },
        {
          "teal": 821,
          "source": "contracts/TokenDrop.algo.ts:267",
          "pc": [
            827
          ]
        },
        {
          "teal": 822,
          "source": "contracts/TokenDrop.algo.ts:268",
          "pc": [
            828,
            829
          ]
        },
        {
          "teal": 823,
          "source": "contracts/TokenDrop.algo.ts:268",
          "pc": [
            830
          ]
        },
        {
          "teal": 824,
          "source": "contracts/TokenDrop.algo.ts:262",
          "pc": [
            831,
            832
          ]
        },
        {
          "teal": 828,
          "source": "contracts/TokenDrop.algo.ts:272",
          "pc": [
            833,
            834
          ]
        },
        {
          "teal": 829,
          "source": "contracts/TokenDrop.algo.ts:272",
          "pc": [
            835,
            836
          ]
        },
        {
          "teal": 830,
          "source": "contracts/TokenDrop.algo.ts:272",
          "pc": [
            837,
            838,
            839
          ]
        },
        {
          "teal": 835,
          "source": "contracts/TokenDrop.algo.ts:274",
          "pc": [
            840,
            841
          ]
        },
        {
          "teal": 836,
          "source": "contracts/TokenDrop.algo.ts:274",
          "pc": [
            842,
            843
          ]
        },
        {
          "teal": 837,
          "source": "contracts/TokenDrop.algo.ts:274",
          "pc": [
            844,
            845
          ]
        },
        {
          "teal": 838,
          "source": "contracts/TokenDrop.algo.ts:274",
          "pc": [
            846
          ]
        },
        {
          "teal": 841,
          "source": "contracts/TokenDrop.algo.ts:274",
          "errorMessage": "transaction verification failed: {\"txn\":\"feeAndMbrPayment\",\"field\":\"receiver\",\"expected\":\"this.app.address\"}",
          "pc": [
            847
          ]
        },
        {
          "teal": 845,
          "source": "contracts/TokenDrop.algo.ts:275",
          "pc": [
            848,
            849,
            850
          ]
        },
        {
          "teal": 846,
          "source": "contracts/TokenDrop.algo.ts:275",
          "pc": [
            851,
            852
          ]
        },
        {
          "teal": 850,
          "source": "contracts/TokenDrop.algo.ts:276",
          "pc": [
            853,
            854
          ]
        },
        {
          "teal": 851,
          "source": "contracts/TokenDrop.algo.ts:276",
          "pc": [
            855,
            856
          ]
        },
        {
          "teal": 852,
          "source": "contracts/TokenDrop.algo.ts:276",
          "pc": [
            857,
            858
          ]
        },
        {
          "teal": 853,
          "source": "contracts/TokenDrop.algo.ts:276",
          "pc": [
            859
          ]
        },
        {
          "teal": 856,
          "source": "contracts/TokenDrop.algo.ts:276",
          "errorMessage": "must pay at least MBR costs",
          "pc": [
            860
          ]
        },
        {
          "teal": 861,
          "source": "contracts/TokenDrop.algo.ts:277",
          "pc": [
            861,
            862
          ]
        },
        {
          "teal": 862,
          "source": "contracts/TokenDrop.algo.ts:277",
          "pc": [
            863,
            864
          ]
        },
        {
          "teal": 863,
          "source": "contracts/TokenDrop.algo.ts:277",
          "pc": [
            865,
            866
          ]
        },
        {
          "teal": 864,
          "source": "contracts/TokenDrop.algo.ts:277",
          "pc": [
            867
          ]
        },
        {
          "teal": 865,
          "source": "contracts/TokenDrop.algo.ts:277",
          "pc": [
            868,
            869,
            870
          ]
        },
        {
          "teal": 874,
          "source": "contracts/TokenDrop.algo.ts:278",
          "pc": [
            871
          ]
        },
        {
          "teal": 875,
          "source": "contracts/TokenDrop.algo.ts:278",
          "pc": [
            872
          ]
        },
        {
          "teal": 876,
          "source": "contracts/TokenDrop.algo.ts:278",
          "pc": [
            873,
            874
          ]
        },
        {
          "teal": 880,
          "source": "contracts/TokenDrop.algo.ts:279",
          "pc": [
            875,
            876
          ]
        },
        {
          "teal": 881,
          "source": "contracts/TokenDrop.algo.ts:279",
          "pc": [
            877,
            878
          ]
        },
        {
          "teal": 882,
          "source": "contracts/TokenDrop.algo.ts:279",
          "pc": [
            879,
            880
          ]
        },
        {
          "teal": 886,
          "source": "contracts/TokenDrop.algo.ts:280",
          "pc": [
            881,
            882
          ]
        },
        {
          "teal": 887,
          "source": "contracts/TokenDrop.algo.ts:280",
          "pc": [
            883,
            884
          ]
        },
        {
          "teal": 888,
          "source": "contracts/TokenDrop.algo.ts:280",
          "pc": [
            885,
            886
          ]
        },
        {
          "teal": 889,
          "source": "contracts/TokenDrop.algo.ts:280",
          "pc": [
            887
          ]
        },
        {
          "teal": 890,
          "source": "contracts/TokenDrop.algo.ts:280",
          "pc": [
            888,
            889
          ]
        },
        {
          "teal": 894,
          "source": "contracts/TokenDrop.algo.ts:281",
          "pc": [
            890,
            891,
            892,
            893,
            894,
            895,
            896,
            897,
            898,
            899,
            900,
            901,
            902,
            903,
            904,
            905,
            906,
            907,
            908
          ]
        },
        {
          "teal": 895,
          "source": "contracts/TokenDrop.algo.ts:281",
          "pc": [
            909,
            910
          ]
        },
        {
          "teal": 898,
          "source": "contracts/TokenDrop.algo.ts:278",
          "pc": [
            911
          ]
        },
        {
          "teal": 899,
          "source": "contracts/TokenDrop.algo.ts:278",
          "pc": [
            912,
            913
          ]
        },
        {
          "teal": 902,
          "source": "contracts/TokenDrop.algo.ts:278",
          "pc": [
            914
          ]
        },
        {
          "teal": 911,
          "source": "contracts/TokenDrop.algo.ts:286",
          "pc": [
            915
          ]
        },
        {
          "teal": 912,
          "source": "contracts/TokenDrop.algo.ts:286",
          "pc": [
            916
          ]
        },
        {
          "teal": 913,
          "source": "contracts/TokenDrop.algo.ts:286",
          "pc": [
            917,
            918
          ]
        },
        {
          "teal": 917,
          "source": "contracts/TokenDrop.algo.ts:287",
          "pc": [
            919,
            920
          ]
        },
        {
          "teal": 918,
          "source": "contracts/TokenDrop.algo.ts:287",
          "pc": [
            921
          ]
        },
        {
          "teal": 919,
          "source": "contracts/TokenDrop.algo.ts:287",
          "pc": [
            922,
            923
          ]
        },
        {
          "teal": 923,
          "source": "contracts/TokenDrop.algo.ts:288",
          "pc": [
            924
          ]
        },
        {
          "teal": 924,
          "source": "contracts/TokenDrop.algo.ts:288",
          "pc": [
            925
          ]
        },
        {
          "teal": 925,
          "source": "contracts/TokenDrop.algo.ts:288",
          "pc": [
            926,
            927
          ]
        },
        {
          "teal": 926,
          "source": "contracts/TokenDrop.algo.ts:288",
          "pc": [
            928
          ]
        },
        {
          "teal": 927,
          "source": "contracts/TokenDrop.algo.ts:288",
          "pc": [
            929,
            930
          ]
        },
        {
          "teal": 931,
          "source": "contracts/TokenDrop.algo.ts:289",
          "pc": [
            931,
            932
          ]
        },
        {
          "teal": 932,
          "source": "contracts/TokenDrop.algo.ts:289",
          "pc": [
            933,
            934
          ]
        },
        {
          "teal": 935,
          "source": "contracts/TokenDrop.algo.ts:286",
          "pc": [
            935
          ]
        },
        {
          "teal": 936,
          "source": "contracts/TokenDrop.algo.ts:286",
          "pc": [
            936,
            937
          ]
        },
        {
          "teal": 939,
          "source": "contracts/TokenDrop.algo.ts:286",
          "pc": [
            938
          ]
        },
        {
          "teal": 947,
          "source": "contracts/TokenDrop.algo.ts:291",
          "pc": [
            939
          ]
        },
        {
          "teal": 948,
          "source": "contracts/TokenDrop.algo.ts:291",
          "pc": [
            940
          ]
        },
        {
          "teal": 949,
          "source": "contracts/TokenDrop.algo.ts:291",
          "pc": [
            941,
            942
          ]
        },
        {
          "teal": 953,
          "source": "contracts/TokenDrop.algo.ts:292",
          "pc": [
            943,
            944
          ]
        },
        {
          "teal": 954,
          "source": "contracts/TokenDrop.algo.ts:292",
          "pc": [
            945
          ]
        },
        {
          "teal": 955,
          "source": "contracts/TokenDrop.algo.ts:292",
          "pc": [
            946
          ]
        },
        {
          "teal": 956,
          "source": "contracts/TokenDrop.algo.ts:292",
          "pc": [
            947,
            948
          ]
        },
        {
          "teal": 957,
          "source": "contracts/TokenDrop.algo.ts:292",
          "pc": [
            949,
            950
          ]
        },
        {
          "teal": 961,
          "source": "contracts/TokenDrop.algo.ts:293",
          "pc": [
            951
          ]
        },
        {
          "teal": 962,
          "source": "contracts/TokenDrop.algo.ts:293",
          "pc": [
            952
          ]
        },
        {
          "teal": 963,
          "source": "contracts/TokenDrop.algo.ts:293",
          "pc": [
            953,
            954
          ]
        },
        {
          "teal": 964,
          "source": "contracts/TokenDrop.algo.ts:293",
          "pc": [
            955
          ]
        },
        {
          "teal": 965,
          "source": "contracts/TokenDrop.algo.ts:293",
          "pc": [
            956,
            957
          ]
        },
        {
          "teal": 969,
          "source": "contracts/TokenDrop.algo.ts:294",
          "pc": [
            958,
            959
          ]
        },
        {
          "teal": 970,
          "source": "contracts/TokenDrop.algo.ts:294",
          "pc": [
            960,
            961
          ]
        },
        {
          "teal": 973,
          "source": "contracts/TokenDrop.algo.ts:291",
          "pc": [
            962
          ]
        },
        {
          "teal": 974,
          "source": "contracts/TokenDrop.algo.ts:291",
          "pc": [
            963,
            964
          ]
        },
        {
          "teal": 977,
          "source": "contracts/TokenDrop.algo.ts:291",
          "pc": [
            965
          ]
        },
        {
          "teal": 981,
          "source": "contracts/TokenDrop.algo.ts:297",
          "pc": [
            966,
            967
          ]
        },
        {
          "teal": 984,
          "source": "contracts/TokenDrop.algo.ts:223",
          "pc": [
            968,
            969
          ]
        },
        {
          "teal": 987,
          "source": "contracts/TokenDrop.algo.ts:223",
          "pc": [
            970,
            971
          ]
        },
        {
          "teal": 988,
          "source": "contracts/TokenDrop.algo.ts:223",
          "pc": [
            972
          ]
        },
        {
          "teal": 993,
          "source": "contracts/TokenDrop.algo.ts:300",
          "pc": [
            973,
            974,
            975
          ]
        },
        {
          "teal": 994,
          "source": "contracts/TokenDrop.algo.ts:300",
          "pc": [
            976
          ]
        },
        {
          "teal": 997,
          "source": "contracts/TokenDrop.algo.ts:300",
          "pc": [
            977,
            978,
            979
          ]
        },
        {
          "teal": 998,
          "source": "contracts/TokenDrop.algo.ts:300",
          "pc": [
            980
          ]
        },
        {
          "teal": 999,
          "source": "contracts/TokenDrop.algo.ts:300",
          "pc": [
            981
          ]
        },
        {
          "teal": 1003,
          "source": "contracts/TokenDrop.algo.ts:300",
          "pc": [
            982,
            983,
            984
          ]
        },
        {
          "teal": 1006,
          "source": "contracts/TokenDrop.algo.ts:300",
          "pc": [
            985
          ]
        },
        {
          "teal": 1010,
          "source": "contracts/TokenDrop.algo.ts:301",
          "pc": [
            986
          ]
        },
        {
          "teal": 1011,
          "source": "contracts/TokenDrop.algo.ts:301",
          "pc": [
            987,
            988
          ]
        },
        {
          "teal": 1012,
          "source": "contracts/TokenDrop.algo.ts:301",
          "pc": [
            989
          ]
        },
        {
          "teal": 1013,
          "source": "contracts/TokenDrop.algo.ts:301",
          "pc": [
            990
          ]
        },
        {
          "teal": 1014,
          "source": "contracts/TokenDrop.algo.ts:301",
          "pc": [
            991,
            992
          ]
        },
        {
          "teal": 1018,
          "source": "contracts/TokenDrop.algo.ts:302",
          "pc": [
            993,
            994
          ]
        },
        {
          "teal": 1019,
          "source": "contracts/TokenDrop.algo.ts:302",
          "pc": [
            995
          ]
        },
        {
          "teal": 1020,
          "source": "contracts/TokenDrop.algo.ts:302",
          "pc": [
            996
          ]
        },
        {
          "teal": 1021,
          "source": "contracts/TokenDrop.algo.ts:301",
          "pc": [
            997
          ]
        },
        {
          "teal": 1022,
          "source": "contracts/TokenDrop.algo.ts:301",
          "pc": [
            998,
            999
          ]
        },
        {
          "teal": 1023,
          "source": "contracts/TokenDrop.algo.ts:301",
          "pc": [
            1000
          ]
        },
        {
          "teal": 1024,
          "source": "contracts/TokenDrop.algo.ts:301",
          "pc": [
            1001
          ]
        },
        {
          "teal": 1025,
          "source": "contracts/TokenDrop.algo.ts:301",
          "pc": [
            1002,
            1003
          ]
        },
        {
          "teal": 1026,
          "source": "contracts/TokenDrop.algo.ts:301",
          "pc": [
            1004
          ]
        },
        {
          "teal": 1027,
          "source": "contracts/TokenDrop.algo.ts:302",
          "pc": [
            1005
          ]
        },
        {
          "teal": 1030,
          "source": "contracts/TokenDrop.algo.ts:302",
          "errorMessage": "only drop creator can cancel a drop",
          "pc": [
            1006
          ]
        },
        {
          "teal": 1034,
          "source": "contracts/TokenDrop.algo.ts:303",
          "pc": [
            1007,
            1008
          ]
        },
        {
          "teal": 1035,
          "source": "contracts/TokenDrop.algo.ts:303",
          "pc": [
            1009,
            1010,
            1011
          ]
        },
        {
          "teal": 1036,
          "source": "contracts/TokenDrop.algo.ts:300",
          "pc": [
            1012
          ]
        },
        {
          "teal": 1041,
          "source": "contracts/TokenDrop.algo.ts:313",
          "pc": [
            1013,
            1014,
            1015
          ]
        },
        {
          "teal": 1042,
          "source": "contracts/TokenDrop.algo.ts:313",
          "pc": [
            1016
          ]
        },
        {
          "teal": 1045,
          "source": "contracts/TokenDrop.algo.ts:313",
          "pc": [
            1017,
            1018,
            1019
          ]
        },
        {
          "teal": 1046,
          "source": "contracts/TokenDrop.algo.ts:313",
          "pc": [
            1020
          ]
        },
        {
          "teal": 1049,
          "source": "contracts/TokenDrop.algo.ts:313",
          "pc": [
            1021,
            1022
          ]
        },
        {
          "teal": 1050,
          "source": "contracts/TokenDrop.algo.ts:313",
          "pc": [
            1023
          ]
        },
        {
          "teal": 1051,
          "source": "contracts/TokenDrop.algo.ts:313",
          "pc": [
            1024
          ]
        },
        {
          "teal": 1052,
          "source": "contracts/TokenDrop.algo.ts:313",
          "pc": [
            1025
          ]
        },
        {
          "teal": 1053,
          "source": "contracts/TokenDrop.algo.ts:313",
          "pc": [
            1026,
            1027
          ]
        },
        {
          "teal": 1054,
          "source": "contracts/TokenDrop.algo.ts:313",
          "pc": [
            1028
          ]
        },
        {
          "teal": 1055,
          "source": "contracts/TokenDrop.algo.ts:313",
          "pc": [
            1029
          ]
        },
        {
          "teal": 1058,
          "source": "contracts/TokenDrop.algo.ts:313",
          "errorMessage": "argument 2 (feeAndMbrPayment) for claimDrop must be a pay transaction",
          "pc": [
            1030
          ]
        },
        {
          "teal": 1061,
          "source": "contracts/TokenDrop.algo.ts:313",
          "pc": [
            1031,
            1032,
            1033
          ]
        },
        {
          "teal": 1062,
          "source": "contracts/TokenDrop.algo.ts:313",
          "pc": [
            1034
          ]
        },
        {
          "teal": 1063,
          "source": "contracts/TokenDrop.algo.ts:313",
          "pc": [
            1035
          ]
        },
        {
          "teal": 1073,
          "source": "contracts/TokenDrop.algo.ts:313",
          "pc": [
            1036,
            1037,
            1038
          ]
        },
        {
          "teal": 1076,
          "source": "contracts/TokenDrop.algo.ts:313",
          "pc": [
            1039
          ]
        },
        {
          "teal": 1077,
          "source": "contracts/TokenDrop.algo.ts:313",
          "pc": [
            1040,
            1041
          ]
        },
        {
          "teal": 1081,
          "source": "contracts/TokenDrop.algo.ts:314",
          "pc": [
            1042
          ]
        },
        {
          "teal": 1082,
          "source": "contracts/TokenDrop.algo.ts:314",
          "pc": [
            1043,
            1044
          ]
        },
        {
          "teal": 1083,
          "source": "contracts/TokenDrop.algo.ts:314",
          "pc": [
            1045
          ]
        },
        {
          "teal": 1084,
          "source": "contracts/TokenDrop.algo.ts:314",
          "pc": [
            1046
          ]
        },
        {
          "teal": 1085,
          "source": "contracts/TokenDrop.algo.ts:314",
          "pc": [
            1047,
            1048
          ]
        },
        {
          "teal": 1089,
          "source": "contracts/TokenDrop.algo.ts:315",
          "pc": [
            1049,
            1050
          ]
        },
        {
          "teal": 1090,
          "source": "contracts/TokenDrop.algo.ts:315",
          "pc": [
            1051
          ]
        },
        {
          "teal": 1091,
          "source": "contracts/TokenDrop.algo.ts:315",
          "pc": [
            1052
          ]
        },
        {
          "teal": 1092,
          "source": "contracts/TokenDrop.algo.ts:314",
          "pc": [
            1053
          ]
        },
        {
          "teal": 1093,
          "source": "contracts/TokenDrop.algo.ts:314",
          "pc": [
            1054,
            1055
          ]
        },
        {
          "teal": 1094,
          "source": "contracts/TokenDrop.algo.ts:314",
          "pc": [
            1056
          ]
        },
        {
          "teal": 1095,
          "source": "contracts/TokenDrop.algo.ts:314",
          "pc": [
            1057
          ]
        },
        {
          "teal": 1096,
          "source": "contracts/TokenDrop.algo.ts:314",
          "pc": [
            1058,
            1059
          ]
        },
        {
          "teal": 1097,
          "source": "contracts/TokenDrop.algo.ts:314",
          "pc": [
            1060
          ]
        },
        {
          "teal": 1098,
          "source": "contracts/TokenDrop.algo.ts:315",
          "pc": [
            1061
          ]
        },
        {
          "teal": 1101,
          "source": "contracts/TokenDrop.algo.ts:315",
          "errorMessage": "drop creator cannot claim",
          "pc": [
            1062
          ]
        },
        {
          "teal": 1105,
          "source": "contracts/TokenDrop.algo.ts:314",
          "pc": [
            1063,
            1064
          ]
        },
        {
          "teal": 1106,
          "source": "contracts/TokenDrop.algo.ts:314",
          "pc": [
            1065
          ]
        },
        {
          "teal": 1109,
          "source": "contracts/TokenDrop.algo.ts:314",
          "errorMessage": "box value does not exist: this.allDrops(tokenDropId).value",
          "pc": [
            1066
          ]
        },
        {
          "teal": 1110,
          "source": "contracts/TokenDrop.algo.ts:317",
          "pc": [
            1067,
            1068,
            1069
          ]
        },
        {
          "teal": 1111,
          "source": "contracts/TokenDrop.algo.ts:317",
          "pc": [
            1070
          ]
        },
        {
          "teal": 1114,
          "source": "contracts/TokenDrop.algo.ts:317",
          "errorMessage": "airdrop has ended or out of tokens",
          "pc": [
            1071
          ]
        },
        {
          "teal": 1118,
          "source": "contracts/TokenDrop.algo.ts:318",
          "pc": [
            1072,
            1073
          ]
        },
        {
          "teal": 1119,
          "source": "contracts/TokenDrop.algo.ts:318",
          "pc": [
            1074,
            1075
          ]
        },
        {
          "teal": 1120,
          "source": "contracts/TokenDrop.algo.ts:318",
          "pc": [
            1076
          ]
        },
        {
          "teal": 1121,
          "source": "contracts/TokenDrop.algo.ts:314",
          "pc": [
            1077
          ]
        },
        {
          "teal": 1122,
          "source": "contracts/TokenDrop.algo.ts:314",
          "pc": [
            1078,
            1079
          ]
        },
        {
          "teal": 1123,
          "source": "contracts/TokenDrop.algo.ts:314",
          "pc": [
            1080
          ]
        },
        {
          "teal": 1124,
          "source": "contracts/TokenDrop.algo.ts:314",
          "pc": [
            1081
          ]
        },
        {
          "teal": 1125,
          "source": "contracts/TokenDrop.algo.ts:314",
          "pc": [
            1082,
            1083
          ]
        },
        {
          "teal": 1126,
          "source": "contracts/TokenDrop.algo.ts:314",
          "pc": [
            1084
          ]
        },
        {
          "teal": 1127,
          "source": "contracts/TokenDrop.algo.ts:318",
          "pc": [
            1085
          ]
        },
        {
          "teal": 1128,
          "source": "contracts/TokenDrop.algo.ts:318",
          "pc": [
            1086,
            1087
          ]
        },
        {
          "teal": 1129,
          "source": "contracts/TokenDrop.algo.ts:318",
          "pc": [
            1088
          ]
        },
        {
          "teal": 1130,
          "source": "contracts/TokenDrop.algo.ts:318",
          "pc": [
            1089
          ]
        },
        {
          "teal": 1133,
          "source": "contracts/TokenDrop.algo.ts:318",
          "errorMessage": "claimant must already be opted-in to token!",
          "pc": [
            1090
          ]
        },
        {
          "teal": 1137,
          "source": "contracts/TokenDrop.algo.ts:320",
          "pc": [
            1091,
            1092
          ]
        },
        {
          "teal": 1138,
          "source": "contracts/TokenDrop.algo.ts:320",
          "pc": [
            1093
          ]
        },
        {
          "teal": 1139,
          "source": "contracts/TokenDrop.algo.ts:320",
          "pc": [
            1094,
            1095
          ]
        },
        {
          "teal": 1140,
          "source": "contracts/TokenDrop.algo.ts:320",
          "pc": [
            1096
          ]
        },
        {
          "teal": 1141,
          "source": "contracts/TokenDrop.algo.ts:320",
          "pc": [
            1097,
            1098
          ]
        },
        {
          "teal": 1145,
          "source": "contracts/TokenDrop.algo.ts:321",
          "pc": [
            1099,
            1100
          ]
        },
        {
          "teal": 1146,
          "source": "contracts/TokenDrop.algo.ts:321",
          "pc": [
            1101,
            1102
          ]
        },
        {
          "teal": 1147,
          "source": "contracts/TokenDrop.algo.ts:321",
          "pc": [
            1103
          ]
        },
        {
          "teal": 1148,
          "source": "contracts/TokenDrop.algo.ts:321",
          "pc": [
            1104
          ]
        },
        {
          "teal": 1149,
          "source": "contracts/TokenDrop.algo.ts:321",
          "pc": [
            1105
          ]
        },
        {
          "teal": 1150,
          "source": "contracts/TokenDrop.algo.ts:321",
          "pc": [
            1106
          ]
        },
        {
          "teal": 1151,
          "source": "contracts/TokenDrop.algo.ts:321",
          "pc": [
            1107
          ]
        },
        {
          "teal": 1154,
          "source": "contracts/TokenDrop.algo.ts:321",
          "errorMessage": "already claimed",
          "pc": [
            1108
          ]
        },
        {
          "teal": 1158,
          "source": "contracts/TokenDrop.algo.ts:324",
          "pc": [
            1109,
            1110
          ]
        },
        {
          "teal": 1159,
          "source": "contracts/TokenDrop.algo.ts:324",
          "pc": [
            1111,
            1112
          ]
        },
        {
          "teal": 1160,
          "source": "contracts/TokenDrop.algo.ts:324",
          "pc": [
            1113,
            1114,
            1115
          ]
        },
        {
          "teal": 1164,
          "source": "contracts/TokenDrop.algo.ts:328",
          "pc": [
            1116,
            1117,
            1118
          ]
        },
        {
          "teal": 1165,
          "source": "contracts/TokenDrop.algo.ts:328",
          "pc": [
            1119,
            1120
          ]
        },
        {
          "teal": 1169,
          "source": "contracts/TokenDrop.algo.ts:329",
          "pc": [
            1121,
            1122,
            1123
          ]
        },
        {
          "teal": 1170,
          "source": "contracts/TokenDrop.algo.ts:329",
          "pc": [
            1124,
            1125
          ]
        },
        {
          "teal": 1174,
          "source": "contracts/TokenDrop.algo.ts:330",
          "pc": [
            1126,
            1127
          ]
        },
        {
          "teal": 1175,
          "source": "contracts/TokenDrop.algo.ts:330",
          "pc": [
            1128,
            1129
          ]
        },
        {
          "teal": 1176,
          "source": "contracts/TokenDrop.algo.ts:330",
          "pc": [
            1130,
            1131
          ]
        },
        {
          "teal": 1177,
          "source": "contracts/TokenDrop.algo.ts:330",
          "pc": [
            1132
          ]
        },
        {
          "teal": 1178,
          "source": "contracts/TokenDrop.algo.ts:330",
          "pc": [
            1133
          ]
        },
        {
          "teal": 1181,
          "source": "contracts/TokenDrop.algo.ts:330",
          "errorMessage": "per-claim fee too low",
          "pc": [
            1134
          ]
        },
        {
          "teal": 1190,
          "source": "contracts/TokenDrop.algo.ts:331",
          "pc": [
            1135,
            1136
          ]
        },
        {
          "teal": 1191,
          "source": "contracts/TokenDrop.algo.ts:332",
          "pc": [
            1137,
            1138
          ]
        },
        {
          "teal": 1192,
          "source": "contracts/TokenDrop.algo.ts:332",
          "pc": [
            1139,
            1140
          ]
        },
        {
          "teal": 1193,
          "source": "contracts/TokenDrop.algo.ts:332",
          "pc": [
            1141
          ]
        },
        {
          "teal": 1196,
          "source": "contracts/TokenDrop.algo.ts:332",
          "errorMessage": "transaction verification failed: {\"txn\":\"feeAndMbrPayment\",\"field\":\"receiver\",\"expected\":\"this.app.address\"}",
          "pc": [
            1142
          ]
        },
        {
          "teal": 1199,
          "source": "contracts/TokenDrop.algo.ts:331",
          "pc": [
            1143,
            1144
          ]
        },
        {
          "teal": 1200,
          "source": "contracts/TokenDrop.algo.ts:333",
          "pc": [
            1145,
            1146
          ]
        },
        {
          "teal": 1201,
          "source": "contracts/TokenDrop.algo.ts:333",
          "pc": [
            1147,
            1148
          ]
        },
        {
          "teal": 1202,
          "source": "contracts/TokenDrop.algo.ts:333",
          "pc": [
            1149
          ]
        },
        {
          "teal": 1205,
          "source": "contracts/TokenDrop.algo.ts:333",
          "errorMessage": "transaction verification failed: {\"txn\":\"feeAndMbrPayment\",\"field\":\"sender\",\"expected\":\"this.txn.sender\"}",
          "pc": [
            1150
          ]
        },
        {
          "teal": 1208,
          "source": "contracts/TokenDrop.algo.ts:331",
          "pc": [
            1151,
            1152
          ]
        },
        {
          "teal": 1209,
          "source": "contracts/TokenDrop.algo.ts:334",
          "pc": [
            1153,
            1154
          ]
        },
        {
          "teal": 1210,
          "source": "contracts/TokenDrop.algo.ts:334",
          "pc": [
            1155,
            1156
          ]
        },
        {
          "teal": 1211,
          "source": "contracts/TokenDrop.algo.ts:334",
          "pc": [
            1157
          ]
        },
        {
          "teal": 1214,
          "source": "contracts/TokenDrop.algo.ts:334",
          "errorMessage": "transaction verification failed: {\"txn\":\"feeAndMbrPayment\",\"field\":\"amount\",\"expected\":\"perClaimerFee\"}",
          "pc": [
            1158
          ]
        },
        {
          "teal": 1218,
          "source": "contracts/TokenDrop.algo.ts:336",
          "pc": [
            1159,
            1160
          ]
        },
        {
          "teal": 1219,
          "source": "contracts/TokenDrop.algo.ts:336",
          "pc": [
            1161,
            1162,
            1163
          ]
        },
        {
          "teal": 1220,
          "source": "contracts/TokenDrop.algo.ts:336",
          "pc": [
            1164
          ]
        },
        {
          "teal": 1221,
          "source": "contracts/TokenDrop.algo.ts:336",
          "pc": [
            1165,
            1166,
            1167
          ]
        },
        {
          "teal": 1222,
          "source": "contracts/TokenDrop.algo.ts:336",
          "pc": [
            1168
          ]
        },
        {
          "teal": 1223,
          "source": "contracts/TokenDrop.algo.ts:336",
          "pc": [
            1169,
            1170
          ]
        },
        {
          "teal": 1231,
          "source": "contracts/TokenDrop.algo.ts:337",
          "pc": [
            1171
          ]
        },
        {
          "teal": 1232,
          "source": "contracts/TokenDrop.algo.ts:337",
          "pc": [
            1172
          ]
        },
        {
          "teal": 1233,
          "source": "contracts/TokenDrop.algo.ts:337",
          "pc": [
            1173,
            1174
          ]
        },
        {
          "teal": 1237,
          "source": "contracts/TokenDrop.algo.ts:338",
          "pc": [
            1175,
            1176
          ]
        },
        {
          "teal": 1238,
          "source": "contracts/TokenDrop.algo.ts:338",
          "pc": [
            1177
          ]
        },
        {
          "teal": 1239,
          "source": "contracts/TokenDrop.algo.ts:338",
          "pc": [
            1178,
            1179
          ]
        },
        {
          "teal": 1243,
          "source": "contracts/TokenDrop.algo.ts:339",
          "pc": [
            1180,
            1181
          ]
        },
        {
          "teal": 1244,
          "source": "contracts/TokenDrop.algo.ts:339",
          "pc": [
            1182,
            1183
          ]
        },
        {
          "teal": 1248,
          "source": "contracts/TokenDrop.algo.ts:340",
          "pc": [
            1184,
            1185
          ]
        },
        {
          "teal": 1249,
          "source": "contracts/TokenDrop.algo.ts:340",
          "pc": [
            1186,
            1187
          ]
        },
        {
          "teal": 1252,
          "source": "contracts/TokenDrop.algo.ts:337",
          "pc": [
            1188
          ]
        },
        {
          "teal": 1253,
          "source": "contracts/TokenDrop.algo.ts:337",
          "pc": [
            1189,
            1190
          ]
        },
        {
          "teal": 1256,
          "source": "contracts/TokenDrop.algo.ts:337",
          "pc": [
            1191
          ]
        },
        {
          "teal": 1260,
          "source": "contracts/TokenDrop.algo.ts:343",
          "pc": [
            1192,
            1193
          ]
        },
        {
          "teal": 1261,
          "source": "contracts/TokenDrop.algo.ts:343",
          "pc": [
            1194,
            1195
          ]
        },
        {
          "teal": 1262,
          "source": "contracts/TokenDrop.algo.ts:343",
          "pc": [
            1196
          ]
        },
        {
          "teal": 1263,
          "source": "contracts/TokenDrop.algo.ts:343",
          "pc": [
            1197,
            1198
          ]
        },
        {
          "teal": 1264,
          "source": "contracts/TokenDrop.algo.ts:343",
          "pc": [
            1199
          ]
        },
        {
          "teal": 1265,
          "source": "contracts/TokenDrop.algo.ts:343",
          "pc": [
            1200,
            1201
          ]
        },
        {
          "teal": 1273,
          "source": "contracts/TokenDrop.algo.ts:344",
          "pc": [
            1202
          ]
        },
        {
          "teal": 1274,
          "source": "contracts/TokenDrop.algo.ts:344",
          "pc": [
            1203
          ]
        },
        {
          "teal": 1275,
          "source": "contracts/TokenDrop.algo.ts:344",
          "pc": [
            1204,
            1205
          ]
        },
        {
          "teal": 1279,
          "source": "contracts/TokenDrop.algo.ts:345",
          "pc": [
            1206,
            1207
          ]
        },
        {
          "teal": 1280,
          "source": "contracts/TokenDrop.algo.ts:345",
          "pc": [
            1208
          ]
        },
        {
          "teal": 1281,
          "source": "contracts/TokenDrop.algo.ts:345",
          "pc": [
            1209
          ]
        },
        {
          "teal": 1282,
          "source": "contracts/TokenDrop.algo.ts:345",
          "pc": [
            1210,
            1211
          ]
        },
        {
          "teal": 1283,
          "source": "contracts/TokenDrop.algo.ts:345",
          "pc": [
            1212,
            1213
          ]
        },
        {
          "teal": 1287,
          "source": "contracts/TokenDrop.algo.ts:346",
          "pc": [
            1214,
            1215
          ]
        },
        {
          "teal": 1288,
          "source": "contracts/TokenDrop.algo.ts:346",
          "pc": [
            1216,
            1217
          ]
        },
        {
          "teal": 1292,
          "source": "contracts/TokenDrop.algo.ts:347",
          "pc": [
            1218,
            1219
          ]
        },
        {
          "teal": 1293,
          "source": "contracts/TokenDrop.algo.ts:347",
          "pc": [
            1220,
            1221
          ]
        },
        {
          "teal": 1296,
          "source": "contracts/TokenDrop.algo.ts:344",
          "pc": [
            1222
          ]
        },
        {
          "teal": 1297,
          "source": "contracts/TokenDrop.algo.ts:344",
          "pc": [
            1223,
            1224
          ]
        },
        {
          "teal": 1300,
          "source": "contracts/TokenDrop.algo.ts:344",
          "pc": [
            1225
          ]
        },
        {
          "teal": 1304,
          "source": "contracts/TokenDrop.algo.ts:352",
          "pc": [
            1226,
            1227
          ]
        },
        {
          "teal": 1305,
          "source": "contracts/TokenDrop.algo.ts:352",
          "pc": [
            1228,
            1229
          ]
        },
        {
          "teal": 1306,
          "source": "contracts/TokenDrop.algo.ts:352",
          "pc": [
            1230
          ]
        },
        {
          "teal": 1307,
          "source": "contracts/TokenDrop.algo.ts:352",
          "pc": [
            1231,
            1232
          ]
        },
        {
          "teal": 1308,
          "source": "contracts/TokenDrop.algo.ts:352",
          "pc": [
            1233,
            1234,
            1235,
            1236,
            1237,
            1238,
            1239,
            1240,
            1241,
            1242,
            1243,
            1244,
            1245,
            1246,
            1247,
            1248,
            1249,
            1250,
            1251,
            1252,
            1253,
            1254,
            1255,
            1256,
            1257,
            1258,
            1259,
            1260,
            1261,
            1262,
            1263,
            1264,
            1265,
            1266
          ]
        },
        {
          "teal": 1309,
          "source": "contracts/TokenDrop.algo.ts:352",
          "pc": [
            1267
          ]
        },
        {
          "teal": 1310,
          "source": "contracts/TokenDrop.algo.ts:352",
          "pc": [
            1268
          ]
        },
        {
          "teal": 1311,
          "source": "contracts/TokenDrop.algo.ts:352",
          "pc": [
            1269,
            1270,
            1271
          ]
        },
        {
          "teal": 1312,
          "source": "contracts/TokenDrop.algo.ts:352",
          "pc": [
            1272
          ]
        },
        {
          "teal": 1313,
          "source": "contracts/TokenDrop.algo.ts:352",
          "pc": [
            1273
          ]
        },
        {
          "teal": 1314,
          "source": "contracts/TokenDrop.algo.ts:352",
          "pc": [
            1274
          ]
        },
        {
          "teal": 1315,
          "source": "contracts/TokenDrop.algo.ts:352",
          "pc": [
            1275,
            1276,
            1277
          ]
        },
        {
          "teal": 1316,
          "source": "contracts/TokenDrop.algo.ts:352",
          "pc": [
            1278
          ]
        },
        {
          "teal": 1320,
          "source": "contracts/TokenDrop.algo.ts:354",
          "pc": [
            1279,
            1280
          ]
        },
        {
          "teal": 1321,
          "source": "contracts/TokenDrop.algo.ts:354",
          "pc": [
            1281
          ]
        },
        {
          "teal": 1322,
          "source": "contracts/TokenDrop.algo.ts:354",
          "pc": [
            1282
          ]
        },
        {
          "teal": 1323,
          "source": "contracts/TokenDrop.algo.ts:354",
          "pc": [
            1283
          ]
        },
        {
          "teal": 1324,
          "source": "contracts/TokenDrop.algo.ts:354",
          "pc": [
            1284,
            1285
          ]
        },
        {
          "teal": 1325,
          "source": "contracts/TokenDrop.algo.ts:354",
          "pc": [
            1286
          ]
        },
        {
          "teal": 1326,
          "source": "contracts/TokenDrop.algo.ts:354",
          "pc": [
            1287
          ]
        },
        {
          "teal": 1330,
          "source": "contracts/TokenDrop.algo.ts:356",
          "pc": [
            1288,
            1289
          ]
        },
        {
          "teal": 1331,
          "source": "contracts/TokenDrop.algo.ts:356",
          "pc": [
            1290
          ]
        },
        {
          "teal": 1332,
          "source": "contracts/TokenDrop.algo.ts:314",
          "pc": [
            1291
          ]
        },
        {
          "teal": 1333,
          "source": "contracts/TokenDrop.algo.ts:314",
          "pc": [
            1292,
            1293
          ]
        },
        {
          "teal": 1334,
          "source": "contracts/TokenDrop.algo.ts:314",
          "pc": [
            1294
          ]
        },
        {
          "teal": 1335,
          "source": "contracts/TokenDrop.algo.ts:314",
          "pc": [
            1295
          ]
        },
        {
          "teal": 1336,
          "source": "contracts/TokenDrop.algo.ts:314",
          "pc": [
            1296,
            1297
          ]
        },
        {
          "teal": 1337,
          "source": "contracts/TokenDrop.algo.ts:314",
          "pc": [
            1298
          ]
        },
        {
          "teal": 1338,
          "source": "contracts/TokenDrop.algo.ts:356",
          "pc": [
            1299
          ]
        },
        {
          "teal": 1339,
          "source": "contracts/TokenDrop.algo.ts:356",
          "pc": [
            1300,
            1301
          ]
        },
        {
          "teal": 1340,
          "source": "contracts/TokenDrop.algo.ts:314",
          "pc": [
            1302,
            1303
          ]
        },
        {
          "teal": 1341,
          "source": "contracts/TokenDrop.algo.ts:314",
          "pc": [
            1304
          ]
        },
        {
          "teal": 1344,
          "source": "contracts/TokenDrop.algo.ts:314",
          "errorMessage": "box value does not exist: this.allDrops(tokenDropId).value",
          "pc": [
            1305
          ]
        },
        {
          "teal": 1345,
          "source": "contracts/TokenDrop.algo.ts:356",
          "pc": [
            1306,
            1307,
            1308
          ]
        },
        {
          "teal": 1346,
          "source": "contracts/TokenDrop.algo.ts:313",
          "pc": [
            1309
          ]
        },
        {
          "teal": 1351,
          "source": "contracts/TokenDrop.algo.ts:363",
          "pc": [
            1310,
            1311,
            1312
          ]
        },
        {
          "teal": 1352,
          "source": "contracts/TokenDrop.algo.ts:363",
          "pc": [
            1313
          ]
        },
        {
          "teal": 1353,
          "source": "contracts/TokenDrop.algo.ts:363",
          "pc": [
            1314
          ]
        },
        {
          "teal": 1354,
          "source": "contracts/TokenDrop.algo.ts:363",
          "pc": [
            1315
          ]
        },
        {
          "teal": 1355,
          "source": "contracts/TokenDrop.algo.ts:363",
          "pc": [
            1316
          ]
        },
        {
          "teal": 1358,
          "source": "contracts/TokenDrop.algo.ts:363",
          "errorMessage": "argument 0 (receiver) for claimClaimerBoxCost must be a address",
          "pc": [
            1317
          ]
        },
        {
          "teal": 1361,
          "source": "contracts/TokenDrop.algo.ts:363",
          "pc": [
            1318,
            1319,
            1320
          ]
        },
        {
          "teal": 1362,
          "source": "contracts/TokenDrop.algo.ts:363",
          "pc": [
            1321
          ]
        },
        {
          "teal": 1363,
          "source": "contracts/TokenDrop.algo.ts:363",
          "pc": [
            1322
          ]
        },
        {
          "teal": 1364,
          "source": "contracts/TokenDrop.algo.ts:363",
          "pc": [
            1323
          ]
        },
        {
          "teal": 1365,
          "source": "contracts/TokenDrop.algo.ts:363",
          "pc": [
            1324
          ]
        },
        {
          "teal": 1368,
          "source": "contracts/TokenDrop.algo.ts:363",
          "errorMessage": "argument 1 (claimerAddress) for claimClaimerBoxCost must be a address",
          "pc": [
            1325
          ]
        },
        {
          "teal": 1371,
          "source": "contracts/TokenDrop.algo.ts:363",
          "pc": [
            1326,
            1327,
            1328
          ]
        },
        {
          "teal": 1372,
          "source": "contracts/TokenDrop.algo.ts:363",
          "pc": [
            1329
          ]
        },
        {
          "teal": 1375,
          "source": "contracts/TokenDrop.algo.ts:363",
          "pc": [
            1330,
            1331,
            1332
          ]
        },
        {
          "teal": 1376,
          "source": "contracts/TokenDrop.algo.ts:363",
          "pc": [
            1333
          ]
        },
        {
          "teal": 1377,
          "source": "contracts/TokenDrop.algo.ts:363",
          "pc": [
            1334
          ]
        },
        {
          "teal": 1381,
          "source": "contracts/TokenDrop.algo.ts:363",
          "pc": [
            1335,
            1336,
            1337
          ]
        },
        {
          "teal": 1384,
          "source": "contracts/TokenDrop.algo.ts:363",
          "pc": [
            1338
          ]
        },
        {
          "teal": 1385,
          "source": "contracts/TokenDrop.algo.ts:363",
          "pc": [
            1339,
            1340
          ]
        },
        {
          "teal": 1389,
          "source": "contracts/TokenDrop.algo.ts:364",
          "pc": [
            1341
          ]
        },
        {
          "teal": 1390,
          "source": "contracts/TokenDrop.algo.ts:364",
          "pc": [
            1342,
            1343
          ]
        },
        {
          "teal": 1391,
          "source": "contracts/TokenDrop.algo.ts:364",
          "pc": [
            1344
          ]
        },
        {
          "teal": 1392,
          "source": "contracts/TokenDrop.algo.ts:364",
          "pc": [
            1345
          ]
        },
        {
          "teal": 1393,
          "source": "contracts/TokenDrop.algo.ts:364",
          "pc": [
            1346,
            1347
          ]
        },
        {
          "teal": 1397,
          "source": "contracts/TokenDrop.algo.ts:364",
          "pc": [
            1348,
            1349
          ]
        },
        {
          "teal": 1398,
          "source": "contracts/TokenDrop.algo.ts:364",
          "pc": [
            1350
          ]
        },
        {
          "teal": 1401,
          "source": "contracts/TokenDrop.algo.ts:364",
          "errorMessage": "box value does not exist: this.allDrops(tokenDropId).value",
          "pc": [
            1351
          ]
        },
        {
          "teal": 1402,
          "source": "contracts/TokenDrop.algo.ts:365",
          "pc": [
            1352,
            1353,
            1354
          ]
        },
        {
          "teal": 1405,
          "source": "contracts/TokenDrop.algo.ts:365",
          "errorMessage": "drop MUST be expired or empty!",
          "pc": [
            1355
          ]
        },
        {
          "teal": 1409,
          "source": "contracts/TokenDrop.algo.ts:367",
          "pc": [
            1356,
            1357
          ]
        },
        {
          "teal": 1410,
          "source": "contracts/TokenDrop.algo.ts:367",
          "pc": [
            1358,
            1359
          ]
        },
        {
          "teal": 1411,
          "source": "contracts/TokenDrop.algo.ts:367",
          "pc": [
            1360
          ]
        },
        {
          "teal": 1412,
          "source": "contracts/TokenDrop.algo.ts:367",
          "pc": [
            1361,
            1362
          ]
        },
        {
          "teal": 1416,
          "source": "contracts/TokenDrop.algo.ts:368",
          "pc": [
            1363,
            1364
          ]
        },
        {
          "teal": 1417,
          "source": "contracts/TokenDrop.algo.ts:368",
          "pc": [
            1365
          ]
        },
        {
          "teal": 1418,
          "source": "contracts/TokenDrop.algo.ts:368",
          "pc": [
            1366,
            1367
          ]
        },
        {
          "teal": 1419,
          "source": "contracts/TokenDrop.algo.ts:368",
          "pc": [
            1368
          ]
        },
        {
          "teal": 1420,
          "source": "contracts/TokenDrop.algo.ts:368",
          "pc": [
            1369,
            1370
          ]
        },
        {
          "teal": 1424,
          "source": "contracts/TokenDrop.algo.ts:369",
          "pc": [
            1371,
            1372
          ]
        },
        {
          "teal": 1425,
          "source": "contracts/TokenDrop.algo.ts:369",
          "pc": [
            1373,
            1374
          ]
        },
        {
          "teal": 1426,
          "source": "contracts/TokenDrop.algo.ts:369",
          "pc": [
            1375
          ]
        },
        {
          "teal": 1427,
          "source": "contracts/TokenDrop.algo.ts:369",
          "pc": [
            1376
          ]
        },
        {
          "teal": 1431,
          "source": "contracts/TokenDrop.algo.ts:370",
          "pc": [
            1377,
            1378
          ]
        },
        {
          "teal": 1432,
          "source": "contracts/TokenDrop.algo.ts:370",
          "pc": [
            1379,
            1380
          ]
        },
        {
          "teal": 1433,
          "source": "contracts/TokenDrop.algo.ts:370",
          "pc": [
            1381,
            1382
          ]
        },
        {
          "teal": 1434,
          "source": "contracts/TokenDrop.algo.ts:370",
          "pc": [
            1383
          ]
        },
        {
          "teal": 1435,
          "source": "contracts/TokenDrop.algo.ts:370",
          "pc": [
            1384
          ]
        },
        {
          "teal": 1436,
          "source": "contracts/TokenDrop.algo.ts:370",
          "pc": [
            1385,
            1386
          ]
        },
        {
          "teal": 1440,
          "source": "contracts/TokenDrop.algo.ts:371",
          "pc": [
            1387
          ]
        },
        {
          "teal": 1441,
          "source": "contracts/TokenDrop.algo.ts:371",
          "pc": [
            1388
          ]
        },
        {
          "teal": 1442,
          "source": "contracts/TokenDrop.algo.ts:371",
          "pc": [
            1389,
            1390
          ]
        },
        {
          "teal": 1446,
          "source": "contracts/TokenDrop.algo.ts:371",
          "pc": [
            1391,
            1392
          ]
        },
        {
          "teal": 1447,
          "source": "contracts/TokenDrop.algo.ts:371",
          "pc": [
            1393,
            1394
          ]
        },
        {
          "teal": 1451,
          "source": "contracts/TokenDrop.algo.ts:371",
          "pc": [
            1395,
            1396
          ]
        },
        {
          "teal": 1452,
          "source": "contracts/TokenDrop.algo.ts:371",
          "pc": [
            1397,
            1398
          ]
        },
        {
          "teal": 1455,
          "source": "contracts/TokenDrop.algo.ts:371",
          "pc": [
            1399
          ]
        },
        {
          "teal": 1456,
          "source": "contracts/TokenDrop.algo.ts:371",
          "pc": [
            1400,
            1401
          ]
        },
        {
          "teal": 1459,
          "source": "contracts/TokenDrop.algo.ts:371",
          "pc": [
            1402
          ]
        },
        {
          "teal": 1460,
          "source": "contracts/TokenDrop.algo.ts:363",
          "pc": [
            1403
          ]
        },
        {
          "teal": 1465,
          "source": "contracts/TokenDrop.algo.ts:383",
          "pc": [
            1404,
            1405,
            1406
          ]
        },
        {
          "teal": 1466,
          "source": "contracts/TokenDrop.algo.ts:383",
          "pc": [
            1407
          ]
        },
        {
          "teal": 1469,
          "source": "contracts/TokenDrop.algo.ts:383",
          "pc": [
            1408,
            1409,
            1410
          ]
        },
        {
          "teal": 1470,
          "source": "contracts/TokenDrop.algo.ts:383",
          "pc": [
            1411
          ]
        },
        {
          "teal": 1471,
          "source": "contracts/TokenDrop.algo.ts:383",
          "pc": [
            1412
          ]
        },
        {
          "teal": 1483,
          "source": "contracts/TokenDrop.algo.ts:383",
          "pc": [
            1413,
            1414,
            1415
          ]
        },
        {
          "teal": 1486,
          "source": "contracts/TokenDrop.algo.ts:383",
          "pc": [
            1416
          ]
        },
        {
          "teal": 1487,
          "source": "contracts/TokenDrop.algo.ts:383",
          "pc": [
            1417,
            1418
          ]
        },
        {
          "teal": 1491,
          "source": "contracts/TokenDrop.algo.ts:385",
          "pc": [
            1419
          ]
        },
        {
          "teal": 1492,
          "source": "contracts/TokenDrop.algo.ts:385",
          "pc": [
            1420,
            1421
          ]
        },
        {
          "teal": 1493,
          "source": "contracts/TokenDrop.algo.ts:385",
          "pc": [
            1422
          ]
        },
        {
          "teal": 1494,
          "source": "contracts/TokenDrop.algo.ts:385",
          "pc": [
            1423
          ]
        },
        {
          "teal": 1495,
          "source": "contracts/TokenDrop.algo.ts:385",
          "pc": [
            1424
          ]
        },
        {
          "teal": 1498,
          "source": "contracts/TokenDrop.algo.ts:385",
          "errorMessage": "box value does not exist: this.allDrops(tokenDropId).value",
          "pc": [
            1425
          ]
        },
        {
          "teal": 1499,
          "source": "contracts/TokenDrop.algo.ts:385",
          "pc": [
            1426,
            1427
          ]
        },
        {
          "teal": 1504,
          "source": "contracts/TokenDrop.algo.ts:386",
          "pc": [
            1428,
            1429
          ]
        },
        {
          "teal": 1505,
          "source": "contracts/TokenDrop.algo.ts:386",
          "pc": [
            1430,
            1431
          ]
        },
        {
          "teal": 1506,
          "source": "contracts/TokenDrop.algo.ts:386",
          "pc": [
            1432,
            1433,
            1434
          ]
        },
        {
          "teal": 1507,
          "source": "contracts/TokenDrop.algo.ts:386",
          "pc": [
            1435
          ]
        },
        {
          "teal": 1508,
          "source": "contracts/TokenDrop.algo.ts:386",
          "pc": [
            1436,
            1437,
            1438
          ]
        },
        {
          "teal": 1513,
          "source": "contracts/TokenDrop.algo.ts:389",
          "pc": [
            1439,
            1440
          ]
        },
        {
          "teal": 1514,
          "source": "contracts/TokenDrop.algo.ts:389",
          "pc": [
            1441,
            1442,
            1443
          ]
        },
        {
          "teal": 1517,
          "source": "contracts/TokenDrop.algo.ts:389",
          "errorMessage": "drop MUST be expired or empty",
          "pc": [
            1444
          ]
        },
        {
          "teal": 1522,
          "source": "contracts/TokenDrop.algo.ts:392",
          "pc": [
            1445,
            1446
          ]
        },
        {
          "teal": 1523,
          "source": "contracts/TokenDrop.algo.ts:392",
          "pc": [
            1447,
            1448
          ]
        },
        {
          "teal": 1524,
          "source": "contracts/TokenDrop.algo.ts:392",
          "pc": [
            1449
          ]
        },
        {
          "teal": 1525,
          "source": "contracts/TokenDrop.algo.ts:392",
          "pc": [
            1450,
            1451
          ]
        },
        {
          "teal": 1529,
          "source": "contracts/TokenDrop.algo.ts:393",
          "pc": [
            1452,
            1453
          ]
        },
        {
          "teal": 1530,
          "source": "contracts/TokenDrop.algo.ts:393",
          "pc": [
            1454,
            1455,
            1456
          ]
        },
        {
          "teal": 1534,
          "source": "contracts/TokenDrop.algo.ts:394",
          "pc": [
            1457,
            1458
          ]
        },
        {
          "teal": 1535,
          "source": "contracts/TokenDrop.algo.ts:394",
          "pc": [
            1459,
            1460,
            1461
          ]
        },
        {
          "teal": 1539,
          "source": "contracts/TokenDrop.algo.ts:396",
          "pc": [
            1462,
            1463
          ]
        },
        {
          "teal": 1540,
          "source": "contracts/TokenDrop.algo.ts:396",
          "pc": [
            1464,
            1465
          ]
        },
        {
          "teal": 1541,
          "source": "contracts/TokenDrop.algo.ts:396",
          "pc": [
            1466,
            1467
          ]
        },
        {
          "teal": 1542,
          "source": "contracts/TokenDrop.algo.ts:396",
          "pc": [
            1468
          ]
        },
        {
          "teal": 1543,
          "source": "contracts/TokenDrop.algo.ts:396",
          "pc": [
            1469
          ]
        },
        {
          "teal": 1544,
          "source": "contracts/TokenDrop.algo.ts:396",
          "pc": [
            1470,
            1471
          ]
        },
        {
          "teal": 1548,
          "source": "contracts/TokenDrop.algo.ts:397",
          "pc": [
            1472
          ]
        },
        {
          "teal": 1549,
          "source": "contracts/TokenDrop.algo.ts:397",
          "pc": [
            1473
          ]
        },
        {
          "teal": 1550,
          "source": "contracts/TokenDrop.algo.ts:397",
          "pc": [
            1474,
            1475
          ]
        },
        {
          "teal": 1554,
          "source": "contracts/TokenDrop.algo.ts:397",
          "pc": [
            1476,
            1477
          ]
        },
        {
          "teal": 1555,
          "source": "contracts/TokenDrop.algo.ts:397",
          "pc": [
            1478,
            1479,
            1480
          ]
        },
        {
          "teal": 1556,
          "source": "contracts/TokenDrop.algo.ts:397",
          "pc": [
            1481,
            1482
          ]
        },
        {
          "teal": 1560,
          "source": "contracts/TokenDrop.algo.ts:397",
          "pc": [
            1483,
            1484
          ]
        },
        {
          "teal": 1561,
          "source": "contracts/TokenDrop.algo.ts:397",
          "pc": [
            1485,
            1486
          ]
        },
        {
          "teal": 1565,
          "source": "contracts/TokenDrop.algo.ts:397",
          "pc": [
            1487,
            1488,
            1489,
            1490,
            1491,
            1492,
            1493,
            1494,
            1495,
            1496,
            1497,
            1498,
            1499,
            1500,
            1501,
            1502,
            1503,
            1504,
            1505,
            1506,
            1507,
            1508,
            1509,
            1510,
            1511,
            1512,
            1513,
            1514,
            1515,
            1516,
            1517,
            1518,
            1519
          ]
        },
        {
          "teal": 1566,
          "source": "contracts/TokenDrop.algo.ts:397",
          "pc": [
            1520,
            1521
          ]
        },
        {
          "teal": 1569,
          "source": "contracts/TokenDrop.algo.ts:397",
          "pc": [
            1522
          ]
        },
        {
          "teal": 1570,
          "source": "contracts/TokenDrop.algo.ts:397",
          "pc": [
            1523,
            1524
          ]
        },
        {
          "teal": 1573,
          "source": "contracts/TokenDrop.algo.ts:397",
          "pc": [
            1525
          ]
        },
        {
          "teal": 1574,
          "source": "contracts/TokenDrop.algo.ts:383",
          "pc": [
            1526
          ]
        },
        {
          "teal": 1584,
          "source": "contracts/TokenDrop.algo.ts:407",
          "pc": [
            1527,
            1528,
            1529
          ]
        },
        {
          "teal": 1588,
          "source": "contracts/TokenDrop.algo.ts:408",
          "pc": [
            1530
          ]
        },
        {
          "teal": 1589,
          "source": "contracts/TokenDrop.algo.ts:408",
          "pc": [
            1531,
            1532
          ]
        },
        {
          "teal": 1590,
          "source": "contracts/TokenDrop.algo.ts:408",
          "pc": [
            1533
          ]
        },
        {
          "teal": 1591,
          "source": "contracts/TokenDrop.algo.ts:408",
          "pc": [
            1534
          ]
        },
        {
          "teal": 1592,
          "source": "contracts/TokenDrop.algo.ts:408",
          "pc": [
            1535,
            1536
          ]
        },
        {
          "teal": 1593,
          "source": "contracts/TokenDrop.algo.ts:408",
          "pc": [
            1537
          ]
        },
        {
          "teal": 1597,
          "source": "contracts/TokenDrop.algo.ts:409",
          "pc": [
            1538,
            1539
          ]
        },
        {
          "teal": 1598,
          "source": "contracts/TokenDrop.algo.ts:409",
          "pc": [
            1540,
            1541
          ]
        },
        {
          "teal": 1599,
          "source": "contracts/TokenDrop.algo.ts:409",
          "pc": [
            1542,
            1543,
            1544
          ]
        },
        {
          "teal": 1600,
          "source": "contracts/TokenDrop.algo.ts:409",
          "pc": [
            1545
          ]
        },
        {
          "teal": 1601,
          "source": "contracts/TokenDrop.algo.ts:409",
          "pc": [
            1546
          ]
        },
        {
          "teal": 1602,
          "source": "contracts/TokenDrop.algo.ts:409",
          "pc": [
            1547
          ]
        },
        {
          "teal": 1603,
          "source": "contracts/TokenDrop.algo.ts:409",
          "pc": [
            1548,
            1549
          ]
        },
        {
          "teal": 1604,
          "source": "contracts/TokenDrop.algo.ts:409",
          "pc": [
            1550
          ]
        },
        {
          "teal": 1605,
          "source": "contracts/TokenDrop.algo.ts:409",
          "pc": [
            1551
          ]
        },
        {
          "teal": 1606,
          "source": "contracts/TokenDrop.algo.ts:407",
          "pc": [
            1552
          ]
        },
        {
          "teal": 1610,
          "source": "contracts/TokenDrop.algo.ts:412",
          "pc": [
            1553,
            1554,
            1555
          ]
        },
        {
          "teal": 1613,
          "source": "contracts/TokenDrop.algo.ts:412",
          "pc": [
            1556
          ]
        },
        {
          "teal": 1617,
          "source": "contracts/TokenDrop.algo.ts:413",
          "pc": [
            1557
          ]
        },
        {
          "teal": 1618,
          "source": "contracts/TokenDrop.algo.ts:413",
          "pc": [
            1558,
            1559
          ]
        },
        {
          "teal": 1619,
          "source": "contracts/TokenDrop.algo.ts:413",
          "pc": [
            1560
          ]
        },
        {
          "teal": 1620,
          "source": "contracts/TokenDrop.algo.ts:413",
          "pc": [
            1561
          ]
        },
        {
          "teal": 1621,
          "source": "contracts/TokenDrop.algo.ts:413",
          "pc": [
            1562,
            1563
          ]
        },
        {
          "teal": 1625,
          "source": "contracts/TokenDrop.algo.ts:414",
          "pc": [
            1564,
            1565
          ]
        },
        {
          "teal": 1626,
          "source": "contracts/TokenDrop.algo.ts:414",
          "pc": [
            1566,
            1567
          ]
        },
        {
          "teal": 1627,
          "source": "contracts/TokenDrop.algo.ts:414",
          "pc": [
            1568
          ]
        },
        {
          "teal": 1628,
          "source": "contracts/TokenDrop.algo.ts:413",
          "pc": [
            1569
          ]
        },
        {
          "teal": 1629,
          "source": "contracts/TokenDrop.algo.ts:413",
          "pc": [
            1570,
            1571
          ]
        },
        {
          "teal": 1630,
          "source": "contracts/TokenDrop.algo.ts:413",
          "pc": [
            1572
          ]
        },
        {
          "teal": 1631,
          "source": "contracts/TokenDrop.algo.ts:413",
          "pc": [
            1573
          ]
        },
        {
          "teal": 1632,
          "source": "contracts/TokenDrop.algo.ts:413",
          "pc": [
            1574,
            1575
          ]
        },
        {
          "teal": 1633,
          "source": "contracts/TokenDrop.algo.ts:413",
          "pc": [
            1576
          ]
        },
        {
          "teal": 1634,
          "source": "contracts/TokenDrop.algo.ts:414",
          "pc": [
            1577
          ]
        },
        {
          "teal": 1635,
          "source": "contracts/TokenDrop.algo.ts:414",
          "pc": [
            1578
          ]
        },
        {
          "teal": 1636,
          "source": "contracts/TokenDrop.algo.ts:414",
          "pc": [
            1579
          ]
        },
        {
          "teal": 1637,
          "source": "contracts/TokenDrop.algo.ts:414",
          "pc": [
            1580
          ]
        },
        {
          "teal": 1641,
          "source": "contracts/TokenDrop.algo.ts:417",
          "pc": [
            1581
          ]
        },
        {
          "teal": 1642,
          "source": "contracts/TokenDrop.algo.ts:417",
          "pc": [
            1582,
            1583
          ]
        },
        {
          "teal": 1643,
          "source": "contracts/TokenDrop.algo.ts:417",
          "pc": [
            1584
          ]
        },
        {
          "teal": 1644,
          "source": "contracts/TokenDrop.algo.ts:417",
          "pc": [
            1585
          ]
        },
        {
          "teal": 1645,
          "source": "contracts/TokenDrop.algo.ts:417",
          "pc": [
            1586
          ]
        },
        {
          "teal": 1646,
          "source": "contracts/TokenDrop.algo.ts:412",
          "pc": [
            1587
          ]
        },
        {
          "teal": 1659,
          "source": "contracts/TokenDrop.algo.ts:430",
          "pc": [
            1588,
            1589,
            1590
          ]
        },
        {
          "teal": 1662,
          "source": "contracts/TokenDrop.algo.ts:430",
          "pc": [
            1591
          ]
        },
        {
          "teal": 1666,
          "source": "contracts/TokenDrop.algo.ts:431",
          "pc": [
            1592
          ]
        },
        {
          "teal": 1667,
          "source": "contracts/TokenDrop.algo.ts:431",
          "pc": [
            1593,
            1594
          ]
        },
        {
          "teal": 1668,
          "source": "contracts/TokenDrop.algo.ts:431",
          "pc": [
            1595
          ]
        },
        {
          "teal": 1669,
          "source": "contracts/TokenDrop.algo.ts:431",
          "pc": [
            1596
          ]
        },
        {
          "teal": 1670,
          "source": "contracts/TokenDrop.algo.ts:431",
          "pc": [
            1597,
            1598
          ]
        },
        {
          "teal": 1675,
          "source": "contracts/TokenDrop.algo.ts:432",
          "pc": [
            1599,
            1600
          ]
        },
        {
          "teal": 1676,
          "source": "contracts/TokenDrop.algo.ts:432",
          "pc": [
            1601
          ]
        },
        {
          "teal": 1677,
          "source": "contracts/TokenDrop.algo.ts:431",
          "pc": [
            1602
          ]
        },
        {
          "teal": 1678,
          "source": "contracts/TokenDrop.algo.ts:431",
          "pc": [
            1603,
            1604
          ]
        },
        {
          "teal": 1679,
          "source": "contracts/TokenDrop.algo.ts:431",
          "pc": [
            1605
          ]
        },
        {
          "teal": 1680,
          "source": "contracts/TokenDrop.algo.ts:431",
          "pc": [
            1606
          ]
        },
        {
          "teal": 1681,
          "source": "contracts/TokenDrop.algo.ts:431",
          "pc": [
            1607,
            1608
          ]
        },
        {
          "teal": 1682,
          "source": "contracts/TokenDrop.algo.ts:431",
          "pc": [
            1609
          ]
        },
        {
          "teal": 1683,
          "source": "contracts/TokenDrop.algo.ts:432",
          "pc": [
            1610
          ]
        },
        {
          "teal": 1684,
          "source": "contracts/TokenDrop.algo.ts:432",
          "pc": [
            1611
          ]
        },
        {
          "teal": 1685,
          "source": "contracts/TokenDrop.algo.ts:432",
          "pc": [
            1612
          ]
        },
        {
          "teal": 1686,
          "source": "contracts/TokenDrop.algo.ts:432",
          "pc": [
            1613,
            1614,
            1615
          ]
        },
        {
          "teal": 1691,
          "source": "contracts/TokenDrop.algo.ts:435",
          "pc": [
            1616,
            1617
          ]
        },
        {
          "teal": 1692,
          "source": "contracts/TokenDrop.algo.ts:435",
          "pc": [
            1618
          ]
        },
        {
          "teal": 1693,
          "source": "contracts/TokenDrop.algo.ts:431",
          "pc": [
            1619
          ]
        },
        {
          "teal": 1694,
          "source": "contracts/TokenDrop.algo.ts:431",
          "pc": [
            1620,
            1621
          ]
        },
        {
          "teal": 1695,
          "source": "contracts/TokenDrop.algo.ts:431",
          "pc": [
            1622
          ]
        },
        {
          "teal": 1696,
          "source": "contracts/TokenDrop.algo.ts:431",
          "pc": [
            1623
          ]
        },
        {
          "teal": 1697,
          "source": "contracts/TokenDrop.algo.ts:431",
          "pc": [
            1624,
            1625
          ]
        },
        {
          "teal": 1698,
          "source": "contracts/TokenDrop.algo.ts:431",
          "pc": [
            1626
          ]
        },
        {
          "teal": 1699,
          "source": "contracts/TokenDrop.algo.ts:435",
          "pc": [
            1627
          ]
        },
        {
          "teal": 1700,
          "source": "contracts/TokenDrop.algo.ts:435",
          "pc": [
            1628
          ]
        },
        {
          "teal": 1701,
          "source": "contracts/TokenDrop.algo.ts:435",
          "pc": [
            1629
          ]
        },
        {
          "teal": 1702,
          "source": "contracts/TokenDrop.algo.ts:431",
          "pc": [
            1630
          ]
        },
        {
          "teal": 1703,
          "source": "contracts/TokenDrop.algo.ts:431",
          "pc": [
            1631,
            1632
          ]
        },
        {
          "teal": 1704,
          "source": "contracts/TokenDrop.algo.ts:431",
          "pc": [
            1633
          ]
        },
        {
          "teal": 1705,
          "source": "contracts/TokenDrop.algo.ts:431",
          "pc": [
            1634
          ]
        },
        {
          "teal": 1706,
          "source": "contracts/TokenDrop.algo.ts:431",
          "pc": [
            1635,
            1636
          ]
        },
        {
          "teal": 1707,
          "source": "contracts/TokenDrop.algo.ts:431",
          "pc": [
            1637
          ]
        },
        {
          "teal": 1708,
          "source": "contracts/TokenDrop.algo.ts:431",
          "pc": [
            1638,
            1639
          ]
        },
        {
          "teal": 1709,
          "source": "contracts/TokenDrop.algo.ts:431",
          "pc": [
            1640
          ]
        },
        {
          "teal": 1712,
          "source": "contracts/TokenDrop.algo.ts:431",
          "errorMessage": "box value does not exist: this.allDrops(tokenDropId).value",
          "pc": [
            1641
          ]
        },
        {
          "teal": 1713,
          "source": "contracts/TokenDrop.algo.ts:435",
          "pc": [
            1642,
            1643,
            1644
          ]
        },
        {
          "teal": 1719,
          "source": "contracts/TokenDrop.algo.ts:437",
          "pc": [
            1645,
            1646
          ]
        },
        {
          "teal": 1720,
          "source": "contracts/TokenDrop.algo.ts:437",
          "pc": [
            1647,
            1648
          ]
        },
        {
          "teal": 1721,
          "source": "contracts/TokenDrop.algo.ts:437",
          "pc": [
            1649
          ]
        },
        {
          "teal": 1722,
          "source": "contracts/TokenDrop.algo.ts:431",
          "pc": [
            1650
          ]
        },
        {
          "teal": 1723,
          "source": "contracts/TokenDrop.algo.ts:431",
          "pc": [
            1651,
            1652
          ]
        },
        {
          "teal": 1724,
          "source": "contracts/TokenDrop.algo.ts:431",
          "pc": [
            1653
          ]
        },
        {
          "teal": 1725,
          "source": "contracts/TokenDrop.algo.ts:431",
          "pc": [
            1654
          ]
        },
        {
          "teal": 1726,
          "source": "contracts/TokenDrop.algo.ts:431",
          "pc": [
            1655,
            1656
          ]
        },
        {
          "teal": 1727,
          "source": "contracts/TokenDrop.algo.ts:431",
          "pc": [
            1657
          ]
        },
        {
          "teal": 1728,
          "source": "contracts/TokenDrop.algo.ts:437",
          "pc": [
            1658
          ]
        },
        {
          "teal": 1729,
          "source": "contracts/TokenDrop.algo.ts:437",
          "pc": [
            1659,
            1660
          ]
        },
        {
          "teal": 1730,
          "source": "contracts/TokenDrop.algo.ts:437",
          "pc": [
            1661
          ]
        },
        {
          "teal": 1731,
          "source": "contracts/TokenDrop.algo.ts:437",
          "pc": [
            1662
          ]
        },
        {
          "teal": 1732,
          "source": "contracts/TokenDrop.algo.ts:437",
          "pc": [
            1663
          ]
        },
        {
          "teal": 1733,
          "source": "contracts/TokenDrop.algo.ts:437",
          "pc": [
            1664,
            1665,
            1666
          ]
        },
        {
          "teal": 1744,
          "source": "contracts/TokenDrop.algo.ts:439",
          "pc": [
            1667
          ]
        },
        {
          "teal": 1745,
          "source": "contracts/TokenDrop.algo.ts:439",
          "pc": [
            1668,
            1669
          ]
        },
        {
          "teal": 1746,
          "source": "contracts/TokenDrop.algo.ts:439",
          "pc": [
            1670,
            1671
          ]
        },
        {
          "teal": 1750,
          "source": "contracts/TokenDrop.algo.ts:440",
          "pc": [
            1672,
            1673
          ]
        },
        {
          "teal": 1751,
          "source": "contracts/TokenDrop.algo.ts:440",
          "pc": [
            1674
          ]
        },
        {
          "teal": 1752,
          "source": "contracts/TokenDrop.algo.ts:431",
          "pc": [
            1675
          ]
        },
        {
          "teal": 1753,
          "source": "contracts/TokenDrop.algo.ts:431",
          "pc": [
            1676,
            1677
          ]
        },
        {
          "teal": 1754,
          "source": "contracts/TokenDrop.algo.ts:431",
          "pc": [
            1678
          ]
        },
        {
          "teal": 1755,
          "source": "contracts/TokenDrop.algo.ts:431",
          "pc": [
            1679
          ]
        },
        {
          "teal": 1756,
          "source": "contracts/TokenDrop.algo.ts:431",
          "pc": [
            1680,
            1681
          ]
        },
        {
          "teal": 1757,
          "source": "contracts/TokenDrop.algo.ts:431",
          "pc": [
            1682
          ]
        },
        {
          "teal": 1758,
          "source": "contracts/TokenDrop.algo.ts:440",
          "pc": [
            1683
          ]
        },
        {
          "teal": 1759,
          "source": "contracts/TokenDrop.algo.ts:440",
          "pc": [
            1684,
            1685
          ]
        },
        {
          "teal": 1763,
          "source": "contracts/TokenDrop.algo.ts:441",
          "pc": [
            1686,
            1687
          ]
        },
        {
          "teal": 1764,
          "source": "contracts/TokenDrop.algo.ts:441",
          "pc": [
            1688,
            1689
          ]
        },
        {
          "teal": 1768,
          "source": "contracts/TokenDrop.algo.ts:442",
          "pc": [
            1690,
            1691
          ]
        },
        {
          "teal": 1769,
          "source": "contracts/TokenDrop.algo.ts:442",
          "pc": [
            1692,
            1693
          ]
        },
        {
          "teal": 1773,
          "source": "contracts/TokenDrop.algo.ts:443",
          "pc": [
            1694
          ]
        },
        {
          "teal": 1774,
          "source": "contracts/TokenDrop.algo.ts:443",
          "pc": [
            1695,
            1696
          ]
        },
        {
          "teal": 1778,
          "source": "contracts/TokenDrop.algo.ts:444",
          "pc": [
            1697,
            1698,
            1699,
            1700,
            1701,
            1702,
            1703,
            1704,
            1705,
            1706,
            1707,
            1708,
            1709,
            1710,
            1711,
            1712,
            1713,
            1714
          ]
        },
        {
          "teal": 1779,
          "source": "contracts/TokenDrop.algo.ts:444",
          "pc": [
            1715,
            1716
          ]
        },
        {
          "teal": 1782,
          "source": "contracts/TokenDrop.algo.ts:439",
          "pc": [
            1717
          ]
        },
        {
          "teal": 1783,
          "source": "contracts/TokenDrop.algo.ts:439",
          "pc": [
            1718,
            1719
          ]
        },
        {
          "teal": 1786,
          "source": "contracts/TokenDrop.algo.ts:439",
          "pc": [
            1720
          ]
        },
        {
          "teal": 1789,
          "source": "contracts/TokenDrop.algo.ts:430",
          "pc": [
            1721
          ]
        },
        {
          "teal": 1802,
          "source": "contracts/TokenDrop.algo.ts:459",
          "pc": [
            1722,
            1723,
            1724
          ]
        },
        {
          "teal": 1805,
          "source": "contracts/TokenDrop.algo.ts:459",
          "pc": [
            1725
          ]
        },
        {
          "teal": 1813,
          "source": "contracts/TokenDrop.algo.ts:460",
          "pc": [
            1726
          ]
        },
        {
          "teal": 1814,
          "source": "contracts/TokenDrop.algo.ts:460",
          "pc": [
            1727,
            1728
          ]
        },
        {
          "teal": 1815,
          "source": "contracts/TokenDrop.algo.ts:460",
          "pc": [
            1729,
            1730
          ]
        },
        {
          "teal": 1819,
          "source": "contracts/TokenDrop.algo.ts:461",
          "pc": [
            1731,
            1732
          ]
        },
        {
          "teal": 1820,
          "source": "contracts/TokenDrop.algo.ts:461",
          "pc": [
            1733,
            1734,
            1735
          ]
        },
        {
          "teal": 1821,
          "source": "contracts/TokenDrop.algo.ts:461",
          "pc": [
            1736
          ]
        },
        {
          "teal": 1822,
          "source": "contracts/TokenDrop.algo.ts:461",
          "pc": [
            1737,
            1738
          ]
        },
        {
          "teal": 1826,
          "source": "contracts/TokenDrop.algo.ts:462",
          "pc": [
            1739,
            1740
          ]
        },
        {
          "teal": 1827,
          "source": "contracts/TokenDrop.algo.ts:462",
          "pc": [
            1741,
            1742
          ]
        },
        {
          "teal": 1831,
          "source": "contracts/TokenDrop.algo.ts:463",
          "pc": [
            1743,
            1744
          ]
        },
        {
          "teal": 1832,
          "source": "contracts/TokenDrop.algo.ts:463",
          "pc": [
            1745,
            1746
          ]
        },
        {
          "teal": 1835,
          "source": "contracts/TokenDrop.algo.ts:460",
          "pc": [
            1747
          ]
        },
        {
          "teal": 1836,
          "source": "contracts/TokenDrop.algo.ts:460",
          "pc": [
            1748,
            1749
          ]
        },
        {
          "teal": 1839,
          "source": "contracts/TokenDrop.algo.ts:460",
          "pc": [
            1750
          ]
        },
        {
          "teal": 1843,
          "source": "contracts/TokenDrop.algo.ts:467",
          "pc": [
            1751,
            1752
          ]
        },
        {
          "teal": 1844,
          "source": "contracts/TokenDrop.algo.ts:467",
          "pc": [
            1753,
            1754,
            1755
          ]
        },
        {
          "teal": 1845,
          "source": "contracts/TokenDrop.algo.ts:467",
          "pc": [
            1756
          ]
        },
        {
          "teal": 1846,
          "source": "contracts/TokenDrop.algo.ts:467",
          "pc": [
            1757,
            1758
          ]
        },
        {
          "teal": 1847,
          "source": "contracts/TokenDrop.algo.ts:467",
          "pc": [
            1759
          ]
        },
        {
          "teal": 1848,
          "source": "contracts/TokenDrop.algo.ts:467",
          "pc": [
            1760,
            1761
          ]
        },
        {
          "teal": 1852,
          "source": "contracts/TokenDrop.algo.ts:468",
          "pc": [
            1762,
            1763
          ]
        },
        {
          "teal": 1853,
          "source": "contracts/TokenDrop.algo.ts:468",
          "pc": [
            1764,
            1765
          ]
        },
        {
          "teal": 1854,
          "source": "contracts/TokenDrop.algo.ts:468",
          "pc": [
            1766
          ]
        },
        {
          "teal": 1855,
          "source": "contracts/TokenDrop.algo.ts:468",
          "pc": [
            1767
          ]
        },
        {
          "teal": 1856,
          "source": "contracts/TokenDrop.algo.ts:468",
          "pc": [
            1768,
            1769
          ]
        },
        {
          "teal": 1857,
          "source": "contracts/TokenDrop.algo.ts:468",
          "pc": [
            1770,
            1771,
            1772
          ]
        },
        {
          "teal": 1858,
          "source": "contracts/TokenDrop.algo.ts:468",
          "pc": [
            1773
          ]
        },
        {
          "teal": 1859,
          "source": "contracts/TokenDrop.algo.ts:468",
          "pc": [
            1774
          ]
        },
        {
          "teal": 1860,
          "source": "contracts/TokenDrop.algo.ts:468",
          "pc": [
            1775
          ]
        },
        {
          "teal": 1861,
          "source": "contracts/TokenDrop.algo.ts:468",
          "pc": [
            1776,
            1777
          ]
        },
        {
          "teal": 1862,
          "source": "contracts/TokenDrop.algo.ts:468",
          "pc": [
            1778
          ]
        },
        {
          "teal": 1866,
          "source": "contracts/TokenDrop.algo.ts:469",
          "pc": [
            1779,
            1780
          ]
        },
        {
          "teal": 1867,
          "source": "contracts/TokenDrop.algo.ts:469",
          "pc": [
            1781
          ]
        },
        {
          "teal": 1868,
          "source": "contracts/TokenDrop.algo.ts:469",
          "pc": [
            1782
          ]
        },
        {
          "teal": 1869,
          "source": "contracts/TokenDrop.algo.ts:469",
          "pc": [
            1783
          ]
        },
        {
          "teal": 1870,
          "source": "contracts/TokenDrop.algo.ts:469",
          "pc": [
            1784,
            1785
          ]
        },
        {
          "teal": 1871,
          "source": "contracts/TokenDrop.algo.ts:469",
          "pc": [
            1786,
            1787,
            1788
          ]
        },
        {
          "teal": 1872,
          "source": "contracts/TokenDrop.algo.ts:469",
          "pc": [
            1789
          ]
        },
        {
          "teal": 1873,
          "source": "contracts/TokenDrop.algo.ts:469",
          "pc": [
            1790
          ]
        },
        {
          "teal": 1874,
          "source": "contracts/TokenDrop.algo.ts:469",
          "pc": [
            1791
          ]
        },
        {
          "teal": 1875,
          "source": "contracts/TokenDrop.algo.ts:469",
          "pc": [
            1792,
            1793
          ]
        },
        {
          "teal": 1876,
          "source": "contracts/TokenDrop.algo.ts:469",
          "pc": [
            1794
          ]
        },
        {
          "teal": 1877,
          "source": "contracts/TokenDrop.algo.ts:469",
          "pc": [
            1795
          ]
        },
        {
          "teal": 1878,
          "source": "contracts/TokenDrop.algo.ts:469",
          "pc": [
            1796
          ]
        },
        {
          "teal": 1879,
          "source": "contracts/TokenDrop.algo.ts:469",
          "pc": [
            1797
          ]
        },
        {
          "teal": 1880,
          "source": "contracts/TokenDrop.algo.ts:469",
          "pc": [
            1798
          ]
        },
        {
          "teal": 1881,
          "source": "contracts/TokenDrop.algo.ts:469",
          "pc": [
            1799
          ]
        },
        {
          "teal": 1882,
          "source": "contracts/TokenDrop.algo.ts:469",
          "pc": [
            1800,
            1801
          ]
        },
        {
          "teal": 1883,
          "source": "contracts/TokenDrop.algo.ts:469",
          "pc": [
            1802,
            1803,
            1804
          ]
        },
        {
          "teal": 1884,
          "source": "contracts/TokenDrop.algo.ts:469",
          "pc": [
            1805
          ]
        },
        {
          "teal": 1885,
          "source": "contracts/TokenDrop.algo.ts:469",
          "pc": [
            1806
          ]
        },
        {
          "teal": 1886,
          "source": "contracts/TokenDrop.algo.ts:469",
          "pc": [
            1807
          ]
        },
        {
          "teal": 1887,
          "source": "contracts/TokenDrop.algo.ts:469",
          "pc": [
            1808,
            1809
          ]
        },
        {
          "teal": 1888,
          "source": "contracts/TokenDrop.algo.ts:469",
          "pc": [
            1810
          ]
        },
        {
          "teal": 1892,
          "source": "contracts/TokenDrop.algo.ts:471",
          "pc": [
            1811,
            1812
          ]
        },
        {
          "teal": 1895,
          "source": "contracts/TokenDrop.algo.ts:459",
          "pc": [
            1813,
            1814
          ]
        },
        {
          "teal": 1896,
          "source": "contracts/TokenDrop.algo.ts:459",
          "pc": [
            1815
          ]
        },
        {
          "teal": 1905,
          "source": "contracts/TokenDrop.algo.ts:480",
          "pc": [
            1816,
            1817,
            1818
          ]
        },
        {
          "teal": 1909,
          "source": "contracts/TokenDrop.algo.ts:481",
          "pc": [
            1819,
            1820
          ]
        },
        {
          "teal": 1910,
          "source": "contracts/TokenDrop.algo.ts:481",
          "pc": [
            1821,
            1822,
            1823
          ]
        },
        {
          "teal": 1911,
          "source": "contracts/TokenDrop.algo.ts:481",
          "pc": [
            1824
          ]
        },
        {
          "teal": 1912,
          "source": "contracts/TokenDrop.algo.ts:481",
          "pc": [
            1825
          ]
        },
        {
          "teal": 1913,
          "source": "contracts/TokenDrop.algo.ts:481",
          "pc": [
            1826
          ]
        },
        {
          "teal": 1914,
          "source": "contracts/TokenDrop.algo.ts:481",
          "pc": [
            1827
          ]
        },
        {
          "teal": 1915,
          "source": "contracts/TokenDrop.algo.ts:481",
          "pc": [
            1828,
            1829,
            1830
          ]
        },
        {
          "teal": 1916,
          "source": "contracts/TokenDrop.algo.ts:481",
          "pc": [
            1831,
            1832
          ]
        },
        {
          "teal": 1917,
          "source": "contracts/TokenDrop.algo.ts:481",
          "pc": [
            1833,
            1834
          ]
        },
        {
          "teal": 1918,
          "source": "contracts/TokenDrop.algo.ts:481",
          "pc": [
            1835,
            1836,
            1837
          ]
        },
        {
          "teal": 1919,
          "source": "contracts/TokenDrop.algo.ts:481",
          "pc": [
            1838
          ]
        },
        {
          "teal": 1920,
          "source": "contracts/TokenDrop.algo.ts:481",
          "pc": [
            1839
          ]
        },
        {
          "teal": 1921,
          "source": "contracts/TokenDrop.algo.ts:481",
          "pc": [
            1840
          ]
        },
        {
          "teal": 1924,
          "source": "contracts/TokenDrop.algo.ts:480",
          "pc": [
            1841
          ]
        },
        {
          "teal": 1934,
          "source": "contracts/TokenDrop.algo.ts:491",
          "pc": [
            1842,
            1843,
            1844
          ]
        },
        {
          "teal": 1937,
          "source": "contracts/TokenDrop.algo.ts:491",
          "pc": [
            1845
          ]
        },
        {
          "teal": 1938,
          "source": "contracts/TokenDrop.algo.ts:491",
          "pc": [
            1846,
            1847
          ]
        },
        {
          "teal": 1942,
          "source": "contracts/TokenDrop.algo.ts:492",
          "pc": [
            1848,
            1849
          ]
        },
        {
          "teal": 1943,
          "source": "contracts/TokenDrop.algo.ts:492",
          "pc": [
            1850
          ]
        },
        {
          "teal": 1944,
          "source": "contracts/TokenDrop.algo.ts:492",
          "pc": [
            1851
          ]
        },
        {
          "teal": 1945,
          "source": "contracts/TokenDrop.algo.ts:492",
          "pc": [
            1852,
            1853
          ]
        },
        {
          "teal": 1946,
          "source": "contracts/TokenDrop.algo.ts:492",
          "pc": [
            1854
          ]
        },
        {
          "teal": 1947,
          "source": "contracts/TokenDrop.algo.ts:492",
          "pc": [
            1855
          ]
        },
        {
          "teal": 1948,
          "source": "contracts/TokenDrop.algo.ts:492",
          "pc": [
            1856,
            1857
          ]
        },
        {
          "teal": 1949,
          "source": "contracts/TokenDrop.algo.ts:492",
          "pc": [
            1858
          ]
        },
        {
          "teal": 1950,
          "source": "contracts/TokenDrop.algo.ts:492",
          "pc": [
            1859
          ]
        },
        {
          "teal": 1951,
          "source": "contracts/TokenDrop.algo.ts:492",
          "pc": [
            1860,
            1861
          ]
        },
        {
          "teal": 1956,
          "source": "contracts/TokenDrop.algo.ts:493",
          "pc": [
            1862,
            1863
          ]
        },
        {
          "teal": 1957,
          "source": "contracts/TokenDrop.algo.ts:493",
          "pc": [
            1864
          ]
        },
        {
          "teal": 1958,
          "source": "contracts/TokenDrop.algo.ts:493",
          "pc": [
            1865
          ]
        },
        {
          "teal": 1959,
          "source": "contracts/TokenDrop.algo.ts:493",
          "pc": [
            1866,
            1867,
            1868
          ]
        },
        {
          "teal": 1964,
          "source": "contracts/TokenDrop.algo.ts:494",
          "pc": [
            1869
          ]
        },
        {
          "teal": 1969,
          "source": "contracts/TokenDrop.algo.ts:496",
          "pc": [
            1870,
            1871
          ]
        },
        {
          "teal": 1970,
          "source": "contracts/TokenDrop.algo.ts:496",
          "pc": [
            1872,
            1873
          ]
        },
        {
          "teal": 1974,
          "source": "contracts/TokenDrop.algo.ts:497",
          "pc": [
            1874
          ]
        },
        {
          "teal": 1975,
          "source": "contracts/TokenDrop.algo.ts:497",
          "pc": [
            1875,
            1876
          ]
        },
        {
          "teal": 1976,
          "source": "contracts/TokenDrop.algo.ts:497",
          "pc": [
            1877
          ]
        },
        {
          "teal": 1977,
          "source": "contracts/TokenDrop.algo.ts:497",
          "pc": [
            1878
          ]
        },
        {
          "teal": 1978,
          "source": "contracts/TokenDrop.algo.ts:497",
          "pc": [
            1879
          ]
        },
        {
          "teal": 1981,
          "source": "contracts/TokenDrop.algo.ts:497",
          "errorMessage": "box value does not exist: this.allDrops(tokenDropId).value",
          "pc": [
            1880
          ]
        },
        {
          "teal": 1982,
          "source": "contracts/TokenDrop.algo.ts:497",
          "pc": [
            1881,
            1882
          ]
        },
        {
          "teal": 1989,
          "source": "contracts/TokenDrop.algo.ts:501",
          "pc": [
            1883,
            1884
          ]
        },
        {
          "teal": 1990,
          "source": "contracts/TokenDrop.algo.ts:501",
          "pc": [
            1885
          ]
        },
        {
          "teal": 1991,
          "source": "contracts/TokenDrop.algo.ts:501",
          "pc": [
            1886
          ]
        },
        {
          "teal": 1992,
          "source": "contracts/TokenDrop.algo.ts:501",
          "pc": [
            1887
          ]
        },
        {
          "teal": 1993,
          "source": "contracts/TokenDrop.algo.ts:501",
          "pc": [
            1888,
            1889,
            1890
          ]
        },
        {
          "teal": 1994,
          "source": "contracts/TokenDrop.algo.ts:502",
          "pc": [
            1891,
            1892
          ]
        },
        {
          "teal": 1995,
          "source": "contracts/TokenDrop.algo.ts:502",
          "pc": [
            1893,
            1894
          ]
        },
        {
          "teal": 1996,
          "source": "contracts/TokenDrop.algo.ts:502",
          "pc": [
            1895
          ]
        },
        {
          "teal": 1997,
          "source": "contracts/TokenDrop.algo.ts:501",
          "pc": [
            1896
          ]
        },
        {
          "teal": 2000,
          "source": "contracts/TokenDrop.algo.ts:502",
          "pc": [
            1897
          ]
        },
        {
          "teal": 2001,
          "source": "contracts/TokenDrop.algo.ts:502",
          "pc": [
            1898,
            1899,
            1900
          ]
        },
        {
          "teal": 2002,
          "source": "contracts/TokenDrop.algo.ts:503",
          "pc": [
            1901,
            1902
          ]
        },
        {
          "teal": 2003,
          "source": "contracts/TokenDrop.algo.ts:503",
          "pc": [
            1903,
            1904
          ]
        },
        {
          "teal": 2004,
          "source": "contracts/TokenDrop.algo.ts:503",
          "pc": [
            1905
          ]
        },
        {
          "teal": 2005,
          "source": "contracts/TokenDrop.algo.ts:502",
          "pc": [
            1906
          ]
        },
        {
          "teal": 2008,
          "source": "contracts/TokenDrop.algo.ts:500",
          "pc": [
            1907,
            1908,
            1909
          ]
        },
        {
          "teal": 2013,
          "source": "contracts/TokenDrop.algo.ts:505",
          "pc": [
            1910,
            1911
          ]
        },
        {
          "teal": 2014,
          "source": "contracts/TokenDrop.algo.ts:505",
          "pc": [
            1912
          ]
        },
        {
          "teal": 2015,
          "source": "contracts/TokenDrop.algo.ts:505",
          "pc": [
            1913
          ]
        },
        {
          "teal": 2016,
          "source": "contracts/TokenDrop.algo.ts:505",
          "pc": [
            1914
          ]
        },
        {
          "teal": 2020,
          "source": "contracts/TokenDrop.algo.ts:506",
          "pc": [
            1915,
            1916
          ]
        },
        {
          "teal": 2021,
          "source": "contracts/TokenDrop.algo.ts:506",
          "pc": [
            1917,
            1918,
            1919
          ]
        },
        {
          "teal": 2022,
          "source": "contracts/TokenDrop.algo.ts:506",
          "pc": [
            1920
          ]
        },
        {
          "teal": 2023,
          "source": "contracts/TokenDrop.algo.ts:506",
          "pc": [
            1921,
            1922
          ]
        },
        {
          "teal": 2028,
          "source": "contracts/TokenDrop.algo.ts:507",
          "pc": [
            1923,
            1924
          ]
        },
        {
          "teal": 2029,
          "source": "contracts/TokenDrop.algo.ts:507",
          "pc": [
            1925
          ]
        },
        {
          "teal": 2030,
          "source": "contracts/TokenDrop.algo.ts:507",
          "pc": [
            1926
          ]
        },
        {
          "teal": 2031,
          "source": "contracts/TokenDrop.algo.ts:507",
          "pc": [
            1927,
            1928,
            1929
          ]
        },
        {
          "teal": 2036,
          "source": "contracts/TokenDrop.algo.ts:508",
          "pc": [
            1930
          ]
        },
        {
          "teal": 2037,
          "source": "contracts/TokenDrop.algo.ts:508",
          "pc": [
            1931,
            1932
          ]
        },
        {
          "teal": 2045,
          "source": "contracts/TokenDrop.algo.ts:511",
          "pc": [
            1933,
            1934
          ]
        },
        {
          "teal": 2046,
          "source": "contracts/TokenDrop.algo.ts:511",
          "pc": [
            1935,
            1936
          ]
        },
        {
          "teal": 2047,
          "source": "contracts/TokenDrop.algo.ts:511",
          "pc": [
            1937,
            1938
          ]
        },
        {
          "teal": 2048,
          "source": "contracts/TokenDrop.algo.ts:511",
          "pc": [
            1939
          ]
        },
        {
          "teal": 2049,
          "source": "contracts/TokenDrop.algo.ts:511",
          "pc": [
            1940,
            1941
          ]
        },
        {
          "teal": 2050,
          "source": "contracts/TokenDrop.algo.ts:511",
          "pc": [
            1942
          ]
        },
        {
          "teal": 2053,
          "source": "contracts/TokenDrop.algo.ts:510",
          "errorMessage": "must have required minimum balance of validator defined token to add stake",
          "pc": [
            1943
          ]
        },
        {
          "teal": 2059,
          "source": "contracts/TokenDrop.algo.ts:515",
          "pc": [
            1944,
            1945
          ]
        },
        {
          "teal": 2060,
          "source": "contracts/TokenDrop.algo.ts:515",
          "pc": [
            1946
          ]
        },
        {
          "teal": 2061,
          "source": "contracts/TokenDrop.algo.ts:515",
          "pc": [
            1947
          ]
        },
        {
          "teal": 2062,
          "source": "contracts/TokenDrop.algo.ts:515",
          "pc": [
            1948,
            1949,
            1950
          ]
        },
        {
          "teal": 2070,
          "source": "contracts/TokenDrop.algo.ts:517",
          "pc": [
            1951,
            1952
          ]
        },
        {
          "teal": 2071,
          "source": "contracts/TokenDrop.algo.ts:517",
          "pc": [
            1953,
            1954
          ]
        },
        {
          "teal": 2072,
          "source": "contracts/TokenDrop.algo.ts:517",
          "pc": [
            1955
          ]
        },
        {
          "teal": 2073,
          "source": "contracts/TokenDrop.algo.ts:517",
          "pc": [
            1956,
            1957
          ]
        },
        {
          "teal": 2074,
          "source": "contracts/TokenDrop.algo.ts:517",
          "pc": [
            1958,
            1959,
            1960
          ]
        },
        {
          "teal": 2075,
          "source": "contracts/TokenDrop.algo.ts:517",
          "pc": [
            1961
          ]
        },
        {
          "teal": 2078,
          "source": "contracts/TokenDrop.algo.ts:516",
          "errorMessage": "specified asset must be created by creator that the validator defined as a requirement to stake",
          "pc": [
            1962
          ]
        },
        {
          "teal": 2084,
          "source": "contracts/TokenDrop.algo.ts:521",
          "pc": [
            1963,
            1964
          ]
        },
        {
          "teal": 2085,
          "source": "contracts/TokenDrop.algo.ts:521",
          "pc": [
            1965,
            1966
          ]
        },
        {
          "teal": 2086,
          "source": "contracts/TokenDrop.algo.ts:521",
          "pc": [
            1967
          ]
        },
        {
          "teal": 2087,
          "source": "contracts/TokenDrop.algo.ts:521",
          "pc": [
            1968,
            1969,
            1970
          ]
        },
        {
          "teal": 2092,
          "source": "contracts/TokenDrop.algo.ts:522",
          "pc": [
            1971
          ]
        },
        {
          "teal": 2093,
          "source": "contracts/TokenDrop.algo.ts:522",
          "pc": [
            1972,
            1973
          ]
        },
        {
          "teal": 2097,
          "source": "contracts/TokenDrop.algo.ts:523",
          "pc": [
            1974,
            1975
          ]
        },
        {
          "teal": 2098,
          "source": "contracts/TokenDrop.algo.ts:523",
          "pc": [
            1976,
            1977,
            1978
          ]
        },
        {
          "teal": 2099,
          "source": "contracts/TokenDrop.algo.ts:523",
          "pc": [
            1979
          ]
        },
        {
          "teal": 2100,
          "source": "contracts/TokenDrop.algo.ts:523",
          "pc": [
            1980,
            1981
          ]
        },
        {
          "teal": 2101,
          "source": "contracts/TokenDrop.algo.ts:523",
          "pc": [
            1982,
            1983,
            1984
          ]
        },
        {
          "teal": 2102,
          "source": "contracts/TokenDrop.algo.ts:523",
          "pc": [
            1985
          ]
        },
        {
          "teal": 2103,
          "source": "contracts/TokenDrop.algo.ts:523",
          "pc": [
            1986,
            1987
          ]
        },
        {
          "teal": 2104,
          "source": "contracts/TokenDrop.algo.ts:523",
          "pc": [
            1988
          ]
        },
        {
          "teal": 2105,
          "source": "contracts/TokenDrop.algo.ts:523",
          "pc": [
            1989,
            1990
          ]
        },
        {
          "teal": 2111,
          "source": "contracts/TokenDrop.algo.ts:524",
          "pc": [
            1991,
            1992
          ]
        },
        {
          "teal": 2112,
          "source": "contracts/TokenDrop.algo.ts:524",
          "pc": [
            1993,
            1994
          ]
        },
        {
          "teal": 2113,
          "source": "contracts/TokenDrop.algo.ts:524",
          "pc": [
            1995
          ]
        },
        {
          "teal": 2114,
          "source": "contracts/TokenDrop.algo.ts:524",
          "pc": [
            1996,
            1997,
            1998
          ]
        },
        {
          "teal": 2119,
          "source": "contracts/TokenDrop.algo.ts:525",
          "pc": [
            1999
          ]
        },
        {
          "teal": 2120,
          "source": "contracts/TokenDrop.algo.ts:525",
          "pc": [
            2000,
            2001
          ]
        },
        {
          "teal": 2121,
          "source": "contracts/TokenDrop.algo.ts:526",
          "pc": [
            2002,
            2003,
            2004
          ]
        },
        {
          "teal": 2127,
          "source": "contracts/TokenDrop.algo.ts:523",
          "pc": [
            2005,
            2006
          ]
        },
        {
          "teal": 2128,
          "source": "contracts/TokenDrop.algo.ts:523",
          "pc": [
            2007
          ]
        },
        {
          "teal": 2129,
          "source": "contracts/TokenDrop.algo.ts:523",
          "pc": [
            2008
          ]
        },
        {
          "teal": 2130,
          "source": "contracts/TokenDrop.algo.ts:523",
          "pc": [
            2009
          ]
        },
        {
          "teal": 2131,
          "source": "contracts/TokenDrop.algo.ts:523",
          "pc": [
            2010
          ]
        },
        {
          "teal": 2132,
          "source": "contracts/TokenDrop.algo.ts:523",
          "pc": [
            2011
          ]
        },
        {
          "teal": 2133,
          "source": "contracts/TokenDrop.algo.ts:523",
          "pc": [
            2012,
            2013,
            2014
          ]
        },
        {
          "teal": 2134,
          "source": "contracts/TokenDrop.algo.ts:523",
          "pc": [
            2015,
            2016
          ]
        },
        {
          "teal": 2135,
          "source": "contracts/TokenDrop.algo.ts:523",
          "pc": [
            2017,
            2018
          ]
        },
        {
          "teal": 2136,
          "source": "contracts/TokenDrop.algo.ts:523",
          "pc": [
            2019,
            2020
          ]
        },
        {
          "teal": 2137,
          "source": "contracts/TokenDrop.algo.ts:523",
          "pc": [
            2021
          ]
        },
        {
          "teal": 2138,
          "source": "contracts/TokenDrop.algo.ts:523",
          "pc": [
            2022
          ]
        },
        {
          "teal": 2139,
          "source": "contracts/TokenDrop.algo.ts:523",
          "pc": [
            2023
          ]
        },
        {
          "teal": 2140,
          "source": "contracts/TokenDrop.algo.ts:523",
          "pc": [
            2024,
            2025
          ]
        },
        {
          "teal": 2141,
          "source": "contracts/TokenDrop.algo.ts:523",
          "pc": [
            2026,
            2027,
            2028
          ]
        },
        {
          "teal": 2146,
          "source": "contracts/TokenDrop.algo.ts:529",
          "pc": [
            2029,
            2030
          ]
        },
        {
          "teal": 2149,
          "source": "contracts/TokenDrop.algo.ts:529",
          "errorMessage": "specified asset must be identical to the asset id defined as a requirement to stake",
          "pc": [
            2031
          ]
        },
        {
          "teal": 2155,
          "source": "contracts/TokenDrop.algo.ts:531",
          "pc": [
            2032,
            2033
          ]
        },
        {
          "teal": 2156,
          "source": "contracts/TokenDrop.algo.ts:531",
          "pc": [
            2034,
            2035
          ]
        },
        {
          "teal": 2157,
          "source": "contracts/TokenDrop.algo.ts:531",
          "pc": [
            2036
          ]
        },
        {
          "teal": 2158,
          "source": "contracts/TokenDrop.algo.ts:531",
          "pc": [
            2037,
            2038,
            2039
          ]
        },
        {
          "teal": 2169,
          "source": "contracts/TokenDrop.algo.ts:537",
          "pc": [
            2040,
            2041
          ]
        },
        {
          "teal": 2170,
          "source": "contracts/TokenDrop.algo.ts:537",
          "pc": [
            2042,
            2043
          ]
        },
        {
          "teal": 2171,
          "source": "contracts/TokenDrop.algo.ts:537",
          "pc": [
            2044
          ]
        },
        {
          "teal": 2172,
          "source": "contracts/TokenDrop.algo.ts:536",
          "pc": [
            2045,
            2046
          ]
        },
        {
          "teal": 2173,
          "source": "contracts/TokenDrop.algo.ts:536",
          "pc": [
            2047,
            2048,
            2049
          ]
        },
        {
          "teal": 2174,
          "source": "contracts/TokenDrop.algo.ts:536",
          "pc": [
            2050
          ]
        },
        {
          "teal": 2175,
          "source": "contracts/TokenDrop.algo.ts:535",
          "pc": [
            2051,
            2052,
            2053
          ]
        },
        {
          "teal": 2178,
          "source": "contracts/TokenDrop.algo.ts:534",
          "errorMessage": "specified asset must be created by creator that is one of the linked addresses in an nfd",
          "pc": [
            2054
          ]
        },
        {
          "teal": 2184,
          "source": "contracts/TokenDrop.algo.ts:542",
          "pc": [
            2055,
            2056
          ]
        },
        {
          "teal": 2185,
          "source": "contracts/TokenDrop.algo.ts:542",
          "pc": [
            2057,
            2058
          ]
        },
        {
          "teal": 2186,
          "source": "contracts/TokenDrop.algo.ts:542",
          "pc": [
            2059
          ]
        },
        {
          "teal": 2187,
          "source": "contracts/TokenDrop.algo.ts:542",
          "pc": [
            2060,
            2061,
            2062
          ]
        },
        {
          "teal": 2192,
          "source": "contracts/TokenDrop.algo.ts:544",
          "pc": [
            2063,
            2064
          ]
        },
        {
          "teal": 2193,
          "source": "contracts/TokenDrop.algo.ts:544",
          "pc": [
            2065,
            2066
          ]
        },
        {
          "teal": 2197,
          "source": "contracts/TokenDrop.algo.ts:545",
          "pc": [
            2067,
            2068
          ]
        },
        {
          "teal": 2198,
          "source": "contracts/TokenDrop.algo.ts:545",
          "pc": [
            2069,
            2070,
            2071
          ]
        },
        {
          "teal": 2201,
          "source": "contracts/TokenDrop.algo.ts:545",
          "errorMessage": "provided NFD must be valid",
          "pc": [
            2072
          ]
        },
        {
          "teal": 2209,
          "source": "contracts/TokenDrop.algo.ts:549",
          "pc": [
            2073,
            2074
          ]
        },
        {
          "teal": 2210,
          "source": "contracts/TokenDrop.algo.ts:549",
          "pc": [
            2075,
            2076
          ]
        },
        {
          "teal": 2211,
          "source": "contracts/TokenDrop.algo.ts:549",
          "pc": [
            2077
          ]
        },
        {
          "teal": 2214,
          "source": "contracts/TokenDrop.algo.ts:549",
          "errorMessage": "global state value does not exist: AppID.fromUint64(userOfferedNFDAppId).globalState('i.owner.a')",
          "pc": [
            2078
          ]
        },
        {
          "teal": 2215,
          "source": "contracts/TokenDrop.algo.ts:550",
          "pc": [
            2079,
            2080
          ]
        },
        {
          "teal": 2216,
          "source": "contracts/TokenDrop.algo.ts:549",
          "pc": [
            2081
          ]
        },
        {
          "teal": 2217,
          "source": "contracts/TokenDrop.algo.ts:550",
          "pc": [
            2082
          ]
        },
        {
          "teal": 2218,
          "source": "contracts/TokenDrop.algo.ts:550",
          "pc": [
            2083,
            2084,
            2085
          ]
        },
        {
          "teal": 2219,
          "source": "contracts/TokenDrop.algo.ts:550",
          "pc": [
            2086,
            2087
          ]
        },
        {
          "teal": 2220,
          "source": "contracts/TokenDrop.algo.ts:550",
          "pc": [
            2088,
            2089
          ]
        },
        {
          "teal": 2221,
          "source": "contracts/TokenDrop.algo.ts:550",
          "pc": [
            2090,
            2091,
            2092
          ]
        },
        {
          "teal": 2222,
          "source": "contracts/TokenDrop.algo.ts:550",
          "pc": [
            2093
          ]
        },
        {
          "teal": 2226,
          "source": "contracts/TokenDrop.algo.ts:548",
          "errorMessage": "provided nfd for entry isn't owned or linked to the claimer",
          "pc": [
            2094
          ]
        },
        {
          "teal": 2234,
          "source": "contracts/TokenDrop.algo.ts:556",
          "pc": [
            2095,
            2096
          ]
        },
        {
          "teal": 2235,
          "source": "contracts/TokenDrop.algo.ts:556",
          "pc": [
            2097,
            2098,
            2099,
            2100,
            2101,
            2102,
            2103,
            2104,
            2105,
            2106,
            2107,
            2108,
            2109,
            2110,
            2111
          ]
        },
        {
          "teal": 2236,
          "source": "contracts/TokenDrop.algo.ts:556",
          "pc": [
            2112
          ]
        },
        {
          "teal": 2239,
          "source": "contracts/TokenDrop.algo.ts:556",
          "errorMessage": "global state value does not exist: AppID.fromUint64(userOfferedNFDAppId).globalState('i.parentAppID')",
          "pc": [
            2113
          ]
        },
        {
          "teal": 2240,
          "source": "contracts/TokenDrop.algo.ts:556",
          "pc": [
            2114
          ]
        },
        {
          "teal": 2241,
          "source": "contracts/TokenDrop.algo.ts:557",
          "pc": [
            2115,
            2116
          ]
        },
        {
          "teal": 2242,
          "source": "contracts/TokenDrop.algo.ts:557",
          "pc": [
            2117,
            2118,
            2119
          ]
        },
        {
          "teal": 2243,
          "source": "contracts/TokenDrop.algo.ts:557",
          "pc": [
            2120
          ]
        },
        {
          "teal": 2244,
          "source": "contracts/TokenDrop.algo.ts:556",
          "pc": [
            2121
          ]
        },
        {
          "teal": 2247,
          "source": "contracts/TokenDrop.algo.ts:555",
          "errorMessage": "specified nfd must be a segment of the nfd the validator specified as a requirement",
          "pc": [
            2122
          ]
        },
        {
          "teal": 2253,
          "source": "contracts/TokenDrop.algo.ts:561",
          "pc": [
            2123,
            2124
          ]
        },
        {
          "teal": 2254,
          "source": "contracts/TokenDrop.algo.ts:561",
          "pc": [
            2125,
            2126
          ]
        },
        {
          "teal": 2255,
          "source": "contracts/TokenDrop.algo.ts:561",
          "pc": [
            2127
          ]
        },
        {
          "teal": 2256,
          "source": "contracts/TokenDrop.algo.ts:561",
          "pc": [
            2128,
            2129,
            2130
          ]
        },
        {
          "teal": 2261,
          "source": "contracts/TokenDrop.algo.ts:562",
          "pc": [
            2131,
            2132
          ]
        },
        {
          "teal": 2262,
          "source": "contracts/TokenDrop.algo.ts:562",
          "pc": [
            2133,
            2134
          ]
        },
        {
          "teal": 2263,
          "source": "contracts/TokenDrop.algo.ts:562",
          "pc": [
            2135,
            2136,
            2137
          ]
        },
        {
          "teal": 2271,
          "source": "contracts/TokenDrop.algo.ts:563",
          "pc": [
            2138
          ]
        },
        {
          "teal": 2272,
          "source": "contracts/TokenDrop.algo.ts:563",
          "pc": [
            2139,
            2140
          ]
        },
        {
          "teal": 2273,
          "source": "contracts/TokenDrop.algo.ts:563",
          "pc": [
            2141,
            2142
          ]
        },
        {
          "teal": 2274,
          "source": "contracts/TokenDrop.algo.ts:565",
          "pc": [
            2143,
            2144
          ]
        },
        {
          "teal": 2275,
          "source": "contracts/TokenDrop.algo.ts:565",
          "pc": [
            2145,
            2146
          ]
        },
        {
          "teal": 2279,
          "source": "contracts/TokenDrop.algo.ts:564",
          "pc": [
            2147,
            2148
          ]
        },
        {
          "teal": 2280,
          "source": "contracts/TokenDrop.algo.ts:564",
          "pc": [
            2149,
            2150
          ]
        },
        {
          "teal": 2284,
          "source": "contracts/TokenDrop.algo.ts:566",
          "pc": [
            2151,
            2152,
            2153,
            2154,
            2155,
            2156,
            2157,
            2158,
            2159,
            2160,
            2161,
            2162,
            2163
          ]
        },
        {
          "teal": 2285,
          "source": "contracts/TokenDrop.algo.ts:566",
          "pc": [
            2164,
            2165
          ]
        },
        {
          "teal": 2288,
          "source": "contracts/TokenDrop.algo.ts:563",
          "pc": [
            2166
          ]
        },
        {
          "teal": 2289,
          "source": "contracts/TokenDrop.algo.ts:563",
          "pc": [
            2167,
            2168
          ]
        },
        {
          "teal": 2292,
          "source": "contracts/TokenDrop.algo.ts:563",
          "pc": [
            2169
          ]
        },
        {
          "teal": 2293,
          "source": "contracts/TokenDrop.algo.ts:563",
          "pc": [
            2170,
            2171
          ]
        },
        {
          "teal": 2294,
          "source": "contracts/TokenDrop.algo.ts:563",
          "pc": [
            2172
          ]
        },
        {
          "teal": 2295,
          "source": "contracts/TokenDrop.algo.ts:563",
          "pc": [
            2173
          ]
        },
        {
          "teal": 2296,
          "source": "contracts/TokenDrop.algo.ts:563",
          "pc": [
            2174,
            2175
          ]
        },
        {
          "teal": 2297,
          "source": "contracts/TokenDrop.algo.ts:563",
          "pc": [
            2176,
            2177,
            2178
          ]
        },
        {
          "teal": 2298,
          "source": "contracts/TokenDrop.algo.ts:563",
          "pc": [
            2179,
            2180,
            2181
          ]
        },
        {
          "teal": 2299,
          "source": "contracts/TokenDrop.algo.ts:563",
          "pc": [
            2182,
            2183
          ]
        },
        {
          "teal": 2303,
          "source": "contracts/TokenDrop.algo.ts:568",
          "pc": [
            2184,
            2185
          ]
        },
        {
          "teal": 2304,
          "source": "contracts/TokenDrop.algo.ts:568",
          "pc": [
            2186
          ]
        },
        {
          "teal": 2305,
          "source": "contracts/TokenDrop.algo.ts:568",
          "pc": [
            2187
          ]
        },
        {
          "teal": 2308,
          "source": "contracts/TokenDrop.algo.ts:568",
          "errorMessage": "must have verified twitter",
          "pc": [
            2188
          ]
        },
        {
          "teal": 2314,
          "source": "contracts/TokenDrop.algo.ts:570",
          "pc": [
            2189,
            2190
          ]
        },
        {
          "teal": 2315,
          "source": "contracts/TokenDrop.algo.ts:570",
          "pc": [
            2191,
            2192
          ]
        },
        {
          "teal": 2316,
          "source": "contracts/TokenDrop.algo.ts:570",
          "pc": [
            2193
          ]
        },
        {
          "teal": 2317,
          "source": "contracts/TokenDrop.algo.ts:570",
          "pc": [
            2194,
            2195,
            2196
          ]
        },
        {
          "teal": 2322,
          "source": "contracts/TokenDrop.algo.ts:571",
          "pc": [
            2197,
            2198
          ]
        },
        {
          "teal": 2323,
          "source": "contracts/TokenDrop.algo.ts:571",
          "pc": [
            2199,
            2200
          ]
        },
        {
          "teal": 2324,
          "source": "contracts/TokenDrop.algo.ts:571",
          "pc": [
            2201,
            2202,
            2203
          ]
        },
        {
          "teal": 2332,
          "source": "contracts/TokenDrop.algo.ts:572",
          "pc": [
            2204
          ]
        },
        {
          "teal": 2333,
          "source": "contracts/TokenDrop.algo.ts:572",
          "pc": [
            2205,
            2206
          ]
        },
        {
          "teal": 2334,
          "source": "contracts/TokenDrop.algo.ts:572",
          "pc": [
            2207,
            2208
          ]
        },
        {
          "teal": 2335,
          "source": "contracts/TokenDrop.algo.ts:574",
          "pc": [
            2209,
            2210
          ]
        },
        {
          "teal": 2336,
          "source": "contracts/TokenDrop.algo.ts:574",
          "pc": [
            2211,
            2212
          ]
        },
        {
          "teal": 2340,
          "source": "contracts/TokenDrop.algo.ts:573",
          "pc": [
            2213,
            2214
          ]
        },
        {
          "teal": 2341,
          "source": "contracts/TokenDrop.algo.ts:573",
          "pc": [
            2215,
            2216
          ]
        },
        {
          "teal": 2345,
          "source": "contracts/TokenDrop.algo.ts:575",
          "pc": [
            2217,
            2218,
            2219,
            2220,
            2221,
            2222,
            2223,
            2224,
            2225,
            2226,
            2227,
            2228,
            2229,
            2230,
            2231,
            2232
          ]
        },
        {
          "teal": 2346,
          "source": "contracts/TokenDrop.algo.ts:575",
          "pc": [
            2233,
            2234
          ]
        },
        {
          "teal": 2349,
          "source": "contracts/TokenDrop.algo.ts:572",
          "pc": [
            2235
          ]
        },
        {
          "teal": 2350,
          "source": "contracts/TokenDrop.algo.ts:572",
          "pc": [
            2236,
            2237
          ]
        },
        {
          "teal": 2353,
          "source": "contracts/TokenDrop.algo.ts:572",
          "pc": [
            2238
          ]
        },
        {
          "teal": 2354,
          "source": "contracts/TokenDrop.algo.ts:572",
          "pc": [
            2239,
            2240
          ]
        },
        {
          "teal": 2355,
          "source": "contracts/TokenDrop.algo.ts:572",
          "pc": [
            2241
          ]
        },
        {
          "teal": 2356,
          "source": "contracts/TokenDrop.algo.ts:572",
          "pc": [
            2242
          ]
        },
        {
          "teal": 2357,
          "source": "contracts/TokenDrop.algo.ts:572",
          "pc": [
            2243,
            2244
          ]
        },
        {
          "teal": 2358,
          "source": "contracts/TokenDrop.algo.ts:572",
          "pc": [
            2245,
            2246,
            2247
          ]
        },
        {
          "teal": 2359,
          "source": "contracts/TokenDrop.algo.ts:572",
          "pc": [
            2248,
            2249,
            2250
          ]
        },
        {
          "teal": 2360,
          "source": "contracts/TokenDrop.algo.ts:572",
          "pc": [
            2251,
            2252
          ]
        },
        {
          "teal": 2364,
          "source": "contracts/TokenDrop.algo.ts:577",
          "pc": [
            2253,
            2254
          ]
        },
        {
          "teal": 2365,
          "source": "contracts/TokenDrop.algo.ts:577",
          "pc": [
            2255
          ]
        },
        {
          "teal": 2366,
          "source": "contracts/TokenDrop.algo.ts:577",
          "pc": [
            2256
          ]
        },
        {
          "teal": 2369,
          "source": "contracts/TokenDrop.algo.ts:577",
          "errorMessage": "must have verified bluesky",
          "pc": [
            2257
          ]
        },
        {
          "teal": 2375,
          "source": "contracts/TokenDrop.algo.ts:579",
          "pc": [
            2258,
            2259
          ]
        },
        {
          "teal": 2376,
          "source": "contracts/TokenDrop.algo.ts:579",
          "pc": [
            2260,
            2261
          ]
        },
        {
          "teal": 2377,
          "source": "contracts/TokenDrop.algo.ts:579",
          "pc": [
            2262
          ]
        },
        {
          "teal": 2378,
          "source": "contracts/TokenDrop.algo.ts:579",
          "pc": [
            2263,
            2264,
            2265
          ]
        },
        {
          "teal": 2383,
          "source": "contracts/TokenDrop.algo.ts:580",
          "pc": [
            2266,
            2267
          ]
        },
        {
          "teal": 2384,
          "source": "contracts/TokenDrop.algo.ts:580",
          "pc": [
            2268,
            2269
          ]
        },
        {
          "teal": 2385,
          "source": "contracts/TokenDrop.algo.ts:580",
          "pc": [
            2270,
            2271,
            2272
          ]
        },
        {
          "teal": 2389,
          "source": "contracts/TokenDrop.algo.ts:581",
          "pc": [
            2273,
            2274
          ]
        },
        {
          "teal": 2390,
          "source": "contracts/TokenDrop.algo.ts:581",
          "pc": [
            2275,
            2276,
            2277,
            2278,
            2279,
            2280,
            2281,
            2282,
            2283,
            2284,
            2285,
            2286,
            2287,
            2288,
            2289,
            2290,
            2291
          ]
        },
        {
          "teal": 2391,
          "source": "contracts/TokenDrop.algo.ts:581",
          "pc": [
            2292
          ]
        },
        {
          "teal": 2394,
          "source": "contracts/TokenDrop.algo.ts:581",
          "errorMessage": "global state value does not exist: AppID.fromUint64(valueToVerify).globalState('i.timePurchased')",
          "pc": [
            2293
          ]
        },
        {
          "teal": 2395,
          "source": "contracts/TokenDrop.algo.ts:581",
          "pc": [
            2294
          ]
        },
        {
          "teal": 2396,
          "source": "contracts/TokenDrop.algo.ts:581",
          "pc": [
            2295,
            2296
          ]
        },
        {
          "teal": 2403,
          "source": "contracts/TokenDrop.algo.ts:583",
          "pc": [
            2297,
            2298
          ]
        },
        {
          "teal": 2404,
          "source": "contracts/TokenDrop.algo.ts:583",
          "pc": [
            2299,
            2300
          ]
        },
        {
          "teal": 2405,
          "source": "contracts/TokenDrop.algo.ts:583",
          "pc": [
            2301,
            2302,
            2303
          ]
        },
        {
          "teal": 2406,
          "source": "contracts/TokenDrop.algo.ts:583",
          "pc": [
            2304
          ]
        },
        {
          "teal": 2407,
          "source": "contracts/TokenDrop.algo.ts:583",
          "pc": [
            2305,
            2306
          ]
        },
        {
          "teal": 2408,
          "source": "contracts/TokenDrop.algo.ts:583",
          "pc": [
            2307
          ]
        },
        {
          "teal": 2409,
          "source": "contracts/TokenDrop.algo.ts:583",
          "pc": [
            2308,
            2309
          ]
        },
        {
          "teal": 2410,
          "source": "contracts/TokenDrop.algo.ts:583",
          "pc": [
            2310
          ]
        },
        {
          "teal": 2411,
          "source": "contracts/TokenDrop.algo.ts:583",
          "pc": [
            2311,
            2312
          ]
        },
        {
          "teal": 2412,
          "source": "contracts/TokenDrop.algo.ts:583",
          "pc": [
            2313
          ]
        },
        {
          "teal": 2413,
          "source": "contracts/TokenDrop.algo.ts:583",
          "pc": [
            2314
          ]
        },
        {
          "teal": 2414,
          "source": "contracts/TokenDrop.algo.ts:583",
          "pc": [
            2315,
            2316
          ]
        },
        {
          "teal": 2415,
          "source": "contracts/TokenDrop.algo.ts:583",
          "pc": [
            2317
          ]
        },
        {
          "teal": 2418,
          "source": "contracts/TokenDrop.algo.ts:582",
          "errorMessage": "nfd must be held for min num of days",
          "pc": [
            2318
          ]
        },
        {
          "teal": 2421,
          "source": "contracts/TokenDrop.algo.ts:491",
          "pc": [
            2319
          ]
        },
        {
          "teal": 2425,
          "source": "contracts/TokenDrop.algo.ts:589",
          "pc": [
            2320,
            2321,
            2322
          ]
        },
        {
          "teal": 2428,
          "source": "contracts/TokenDrop.algo.ts:589",
          "pc": [
            2323
          ]
        },
        {
          "teal": 2432,
          "source": "contracts/TokenDrop.algo.ts:591",
          "pc": [
            2324,
            2325
          ]
        },
        {
          "teal": 2433,
          "source": "contracts/TokenDrop.algo.ts:591",
          "pc": [
            2326,
            2327
          ]
        },
        {
          "teal": 2437,
          "source": "contracts/TokenDrop.algo.ts:592",
          "pc": [
            2328,
            2329
          ]
        },
        {
          "teal": 2438,
          "source": "contracts/TokenDrop.algo.ts:592",
          "pc": [
            2330,
            2331,
            2332
          ]
        },
        {
          "teal": 2441,
          "source": "contracts/TokenDrop.algo.ts:592",
          "errorMessage": "provided NFD must be valid",
          "pc": [
            2333
          ]
        },
        {
          "teal": 2445,
          "source": "contracts/TokenDrop.algo.ts:594",
          "pc": [
            2334,
            2335
          ]
        },
        {
          "teal": 2446,
          "source": "contracts/TokenDrop.algo.ts:594",
          "pc": [
            2336,
            2337,
            2338
          ]
        },
        {
          "teal": 2447,
          "source": "contracts/TokenDrop.algo.ts:594",
          "pc": [
            2339
          ]
        },
        {
          "teal": 2450,
          "source": "contracts/TokenDrop.algo.ts:594",
          "errorMessage": "NFD must be V3 or later",
          "pc": [
            2340
          ]
        },
        {
          "teal": 2454,
          "source": "contracts/TokenDrop.algo.ts:596",
          "pc": [
            2341,
            2342
          ]
        },
        {
          "teal": 2455,
          "source": "contracts/TokenDrop.algo.ts:596",
          "pc": [
            2343,
            2344,
            2345
          ]
        },
        {
          "teal": 2456,
          "source": "contracts/TokenDrop.algo.ts:596",
          "pc": [
            2346
          ]
        },
        {
          "teal": 2459,
          "source": "contracts/TokenDrop.algo.ts:596",
          "errorMessage": "NFD must not be for sale",
          "pc": [
            2347
          ]
        },
        {
          "teal": 2463,
          "source": "contracts/TokenDrop.algo.ts:597",
          "pc": [
            2348,
            2349
          ]
        },
        {
          "teal": 2464,
          "source": "contracts/TokenDrop.algo.ts:597",
          "pc": [
            2350,
            2351,
            2352
          ]
        },
        {
          "teal": 2465,
          "source": "contracts/TokenDrop.algo.ts:597",
          "pc": [
            2353
          ]
        },
        {
          "teal": 2468,
          "source": "contracts/TokenDrop.algo.ts:597",
          "errorMessage": "NFD must not be expired",
          "pc": [
            2354
          ]
        },
        {
          "teal": 2475,
          "source": "contracts/TokenDrop.algo.ts:600",
          "pc": [
            2355,
            2356
          ]
        },
        {
          "teal": 2476,
          "source": "contracts/TokenDrop.algo.ts:600",
          "pc": [
            2357,
            2358
          ]
        },
        {
          "teal": 2477,
          "source": "contracts/TokenDrop.algo.ts:600",
          "pc": [
            2359
          ]
        },
        {
          "teal": 2480,
          "source": "contracts/TokenDrop.algo.ts:600",
          "errorMessage": "global state value does not exist: AppID.fromUint64(userOfferedNFDAppId).globalState('i.owner.a')",
          "pc": [
            2360
          ]
        },
        {
          "teal": 2481,
          "source": "contracts/TokenDrop.algo.ts:600",
          "pc": [
            2361,
            2362
          ]
        },
        {
          "teal": 2482,
          "source": "contracts/TokenDrop.algo.ts:600",
          "pc": [
            2363
          ]
        },
        {
          "teal": 2485,
          "source": "contracts/TokenDrop.algo.ts:599",
          "errorMessage": "provided nfd for entry isn't owned by the claimer",
          "pc": [
            2364
          ]
        },
        {
          "teal": 2486,
          "source": "contracts/TokenDrop.algo.ts:589",
          "pc": [
            2365
          ]
        },
        {
          "teal": 2498,
          "source": "contracts/TokenDrop.algo.ts:614",
          "pc": [
            2366,
            2367,
            2368
          ]
        },
        {
          "teal": 2501,
          "source": "contracts/TokenDrop.algo.ts:614",
          "pc": [
            2369
          ]
        },
        {
          "teal": 2505,
          "source": "contracts/TokenDrop.algo.ts:616",
          "pc": [
            2370,
            2371
          ]
        },
        {
          "teal": 2506,
          "source": "contracts/TokenDrop.algo.ts:616",
          "pc": [
            2372,
            2373,
            2374,
            2375,
            2376,
            2377,
            2378,
            2379
          ]
        },
        {
          "teal": 2507,
          "source": "contracts/TokenDrop.algo.ts:616",
          "pc": [
            2380
          ]
        },
        {
          "teal": 2510,
          "source": "contracts/TokenDrop.algo.ts:616",
          "errorMessage": "global state value does not exist: AppID.fromUint64(nfdAppId).globalState('i.name')",
          "pc": [
            2381
          ]
        },
        {
          "teal": 2511,
          "source": "contracts/TokenDrop.algo.ts:616",
          "pc": [
            2382,
            2383
          ]
        },
        {
          "teal": 2519,
          "source": "contracts/TokenDrop.algo.ts:618",
          "pc": [
            2384
          ]
        },
        {
          "teal": 2520,
          "source": "contracts/TokenDrop.algo.ts:618",
          "pc": [
            2385,
            2386
          ]
        },
        {
          "teal": 2521,
          "source": "contracts/TokenDrop.algo.ts:618",
          "pc": [
            2387,
            2388
          ]
        },
        {
          "teal": 2522,
          "source": "contracts/TokenDrop.algo.ts:620",
          "pc": [
            2389,
            2390,
            2391,
            2392,
            2393,
            2394
          ]
        },
        {
          "teal": 2523,
          "source": "contracts/TokenDrop.algo.ts:620",
          "pc": [
            2395,
            2396
          ]
        },
        {
          "teal": 2527,
          "source": "contracts/TokenDrop.algo.ts:619",
          "pc": [
            2397,
            2398
          ]
        },
        {
          "teal": 2528,
          "source": "contracts/TokenDrop.algo.ts:619",
          "pc": [
            2399
          ]
        },
        {
          "teal": 2529,
          "source": "contracts/TokenDrop.algo.ts:619",
          "pc": [
            2400,
            2401
          ]
        },
        {
          "teal": 2533,
          "source": "contracts/TokenDrop.algo.ts:621",
          "pc": [
            2402,
            2403
          ]
        },
        {
          "teal": 2534,
          "source": "contracts/TokenDrop.algo.ts:621",
          "pc": [
            2404
          ]
        },
        {
          "teal": 2535,
          "source": "contracts/TokenDrop.algo.ts:621",
          "pc": [
            2405
          ]
        },
        {
          "teal": 2536,
          "source": "contracts/TokenDrop.algo.ts:621",
          "pc": [
            2406
          ]
        },
        {
          "teal": 2537,
          "source": "contracts/TokenDrop.algo.ts:621",
          "pc": [
            2407,
            2408,
            2409
          ]
        },
        {
          "teal": 2538,
          "source": "contracts/TokenDrop.algo.ts:621",
          "pc": [
            2410
          ]
        },
        {
          "teal": 2539,
          "source": "contracts/TokenDrop.algo.ts:621",
          "pc": [
            2411
          ]
        },
        {
          "teal": 2540,
          "source": "contracts/TokenDrop.algo.ts:621",
          "pc": [
            2412,
            2413
          ]
        },
        {
          "teal": 2541,
          "source": "contracts/TokenDrop.algo.ts:621",
          "pc": [
            2414,
            2415
          ]
        },
        {
          "teal": 2542,
          "source": "contracts/TokenDrop.algo.ts:621",
          "pc": [
            2416
          ]
        },
        {
          "teal": 2543,
          "source": "contracts/TokenDrop.algo.ts:621",
          "pc": [
            2417,
            2418
          ]
        },
        {
          "teal": 2546,
          "source": "contracts/TokenDrop.algo.ts:618",
          "pc": [
            2419
          ]
        },
        {
          "teal": 2547,
          "source": "contracts/TokenDrop.algo.ts:618",
          "pc": [
            2420,
            2421
          ]
        },
        {
          "teal": 2550,
          "source": "contracts/TokenDrop.algo.ts:618",
          "pc": [
            2422
          ]
        },
        {
          "teal": 2551,
          "source": "contracts/TokenDrop.algo.ts:618",
          "pc": [
            2423,
            2424
          ]
        },
        {
          "teal": 2552,
          "source": "contracts/TokenDrop.algo.ts:618",
          "pc": [
            2425
          ]
        },
        {
          "teal": 2553,
          "source": "contracts/TokenDrop.algo.ts:618",
          "pc": [
            2426
          ]
        },
        {
          "teal": 2554,
          "source": "contracts/TokenDrop.algo.ts:618",
          "pc": [
            2427,
            2428
          ]
        },
        {
          "teal": 2555,
          "source": "contracts/TokenDrop.algo.ts:618",
          "pc": [
            2429,
            2430,
            2431
          ]
        },
        {
          "teal": 2556,
          "source": "contracts/TokenDrop.algo.ts:618",
          "pc": [
            2432
          ]
        },
        {
          "teal": 2557,
          "source": "contracts/TokenDrop.algo.ts:618",
          "pc": [
            2433
          ]
        },
        {
          "teal": 2560,
          "source": "contracts/TokenDrop.algo.ts:614",
          "pc": [
            2434,
            2435
          ]
        },
        {
          "teal": 2561,
          "source": "contracts/TokenDrop.algo.ts:614",
          "pc": [
            2436
          ]
        },
        {
          "teal": 2565,
          "source": "contracts/TokenDrop.algo.ts:625",
          "pc": [
            2437,
            2438,
            2439
          ]
        },
        {
          "teal": 2568,
          "source": "contracts/TokenDrop.algo.ts:625",
          "pc": [
            2440
          ]
        },
        {
          "teal": 2572,
          "source": "contracts/TokenDrop.algo.ts:626",
          "pc": [
            2441,
            2442
          ]
        },
        {
          "teal": 2573,
          "source": "contracts/TokenDrop.algo.ts:626",
          "pc": [
            2443,
            2444,
            2445,
            2446,
            2447,
            2448,
            2449
          ]
        },
        {
          "teal": 2574,
          "source": "contracts/TokenDrop.algo.ts:626",
          "pc": [
            2450
          ]
        },
        {
          "teal": 2577,
          "source": "contracts/TokenDrop.algo.ts:626",
          "errorMessage": "global state value does not exist: AppID.fromUint64(nfdAppId).globalState('i.ver')",
          "pc": [
            2451
          ]
        },
        {
          "teal": 2578,
          "source": "contracts/TokenDrop.algo.ts:626",
          "pc": [
            2452,
            2453,
            2454
          ]
        },
        {
          "teal": 2579,
          "source": "contracts/TokenDrop.algo.ts:626",
          "pc": [
            2455,
            2456
          ]
        },
        {
          "teal": 2583,
          "source": "contracts/TokenDrop.algo.ts:627",
          "pc": [
            2457,
            2458
          ]
        },
        {
          "teal": 2584,
          "source": "contracts/TokenDrop.algo.ts:627",
          "pc": [
            2459,
            2460,
            2461,
            2462
          ]
        },
        {
          "teal": 2585,
          "source": "contracts/TokenDrop.algo.ts:627",
          "pc": [
            2463
          ]
        },
        {
          "teal": 2586,
          "source": "contracts/TokenDrop.algo.ts:627",
          "pc": [
            2464
          ]
        },
        {
          "teal": 2587,
          "source": "contracts/TokenDrop.algo.ts:627",
          "pc": [
            2465,
            2466,
            2467
          ]
        },
        {
          "teal": 2588,
          "source": "contracts/TokenDrop.algo.ts:627",
          "pc": [
            2468,
            2469
          ]
        },
        {
          "teal": 2589,
          "source": "contracts/TokenDrop.algo.ts:627",
          "pc": [
            2470,
            2471,
            2472,
            2473
          ]
        },
        {
          "teal": 2590,
          "source": "contracts/TokenDrop.algo.ts:627",
          "pc": [
            2474
          ]
        },
        {
          "teal": 2591,
          "source": "contracts/TokenDrop.algo.ts:627",
          "pc": [
            2475
          ]
        },
        {
          "teal": 2595,
          "source": "contracts/TokenDrop.algo.ts:625",
          "pc": [
            2476,
            2477
          ]
        },
        {
          "teal": 2596,
          "source": "contracts/TokenDrop.algo.ts:625",
          "pc": [
            2478
          ]
        },
        {
          "teal": 2600,
          "source": "contracts/TokenDrop.algo.ts:630",
          "pc": [
            2479,
            2480,
            2481
          ]
        },
        {
          "teal": 2604,
          "source": "contracts/TokenDrop.algo.ts:631",
          "pc": [
            2482,
            2483,
            2484,
            2485,
            2486,
            2487,
            2488,
            2489,
            2490,
            2491,
            2492
          ]
        },
        {
          "teal": 2605,
          "source": "contracts/TokenDrop.algo.ts:631",
          "pc": [
            2493,
            2494
          ]
        },
        {
          "teal": 2606,
          "source": "contracts/TokenDrop.algo.ts:631",
          "pc": [
            2495,
            2496,
            2497
          ]
        },
        {
          "teal": 2607,
          "source": "contracts/TokenDrop.algo.ts:631",
          "pc": [
            2498
          ]
        },
        {
          "teal": 2608,
          "source": "contracts/TokenDrop.algo.ts:631",
          "pc": [
            2499
          ]
        },
        {
          "teal": 2609,
          "source": "contracts/TokenDrop.algo.ts:630",
          "pc": [
            2500
          ]
        },
        {
          "teal": 2613,
          "source": "contracts/TokenDrop.algo.ts:635",
          "pc": [
            2501,
            2502,
            2503
          ]
        },
        {
          "teal": 2616,
          "source": "contracts/TokenDrop.algo.ts:635",
          "pc": [
            2504
          ]
        },
        {
          "teal": 2620,
          "source": "contracts/TokenDrop.algo.ts:636",
          "pc": [
            2505,
            2506,
            2507,
            2508,
            2509,
            2510,
            2511,
            2512,
            2513,
            2514,
            2515,
            2516,
            2517,
            2518,
            2519,
            2520,
            2521,
            2522
          ]
        },
        {
          "teal": 2621,
          "source": "contracts/TokenDrop.algo.ts:636",
          "pc": [
            2523,
            2524
          ]
        },
        {
          "teal": 2622,
          "source": "contracts/TokenDrop.algo.ts:636",
          "pc": [
            2525,
            2526,
            2527
          ]
        },
        {
          "teal": 2623,
          "source": "contracts/TokenDrop.algo.ts:636",
          "pc": [
            2528,
            2529
          ]
        },
        {
          "teal": 2628,
          "source": "contracts/TokenDrop.algo.ts:637",
          "pc": [
            2530,
            2531
          ]
        },
        {
          "teal": 2629,
          "source": "contracts/TokenDrop.algo.ts:637",
          "pc": [
            2532
          ]
        },
        {
          "teal": 2630,
          "source": "contracts/TokenDrop.algo.ts:637",
          "pc": [
            2533
          ]
        },
        {
          "teal": 2631,
          "source": "contracts/TokenDrop.algo.ts:637",
          "pc": [
            2534,
            2535,
            2536
          ]
        },
        {
          "teal": 2636,
          "source": "contracts/TokenDrop.algo.ts:639",
          "pc": [
            2537
          ]
        },
        {
          "teal": 2637,
          "source": "contracts/TokenDrop.algo.ts:639",
          "pc": [
            2538,
            2539,
            2540
          ]
        },
        {
          "teal": 2642,
          "source": "contracts/TokenDrop.algo.ts:641",
          "pc": [
            2541,
            2542
          ]
        },
        {
          "teal": 2643,
          "source": "contracts/TokenDrop.algo.ts:641",
          "pc": [
            2543,
            2544
          ]
        },
        {
          "teal": 2644,
          "source": "contracts/TokenDrop.algo.ts:641",
          "pc": [
            2545
          ]
        },
        {
          "teal": 2648,
          "source": "contracts/TokenDrop.algo.ts:635",
          "pc": [
            2546,
            2547
          ]
        },
        {
          "teal": 2649,
          "source": "contracts/TokenDrop.algo.ts:635",
          "pc": [
            2548
          ]
        },
        {
          "teal": 2653,
          "source": "contracts/TokenDrop.algo.ts:644",
          "pc": [
            2549,
            2550,
            2551
          ]
        },
        {
          "teal": 2658,
          "source": "contracts/TokenDrop.algo.ts:645",
          "pc": [
            2552,
            2553
          ]
        },
        {
          "teal": 2659,
          "source": "contracts/TokenDrop.algo.ts:645",
          "pc": [
            2554,
            2555
          ]
        },
        {
          "teal": 2660,
          "source": "contracts/TokenDrop.algo.ts:645",
          "pc": [
            2556
          ]
        },
        {
          "teal": 2661,
          "source": "contracts/TokenDrop.algo.ts:645",
          "pc": [
            2557
          ]
        },
        {
          "teal": 2662,
          "source": "contracts/TokenDrop.algo.ts:645",
          "pc": [
            2558
          ]
        },
        {
          "teal": 2663,
          "source": "contracts/TokenDrop.algo.ts:645",
          "pc": [
            2559
          ]
        },
        {
          "teal": 2664,
          "source": "contracts/TokenDrop.algo.ts:645",
          "pc": [
            2560,
            2561,
            2562
          ]
        },
        {
          "teal": 2669,
          "source": "contracts/TokenDrop.algo.ts:646",
          "pc": [
            2563
          ]
        },
        {
          "teal": 2670,
          "source": "contracts/TokenDrop.algo.ts:646",
          "pc": [
            2564
          ]
        },
        {
          "teal": 2675,
          "source": "contracts/TokenDrop.algo.ts:648",
          "pc": [
            2565,
            2566
          ]
        },
        {
          "teal": 2676,
          "source": "contracts/TokenDrop.algo.ts:648",
          "pc": [
            2567,
            2568
          ]
        },
        {
          "teal": 2677,
          "source": "contracts/TokenDrop.algo.ts:648",
          "pc": [
            2569
          ]
        },
        {
          "teal": 2680,
          "source": "contracts/TokenDrop.algo.ts:648",
          "errorMessage": "global state value does not exist: AppID.fromUint64(appId).globalState(key)",
          "pc": [
            2570
          ]
        },
        {
          "teal": 2681,
          "source": "contracts/TokenDrop.algo.ts:648",
          "pc": [
            2571
          ]
        },
        {
          "teal": 2682,
          "source": "contracts/TokenDrop.algo.ts:644",
          "pc": [
            2572
          ]
        },
        {
          "teal": 2693,
          "source": "contracts/TokenDrop.algo.ts:659",
          "pc": [
            2573,
            2574,
            2575
          ]
        },
        {
          "teal": 2696,
          "source": "contracts/TokenDrop.algo.ts:659",
          "pc": [
            2576
          ]
        },
        {
          "teal": 2697,
          "source": "contracts/TokenDrop.algo.ts:659",
          "pc": [
            2577,
            2578
          ]
        },
        {
          "teal": 2704,
          "source": "contracts/TokenDrop.algo.ts:660",
          "pc": [
            2579
          ]
        },
        {
          "teal": 2705,
          "source": "contracts/TokenDrop.algo.ts:660",
          "pc": [
            2580,
            2581
          ]
        },
        {
          "teal": 2706,
          "source": "contracts/TokenDrop.algo.ts:660",
          "pc": [
            2582,
            2583
          ]
        },
        {
          "teal": 2710,
          "source": "contracts/TokenDrop.algo.ts:661",
          "pc": [
            2584,
            2585
          ]
        },
        {
          "teal": 2711,
          "source": "contracts/TokenDrop.algo.ts:661",
          "pc": [
            2586,
            2587
          ]
        },
        {
          "teal": 2715,
          "source": "contracts/TokenDrop.algo.ts:662",
          "pc": [
            2588,
            2589,
            2590,
            2591,
            2592,
            2593,
            2594,
            2595,
            2596,
            2597,
            2598,
            2599,
            2600,
            2601,
            2602
          ]
        },
        {
          "teal": 2716,
          "source": "contracts/TokenDrop.algo.ts:662",
          "pc": [
            2603,
            2604
          ]
        },
        {
          "teal": 2717,
          "source": "contracts/TokenDrop.algo.ts:662",
          "pc": [
            2605,
            2606,
            2607,
            2608,
            2609,
            2610,
            2611,
            2612,
            2613,
            2614,
            2615,
            2616,
            2617,
            2618,
            2619
          ]
        },
        {
          "teal": 2718,
          "source": "contracts/TokenDrop.algo.ts:662",
          "pc": [
            2620,
            2621
          ]
        },
        {
          "teal": 2721,
          "source": "contracts/TokenDrop.algo.ts:660",
          "pc": [
            2622
          ]
        },
        {
          "teal": 2722,
          "source": "contracts/TokenDrop.algo.ts:660",
          "pc": [
            2623,
            2624
          ]
        },
        {
          "teal": 2725,
          "source": "contracts/TokenDrop.algo.ts:660",
          "pc": [
            2625
          ]
        },
        {
          "teal": 2729,
          "source": "contracts/TokenDrop.algo.ts:664",
          "pc": [
            2626,
            2627
          ]
        },
        {
          "teal": 2730,
          "source": "contracts/TokenDrop.algo.ts:664",
          "pc": [
            2628,
            2629
          ]
        },
        {
          "teal": 2734,
          "source": "contracts/TokenDrop.algo.ts:665",
          "pc": [
            2630
          ]
        },
        {
          "teal": 2735,
          "source": "contracts/TokenDrop.algo.ts:665",
          "pc": [
            2631,
            2632
          ]
        },
        {
          "teal": 2740,
          "source": "contracts/TokenDrop.algo.ts:665",
          "pc": [
            2633,
            2634
          ]
        },
        {
          "teal": 2741,
          "source": "contracts/TokenDrop.algo.ts:665",
          "pc": [
            2635,
            2636
          ]
        },
        {
          "teal": 2742,
          "source": "contracts/TokenDrop.algo.ts:665",
          "pc": [
            2637
          ]
        },
        {
          "teal": 2743,
          "source": "contracts/TokenDrop.algo.ts:665",
          "pc": [
            2638
          ]
        },
        {
          "teal": 2744,
          "source": "contracts/TokenDrop.algo.ts:665",
          "pc": [
            2639,
            2640,
            2641
          ]
        },
        {
          "teal": 2748,
          "source": "contracts/TokenDrop.algo.ts:666",
          "pc": [
            2642,
            2643
          ]
        },
        {
          "teal": 2749,
          "source": "contracts/TokenDrop.algo.ts:666",
          "pc": [
            2644,
            2645
          ]
        },
        {
          "teal": 2750,
          "source": "contracts/TokenDrop.algo.ts:666",
          "pc": [
            2646
          ]
        },
        {
          "teal": 2751,
          "source": "contracts/TokenDrop.algo.ts:666",
          "pc": [
            2647
          ]
        },
        {
          "teal": 2752,
          "source": "contracts/TokenDrop.algo.ts:666",
          "pc": [
            2648,
            2649
          ]
        },
        {
          "teal": 2757,
          "source": "contracts/TokenDrop.algo.ts:667",
          "pc": [
            2650,
            2651
          ]
        },
        {
          "teal": 2758,
          "source": "contracts/TokenDrop.algo.ts:667",
          "pc": [
            2652,
            2653
          ]
        },
        {
          "teal": 2759,
          "source": "contracts/TokenDrop.algo.ts:667",
          "pc": [
            2654
          ]
        },
        {
          "teal": 2760,
          "source": "contracts/TokenDrop.algo.ts:667",
          "pc": [
            2655
          ]
        },
        {
          "teal": 2761,
          "source": "contracts/TokenDrop.algo.ts:667",
          "pc": [
            2656,
            2657,
            2658
          ]
        },
        {
          "teal": 2762,
          "source": "contracts/TokenDrop.algo.ts:667",
          "pc": [
            2659,
            2660
          ]
        },
        {
          "teal": 2763,
          "source": "contracts/TokenDrop.algo.ts:667",
          "pc": [
            2661,
            2662
          ]
        },
        {
          "teal": 2764,
          "source": "contracts/TokenDrop.algo.ts:667",
          "pc": [
            2663
          ]
        },
        {
          "teal": 2765,
          "source": "contracts/TokenDrop.algo.ts:667",
          "pc": [
            2664
          ]
        },
        {
          "teal": 2768,
          "source": "contracts/TokenDrop.algo.ts:667",
          "pc": [
            2665,
            2666,
            2667
          ]
        },
        {
          "teal": 2773,
          "source": "contracts/TokenDrop.algo.ts:668",
          "pc": [
            2668
          ]
        },
        {
          "teal": 2774,
          "source": "contracts/TokenDrop.algo.ts:668",
          "pc": [
            2669,
            2670,
            2671
          ]
        },
        {
          "teal": 2781,
          "source": "contracts/TokenDrop.algo.ts:665",
          "pc": [
            2672,
            2673
          ]
        },
        {
          "teal": 2782,
          "source": "contracts/TokenDrop.algo.ts:665",
          "pc": [
            2674
          ]
        },
        {
          "teal": 2783,
          "source": "contracts/TokenDrop.algo.ts:665",
          "pc": [
            2675
          ]
        },
        {
          "teal": 2784,
          "source": "contracts/TokenDrop.algo.ts:665",
          "pc": [
            2676,
            2677
          ]
        },
        {
          "teal": 2785,
          "source": "contracts/TokenDrop.algo.ts:665",
          "pc": [
            2678,
            2679,
            2680
          ]
        },
        {
          "teal": 2790,
          "source": "contracts/TokenDrop.algo.ts:671",
          "pc": [
            2681
          ]
        },
        {
          "teal": 2794,
          "source": "contracts/TokenDrop.algo.ts:659",
          "pc": [
            2682,
            2683
          ]
        },
        {
          "teal": 2797,
          "source": "contracts/TokenDrop.algo.ts:659",
          "pc": [
            2684,
            2685
          ]
        },
        {
          "teal": 2798,
          "source": "contracts/TokenDrop.algo.ts:659",
          "pc": [
            2686
          ]
        },
        {
          "teal": 2802,
          "source": "contracts/TokenDrop.algo.ts:674",
          "pc": [
            2687,
            2688,
            2689
          ]
        },
        {
          "teal": 2808,
          "source": "contracts/TokenDrop.algo.ts:676",
          "pc": [
            2690,
            2691
          ]
        },
        {
          "teal": 2809,
          "source": "contracts/TokenDrop.algo.ts:676",
          "pc": [
            2692,
            2693,
            2694
          ]
        },
        {
          "teal": 2810,
          "source": "contracts/TokenDrop.algo.ts:676",
          "pc": [
            2695
          ]
        },
        {
          "teal": 2811,
          "source": "contracts/TokenDrop.algo.ts:676",
          "pc": [
            2696
          ]
        },
        {
          "teal": 2812,
          "source": "contracts/TokenDrop.algo.ts:676",
          "pc": [
            2697
          ]
        },
        {
          "teal": 2813,
          "source": "contracts/TokenDrop.algo.ts:676",
          "pc": [
            2698
          ]
        },
        {
          "teal": 2814,
          "source": "contracts/TokenDrop.algo.ts:676",
          "pc": [
            2699,
            2700,
            2701
          ]
        },
        {
          "teal": 2815,
          "source": "contracts/TokenDrop.algo.ts:676",
          "pc": [
            2702,
            2703
          ]
        },
        {
          "teal": 2816,
          "source": "contracts/TokenDrop.algo.ts:676",
          "pc": [
            2704,
            2705,
            2706
          ]
        },
        {
          "teal": 2817,
          "source": "contracts/TokenDrop.algo.ts:676",
          "pc": [
            2707
          ]
        },
        {
          "teal": 2818,
          "source": "contracts/TokenDrop.algo.ts:676",
          "pc": [
            2708,
            2709
          ]
        },
        {
          "teal": 2819,
          "source": "contracts/TokenDrop.algo.ts:676",
          "pc": [
            2710
          ]
        },
        {
          "teal": 2820,
          "source": "contracts/TokenDrop.algo.ts:676",
          "pc": [
            2711
          ]
        },
        {
          "teal": 2823,
          "source": "contracts/TokenDrop.algo.ts:675",
          "pc": [
            2712
          ]
        },
        {
          "teal": 2829,
          "source": "contracts/TokenDrop.algo.ts:679",
          "pc": [
            2713,
            2714
          ]
        },
        {
          "teal": 2830,
          "source": "contracts/TokenDrop.algo.ts:679",
          "pc": [
            2715,
            2716,
            2717
          ]
        },
        {
          "teal": 2831,
          "source": "contracts/TokenDrop.algo.ts:679",
          "pc": [
            2718
          ]
        },
        {
          "teal": 2832,
          "source": "contracts/TokenDrop.algo.ts:679",
          "pc": [
            2719,
            2720
          ]
        },
        {
          "teal": 2833,
          "source": "contracts/TokenDrop.algo.ts:679",
          "pc": [
            2721
          ]
        },
        {
          "teal": 2834,
          "source": "contracts/TokenDrop.algo.ts:679",
          "pc": [
            2722
          ]
        },
        {
          "teal": 2835,
          "source": "contracts/TokenDrop.algo.ts:679",
          "pc": [
            2723,
            2724,
            2725
          ]
        },
        {
          "teal": 2836,
          "source": "contracts/TokenDrop.algo.ts:680",
          "pc": [
            2726,
            2727
          ]
        },
        {
          "teal": 2837,
          "source": "contracts/TokenDrop.algo.ts:680",
          "pc": [
            2728,
            2729,
            2730
          ]
        },
        {
          "teal": 2838,
          "source": "contracts/TokenDrop.algo.ts:680",
          "pc": [
            2731
          ]
        },
        {
          "teal": 2839,
          "source": "contracts/TokenDrop.algo.ts:680",
          "pc": [
            2732,
            2733
          ]
        },
        {
          "teal": 2840,
          "source": "contracts/TokenDrop.algo.ts:680",
          "pc": [
            2734
          ]
        },
        {
          "teal": 2841,
          "source": "contracts/TokenDrop.algo.ts:679",
          "pc": [
            2735
          ]
        },
        {
          "teal": 2844,
          "source": "contracts/TokenDrop.algo.ts:678",
          "pc": [
            2736,
            2737,
            2738
          ]
        },
        {
          "teal": 2852,
          "source": "contracts/TokenDrop.algo.ts:684",
          "pc": [
            2739,
            2740
          ]
        },
        {
          "teal": 2853,
          "source": "contracts/TokenDrop.algo.ts:684",
          "pc": [
            2741,
            2742,
            2743
          ]
        },
        {
          "teal": 2854,
          "source": "contracts/TokenDrop.algo.ts:684",
          "pc": [
            2744
          ]
        },
        {
          "teal": 2855,
          "source": "contracts/TokenDrop.algo.ts:684",
          "pc": [
            2745,
            2746,
            2747
          ]
        },
        {
          "teal": 2858,
          "source": "contracts/TokenDrop.algo.ts:683",
          "errorMessage": "provided NFD App id for gating must be valid NFD",
          "pc": [
            2748
          ]
        },
        {
          "teal": 2864,
          "source": "contracts/TokenDrop.algo.ts:688",
          "pc": [
            2749,
            2750
          ]
        },
        {
          "teal": 2865,
          "source": "contracts/TokenDrop.algo.ts:688",
          "pc": [
            2751,
            2752,
            2753
          ]
        },
        {
          "teal": 2866,
          "source": "contracts/TokenDrop.algo.ts:688",
          "pc": [
            2754
          ]
        },
        {
          "teal": 2867,
          "source": "contracts/TokenDrop.algo.ts:688",
          "pc": [
            2755,
            2756
          ]
        },
        {
          "teal": 2868,
          "source": "contracts/TokenDrop.algo.ts:688",
          "pc": [
            2757
          ]
        },
        {
          "teal": 2869,
          "source": "contracts/TokenDrop.algo.ts:688",
          "pc": [
            2758,
            2759,
            2760
          ]
        },
        {
          "teal": 2874,
          "source": "contracts/TokenDrop.algo.ts:689",
          "pc": [
            2761,
            2762
          ]
        },
        {
          "teal": 2875,
          "source": "contracts/TokenDrop.algo.ts:689",
          "pc": [
            2763,
            2764,
            2765
          ]
        },
        {
          "teal": 2876,
          "source": "contracts/TokenDrop.algo.ts:689",
          "pc": [
            2766
          ]
        },
        {
          "teal": 2877,
          "source": "contracts/TokenDrop.algo.ts:689",
          "pc": [
            2767
          ]
        },
        {
          "teal": 2878,
          "source": "contracts/TokenDrop.algo.ts:689",
          "pc": [
            2768
          ]
        },
        {
          "teal": 2881,
          "source": "contracts/TokenDrop.algo.ts:689",
          "errorMessage": "asset min balance - used as nfd holding age - must be >0",
          "pc": [
            2769
          ]
        },
        {
          "teal": 2884,
          "source": "contracts/TokenDrop.algo.ts:674",
          "pc": [
            2770
          ]
        },
        {
          "teal": 2888,
          "source": "contracts/TokenDrop.algo.ts:693",
          "pc": [
            2771,
            2772,
            2773
          ]
        },
        {
          "teal": 2892,
          "source": "contracts/TokenDrop.algo.ts:697",
          "pc": [
            2774,
            2775,
            2776
          ]
        },
        {
          "teal": 2893,
          "source": "contracts/TokenDrop.algo.ts:697",
          "pc": [
            2777,
            2778
          ]
        },
        {
          "teal": 2894,
          "source": "contracts/TokenDrop.algo.ts:697",
          "pc": [
            2779,
            2780,
            2781
          ]
        },
        {
          "teal": 2895,
          "source": "contracts/TokenDrop.algo.ts:697",
          "pc": [
            2782
          ]
        },
        {
          "teal": 2896,
          "source": "contracts/TokenDrop.algo.ts:697",
          "pc": [
            2783
          ]
        },
        {
          "teal": 2897,
          "source": "contracts/TokenDrop.algo.ts:693",
          "pc": [
            2784
          ]
        },
        {
          "teal": 2900,
          "source": "contracts/TokenDrop.algo.ts:32",
          "pc": [
            2785,
            2786,
            2787,
            2788,
            2789,
            2790
          ]
        },
        {
          "teal": 2901,
          "source": "contracts/TokenDrop.algo.ts:32",
          "pc": [
            2791,
            2792,
            2793
          ]
        },
        {
          "teal": 2902,
          "source": "contracts/TokenDrop.algo.ts:32",
          "pc": [
            2794,
            2795,
            2796,
            2797
          ]
        },
        {
          "teal": 2905,
          "source": "contracts/TokenDrop.algo.ts:32",
          "errorMessage": "this contract does not implement the given ABI method for create NoOp",
          "pc": [
            2798
          ]
        },
        {
          "teal": 2908,
          "source": "contracts/TokenDrop.algo.ts:32",
          "pc": [
            2799,
            2800,
            2801,
            2802,
            2803,
            2804
          ]
        },
        {
          "teal": 2909,
          "source": "contracts/TokenDrop.algo.ts:32",
          "pc": [
            2805,
            2806,
            2807,
            2808,
            2809,
            2810
          ]
        },
        {
          "teal": 2910,
          "source": "contracts/TokenDrop.algo.ts:32",
          "pc": [
            2811,
            2812,
            2813,
            2814,
            2815,
            2816
          ]
        },
        {
          "teal": 2911,
          "source": "contracts/TokenDrop.algo.ts:32",
          "pc": [
            2817,
            2818,
            2819,
            2820,
            2821,
            2822
          ]
        },
        {
          "teal": 2912,
          "source": "contracts/TokenDrop.algo.ts:32",
          "pc": [
            2823,
            2824,
            2825,
            2826,
            2827,
            2828
          ]
        },
        {
          "teal": 2913,
          "source": "contracts/TokenDrop.algo.ts:32",
          "pc": [
            2829,
            2830,
            2831,
            2832,
            2833,
            2834
          ]
        },
        {
          "teal": 2914,
          "source": "contracts/TokenDrop.algo.ts:32",
          "pc": [
            2835,
            2836,
            2837,
            2838,
            2839,
            2840
          ]
        },
        {
          "teal": 2915,
          "source": "contracts/TokenDrop.algo.ts:32",
          "pc": [
            2841,
            2842,
            2843,
            2844,
            2845,
            2846
          ]
        },
        {
          "teal": 2916,
          "source": "contracts/TokenDrop.algo.ts:32",
          "pc": [
            2847,
            2848,
            2849,
            2850,
            2851,
            2852
          ]
        },
        {
          "teal": 2917,
          "source": "contracts/TokenDrop.algo.ts:32",
          "pc": [
            2853,
            2854,
            2855,
            2856,
            2857,
            2858
          ]
        },
        {
          "teal": 2918,
          "source": "contracts/TokenDrop.algo.ts:32",
          "pc": [
            2859,
            2860,
            2861,
            2862,
            2863,
            2864
          ]
        },
        {
          "teal": 2919,
          "source": "contracts/TokenDrop.algo.ts:32",
          "pc": [
            2865,
            2866,
            2867,
            2868,
            2869,
            2870
          ]
        },
        {
          "teal": 2920,
          "source": "contracts/TokenDrop.algo.ts:32",
          "pc": [
            2871,
            2872,
            2873
          ]
        },
        {
          "teal": 2921,
          "source": "contracts/TokenDrop.algo.ts:32",
          "pc": [
            2874,
            2875,
            2876,
            2877,
            2878,
            2879,
            2880,
            2881,
            2882,
            2883,
            2884,
            2885,
            2886,
            2887,
            2888,
            2889,
            2890,
            2891,
            2892,
            2893,
            2894,
            2895,
            2896,
            2897,
            2898,
            2899
          ]
        },
        {
          "teal": 2924,
          "source": "contracts/TokenDrop.algo.ts:32",
          "errorMessage": "this contract does not implement the given ABI method for call NoOp",
          "pc": [
            2900
          ]
        },
        {
          "teal": 2927,
          "source": "contracts/TokenDrop.algo.ts:32",
          "pc": [
            2901,
            2902,
            2903,
            2904,
            2905,
            2906
          ]
        },
        {
          "teal": 2928,
          "source": "contracts/TokenDrop.algo.ts:32",
          "pc": [
            2907,
            2908,
            2909
          ]
        },
        {
          "teal": 2929,
          "source": "contracts/TokenDrop.algo.ts:32",
          "pc": [
            2910,
            2911,
            2912,
            2913
          ]
        },
        {
          "teal": 2932,
          "source": "contracts/TokenDrop.algo.ts:32",
          "errorMessage": "this contract does not implement the given ABI method for call UpdateApplication",
          "pc": [
            2914
          ]
        }
      ],
      "pcOffsetMethod": "none"
    },
    "clear": {
      "sourceInfo": [],
      "pcOffsetMethod": "none"
    }
  },
  "source": {
    "approval": "",
    "clear": "I3ByYWdtYSB2ZXJzaW9uIDEx"
  },
  "byteCode": {
    "approval": "CyANAQAIIAIEBkADByg4PCYOAAFkEWNyZWF0aW9uRmVlQW1vdW50BBUffHUDdG9rEW1haW50YWluZXJBZGRyZXNzDVRva2VuRHJvcCBmZWUKbGFzdERyb3BJZBFwZXJDbGFpbUZlZUFtb3VudAt0b3RhbENsYWltcwFjDW5mZFJlZ2lzdHJ5SWQJaS5vd25lci5hBGwT7eQxGBQhBgsxGQiNDAo0AAAAAAAACpoAAAomAAAAAAAAAAAAAAA2GgJJFSUSRDYaAReIAAIiQ4oCACcLi/9nJwWL/mcnCSNnJwcjZyqBgK3iBGcnCIGgjQZniYgAAiJDigAAMQA2MgByB0gSRIk2GgFJFSUSRIgAAiJDigEAMQA2MgByB0gSRCcFi/9niTYaAhc2GgEXiAACIkOKAgAxADYyAHIHSBJEi/+BgIl6DUSL/yEEGCMSRIv+iACqIQQLD0Qqi/9nJwiL/meJNhoBFzEWIglJOBAiEkSIAAIiQ4oCAIv/OAcyChJEi/84CDIQEkQyCov+cABMSEEAIbEishAxALIHMhCyCIAMb3B0aW4gcmVmdW5ksgUjsgGzibEhBbIQi/6yETIKshQjshIjsgGziSuIAAUWULAiQ4oAASgqZIwAiwCBqgGICPEIjACLAIETiAjnCIwAiwCMAIkriAAFFlCwIkOKAAGBSYgIzokriAAFFlCwIkOKAAEnCGSJKzYaAReIAARQsCJDigEBKYv/FlC+RIkrNhoBSRWBYRJEMRYiCUk4ECEFEkQxFiEECUk4ECISRIgABRZQsCJDigMBKEcDi/44FDIKEkSL/jgSIw1Ei/44EYv9VwAIFxJEMgqL/jgRcABMSESL/VcACBeL/jgREkSL/VcICBeL/jgSDkSL/jgSi/1XCAgXGCMSRIv9VxAIFzIHgYCjBQgNRIv9VxAIFzIHgZAcCIGA9SQIDkQnBIv9VwAIFxZQvUxIQQAqKScEi/1XAAgXFlC+RBcWUIwAiwC+RIgEJkQnBIv9VwAIFxZQvkQXiAKCi/2IB3cnB2QiCCcHTGcnB2SMAYsBFov+OABQi/44EhZQi/44Eov9VwgIFwoWUIAIAAAAAAAAAABQi/1QjAKLAosBiAKvi/84BzIKEkSI/n+MA4v/OAiLAw9Ei/84CIsDDUEALLEishCL/zgAsgeL/zgIiwMJsgiAEWV4Y2VzcyBtYnIgcmVmdW5ksgUjsgGzsSKyECcFZLIHKmQhBAqyCCcGsgUjsgGzsSKyEDECIgnRBrIHKmQhBAqyCCcGsgUjsgGziwGMAEYDiTYaAReIAAIiQ4oBACgpi/8WUIwAMQAkJSmL/xZQTgK6EkSL/4gBkYk2GgIXNhoBFzEWIglJOBAiEkSIAAIiQ4oDAChHBSmL/hZQjAAxACQlKYv+FlBOAroTRIsAvkSIAuoURDEAIQckKYv+FlBOAroXcABMSESL/hYxAFCMAScKiwFQvUxIFESL/Yv+iALWiP2wjAKI/ZmMA4sCiwMhBAsPRIv/OAcyChJEi/84ADEAEkSL/zgIiwISRIsCgfQDC4HoBwqMBLEishAnBWSyB4sEsggnBrIFI7IBs4sCiwQJiwMJjAWxIrIQMQIiCdEGsgeLBbIIJwayBSOyAbMnCosBUDEXgCAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAFBJVyAAKKhEVwAgvycJZCIIJwlMZ4FIJCmL/hZQTgK6FzEAiwC+RIgBnYk2GgNJFSUSRDYaAkkVJRJENhoBF4gAAiJDigMAKEcDKYv/FlCMAIsAvkSIAc1EMgpzAUiMAYv/Fov+UIwCJwqLAlC8iwEyCnMBSAmMA7EishCL/bIHiwOyCCOyAbOJNhoBF4gAAiJDigEAKEcCKYv/FlC+RIwAMQCLAFcIIBNBAAaLAIgBdEQyCnMBSIwBi/+IAIOL/4gAW4sBMgpzAUgJjAKxIrIQiwBXCCCyB4sCsgiAH3JlZnVuZCBmcm9tIHJlbW92aW5nIHRva2VuIGRyb3CyBSOyAbOJigIAKYv/FlCL/r8nBIv+V0AIFxZQi/8Wv4mKAQAoKYv/FlCMACcEIQckKYv/FlBOAroXFlC8KYv/FlC8iYoBACgpi/8WUIwAIQokKYv/FlBOAroXIw1BAB0hCiQpi/8WUE4CuhckJSmL/xZQTgK6iwC+RIgATTIKIQckKYv/FlBOAroXcABIIxJBADaxIQWyECEHJCmL/xZQTgK6F7IRMgqyFDIKshUjshKAEG9wdC1vdXQgb2YgdG9rZW6yBSOyAbOJigMBKLEhBbIQi/9XQAgXshGL/rIUi/2yEiOyAbOL/1coCBeL/QmMACEKiwAWKYv/VwAIFxZQTgK7IQtJJCmL/1cACBcWUE4CuhciCBYpi/9XAAgXFlBOAruLAIwAiYoBAYv/VygIFyMSSUAACjIHi/9XUAgXDRGJigIAKEcLgVgiKYv/FlBOAroXjACLACMSQQABiTEAjAEpi/8WUL5EjAKLACISSUAABosAIQQSEUlAAAaLACEIEhFBACKL/iMTRIsCV5kIF4wDiwMjEkEAAyKMA4sBi/5wAEiLAw9EiwAiEkEADIv+cQtIiwJXWSASRIsAIQQSQQA9I4wEiwJXeSBJjAVXAAgXjAYjjAeL/osGEkEABiKMBEIAGIsHJAhJJQxBAA6MB4sFiwckWBeMBkL/2osERIsAIQgSQQAPi/5xC0iLAld5CBeIAgdEiwAhBRJBADyL/owIiwiIASZEiwgnDGVEiwESSUAACIsBiwiIAeARRIsIgA1pLnBhcmVudEFwcElEZUQXiwJXeQgXEkSLAIEFEkEAOosBi/6IALaxIQayECcNshqL/rIYgAsACXYudHdpdHRlcrIaI7IBs7Q7IgnFOlcEAFcCAIwJiwkoE0SLACEGEkEAPYsBi/6IAHSxIQayECcNshqL/rIYgA4ADHYuYmx1ZXNreWRpZLIaI7IBs7Q7IgnFOlcEAFcCAIwKiwooE0SLACEJEkEANYsBi/6IAC+L/oAPaS50aW1lUHVyY2hhc2VkZUQXjAuLC4sCV5kIF4EYCyEMCyEMCwgyBw5EiYoCACiL/4wAiwCIACFEiwCIAGIURIsAiACFFESLAIgAlBREiwAnDGVEi/4SRImKAQEoi/+ABmkubmFtZWVEjACxIQayEIAES+IvxrIaJwtkshiLAEkVFlcGAkxQshqL/xayGiOyAbO0OyIJxTpXBAAjU4wAiYoBASiL/4AFaS52ZXJlRFcAAowAiwCAAjEuEklAAAiLAIACMi4SEYwAiYoBAYAJaS5zZWxsYW10i/+IADMjE4mKAQEogBBpLmV4cGlyYXRpb25UaW1li/+IABWMAIsAIxJBAAQjQgAFMgeLAA2MAImKAgGL/4v+ZUxIFEEAAiOJi/+L/mVEF4mKAgEoRwKxIQayEIv/shiADXJlYWRfcHJvcGVydHmyGoANdi5jYUFsZ28uMC5hc7IaI7IBs7Q+jAAjjAGLAYsAFQxBACeLAIsBJViMAosCMgMTSUEABosCi/4SEEEABCJCAAqLASUIjAFC/9AjjABGAomKAQCL/1cYARcjD0lBAAqL/1cYARchCQ4QRIv/VxgBFyEIEklAAAqL/1cYARchBRIRQQAKi/9XOQgXiP6CRIv/VxgBFyEJEkEACYv/V1kIFyMNRImKAQGBxBOL/4GQAwsIiYAEYAoqZzYaAI4B9c4AgAQE6c1FgARkRhHzgATcKhZHgAStFcIZgAQTPm1sgARymQFQgAR2cQrUgAT87tYFgAQ0iyhqgATm214NgAQ2CRKfgAQ36vzkNhoAjgz1sPXQ9g72dfag9rL2wvbZ+Hn4ofnK+igAgARG92UzNhoAjgH1jwA=",
    "clear": "Cw=="
  },
  "compilerInfo": {
    "compiler": "algod",
    "compilerVersion": {
      "major": 4,
      "minor": 0,
      "patch": 1,
      "commitHash": "63d271cf"
    }
  }
}